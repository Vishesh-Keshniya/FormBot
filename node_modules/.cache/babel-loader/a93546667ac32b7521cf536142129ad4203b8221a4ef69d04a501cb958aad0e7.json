{"ast":null,"code":"var _jsxFileName = \"D:\\\\Cuvette\\\\Final evaluation\\\\form-builder\\\\src\\\\Components\\\\Dashboard\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Dashboard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [isLightTheme, setIsLightTheme] = useState(false);\n  const [folders, setFolders] = useState([]);\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const toggleTheme = () => {\n    setIsLightTheme(prevState => !prevState);\n  };\n  const toggleDropdown = () => {\n    setIsDropdownOpen(prevState => !prevState);\n  };\n  const addFolder = () => {\n    const newFolderName = prompt(\"Enter folder name:\");\n    if (newFolderName) {\n      setFolders([...folders, newFolderName]);\n    }\n  };\n  const deleteFolder = index => {\n    setFolders(folders.filter((_, i) => i !== index));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `dashboard-container ${isLightTheme ? \"light\" : \"dark\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"workspace-button\",\n        onClick: toggleDropdown,\n        children: \"Workspace\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), isDropdownOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-menu\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-item\",\n          onClick: toggleTheme,\n          children: \"Toggle Theme\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"theme-toggle\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Light\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"switch\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: !isLightTheme,\n            onChange: toggleTheme\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"slider\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Dark\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"folder-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"create-folder\",\n        onClick: addFolder,\n        children: \"+ Add Folder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), folders.map((folder, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"folder-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: folder\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"delete-button\",\n          onClick: () => deleteFolder(index),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"4V+kqp+MSEvCS8ygPJIHqI15/NY=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Dashboard","_s","isLightTheme","setIsLightTheme","folders","setFolders","isDropdownOpen","setIsDropdownOpen","toggleTheme","prevState","toggleDropdown","addFolder","newFolderName","prompt","deleteFolder","index","filter","_","i","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","onChange","map","folder","_c","$RefreshReg$"],"sources":["D:/Cuvette/Final evaluation/form-builder/src/Components/Dashboard/Dashboard.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Dashboard.css\";\r\n\r\nconst Dashboard = () => {\r\n    const [isLightTheme, setIsLightTheme] = useState(false);\r\n    const [folders, setFolders] = useState([]);\r\n    const [isDropdownOpen, setIsDropdownOpen] = useState(false);\r\n\r\n    const toggleTheme = () => {\r\n        setIsLightTheme((prevState) => !prevState);\r\n    };\r\n\r\n    const toggleDropdown = () => {\r\n        setIsDropdownOpen((prevState) => !prevState);\r\n    };\r\n\r\n    const addFolder = () => {\r\n        const newFolderName = prompt(\"Enter folder name:\");\r\n        if (newFolderName) {\r\n            setFolders([...folders, newFolderName]);\r\n        }\r\n    };\r\n\r\n    const deleteFolder = (index) => {\r\n        setFolders(folders.filter((_, i) => i !== index));\r\n    };\r\n\r\n    return (\r\n        <div className={`dashboard-container ${isLightTheme ? \"light\" : \"dark\"}`}>\r\n            <nav className=\"navbar\">\r\n                <button className=\"workspace-button\" onClick={toggleDropdown}>\r\n                    Workspace\r\n                </button>\r\n                {isDropdownOpen && (\r\n                    <div className=\"dropdown-menu\">\r\n                        <div className=\"dropdown-item\" onClick={toggleTheme}>\r\n                            Toggle Theme\r\n                        </div>\r\n                    </div>\r\n                )}\r\n                <div className=\"theme-toggle\">\r\n                    <span>Light</span>\r\n                    <label className=\"switch\">\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            checked={!isLightTheme}\r\n                            onChange={toggleTheme}\r\n                        />\r\n                        <span className=\"slider\"></span>\r\n                    </label>\r\n                    <span>Dark</span>\r\n                </div>\r\n            </nav>\r\n            <div className=\"folder-list\">\r\n                <button className=\"create-folder\" onClick={addFolder}>\r\n                    + Add Folder\r\n                </button>\r\n                {folders.map((folder, index) => (\r\n                    <div key={index} className=\"folder-item\">\r\n                        <span>{folder}</span>\r\n                        <button\r\n                            className=\"delete-button\"\r\n                            onClick={() => deleteFolder(index)}\r\n                        >\r\n                            Delete\r\n                        </button>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}