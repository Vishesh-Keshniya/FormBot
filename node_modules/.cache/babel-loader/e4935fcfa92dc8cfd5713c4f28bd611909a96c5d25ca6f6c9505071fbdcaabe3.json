{"ast":null,"code":"var _jsxFileName = \"D:\\\\Cuvette\\\\Final evaluation\\\\form-builder\\\\src\\\\Components\\\\Dashboard\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Dashboard.css\";\nimport CreateFolderModal from \"./CreateFolderModal\";\nimport CreateFormModal from \"./CreateFormModal\";\nimport DeleteFolder from \"./DeleteFolder\";\nimport DeleteForm from \"./DeleteForm\";\nimport Settings from \"./Settings\";\nimport ShareModal from \"./ShareModal\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [modalType, setModalType] = useState(null);\n  const [isLightTheme, setIsLightTheme] = useState(false);\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [folders, setFolders] = useState([]);\n  const [forms, setForms] = useState([]);\n  const [deleteFolderIndex, setDeleteFolderIndex] = useState(null);\n  const [deleteFormIndex, setDeleteFormIndex] = useState(null);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [isDeleteFormModalOpen, setIsDeleteFormModalOpen] = useState(false);\n  const [isSettingsOpen, setIsSettingsOpen] = useState(false);\n  const [isShareModalOpen, setIsShareModalOpen] = useState(false);\n  const [selectedFolder, setSelectedFolder] = useState(null);\n  const openModal = type => {\n    setModalType(type);\n    setIsModalOpen(true);\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setModalType(null);\n  };\n  const handleCreateFolder = folderName => {\n    if (folderName.trim()) {\n      setFolders([...folders, folderName.trim()]);\n    }\n    closeModal();\n  };\n  const handleCreateForm = formName => {\n    if (formName.trim() && selectedFolder) {\n      setForms([...forms, `${selectedFolder}:${formName.trim()}`]);\n    }\n    closeModal();\n  };\n  const toggleTheme = () => {\n    setIsLightTheme(prevState => !prevState);\n  };\n  const toggleDropdown = () => {\n    setIsDropdownOpen(prevState => !prevState);\n  };\n  const handleDeleteFolder = index => {\n    const updatedFolders = folders.filter((_, i) => i !== index);\n    setFolders(updatedFolders);\n    if (folders[index] === selectedFolder) {\n      setSelectedFolder(null);\n    }\n  };\n  const handleDeleteForm = index => {\n    const updatedForms = forms.filter((_, i) => i !== index);\n    setForms(updatedForms);\n  };\n  const openDeleteFolderModal = index => {\n    setDeleteFolderIndex(index);\n    setIsDeleteModalOpen(true);\n  };\n  const openDeleteFormModal = index => {\n    setDeleteFormIndex(index);\n    setIsDeleteFormModalOpen(true);\n  };\n  const closeDeleteFolderModal = () => {\n    setDeleteFolderIndex(null);\n    setIsDeleteModalOpen(false);\n  };\n  const closeDeleteFormModal = () => {\n    setDeleteFormIndex(null);\n    setIsDeleteFormModalOpen(false);\n  };\n  const confirmDeleteFolder = () => {\n    if (deleteFolderIndex !== null) {\n      handleDeleteFolder(deleteFolderIndex);\n    }\n    closeDeleteFolderModal();\n  };\n  const confirmDeleteForm = () => {\n    if (deleteFormIndex !== null) {\n      handleDeleteForm(deleteFormIndex);\n    }\n    closeDeleteFormModal();\n  };\n  const openSettings = () => {\n    setIsSettingsOpen(true);\n  };\n  const closeSettings = () => {\n    setIsSettingsOpen(false);\n  };\n  const openShareModal = () => {\n    setIsShareModalOpen(true);\n  };\n  const closeShareModal = () => {\n    setIsShareModalOpen(false);\n  };\n  const handleFolderClick = folder => {\n    setSelectedFolder(folder === selectedFolder ? null : folder);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `dashboard-container ${isLightTheme ? \"light\" : \"dark\"}`,\n    children: isSettingsOpen ? /*#__PURE__*/_jsxDEV(Settings, {\n      closeSettings: closeSettings\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"navbar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"workspace-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"workspace-button\",\n            onClick: toggleDropdown,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Dewank Rastogi's workspace\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"dropdown-icon\",\n              src: \"drop.png\",\n              alt: \"Dropdown Icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this), isDropdownOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dropdown-menu\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"dropdown-item\",\n              onClick: openSettings,\n              children: \"Settings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"dropdown-item logout\",\n              children: \"Log Out\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"theme-toggle\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Light\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"switch\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: !isLightTheme,\n              onChange: toggleTheme\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"slider\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Dark\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"share-button\",\n          onClick: openShareModal,\n          children: \"Share\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Dashboard-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"folder-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"create-folder\",\n            onClick: () => openModal(\"folder\"),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"folder.png\",\n              className: \"folder\",\n              alt: \"Folder\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 17\n            }, this), \"Create a folder\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this), folders.map((folder, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `folder-item ${selectedFolder === folder ? \"selected-folder\" : \"\"}`,\n            onClick: () => handleFolderClick(folder),\n            style: {\n              backgroundColor: selectedFolder === folder ? \"#fff\" : \"transparent\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: folder\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"delete-button\",\n              onClick: e => {\n                e.stopPropagation(); // Prevent folder click\n                openDeleteFolderModal(index);\n              },\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"del.png\",\n                alt: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-list\",\n          children: selectedFolder && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Forms in \", selectedFolder, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"create-typebot\",\n              onClick: () => openModal(\"form\"),\n              children: \"Create a Form\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 19\n            }, this), forms.filter(form => form.startsWith(`${selectedFolder}:`)).map((form, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: form.replace(`${selectedFolder}:`, \"\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"delete-button-form\",\n                onClick: () => openDeleteFormModal(index),\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: \"del.png\",\n                  className: \"del-form\",\n                  alt: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 25\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 23\n            }, this))]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this), isModalOpen && modalType === \"folder\" && /*#__PURE__*/_jsxDEV(CreateFolderModal, {\n        closeModal: closeModal,\n        isLightTheme: isLightTheme,\n        onCreateFolder: handleCreateFolder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 13\n      }, this), isModalOpen && modalType === \"form\" && /*#__PURE__*/_jsxDEV(CreateFormModal, {\n        closeModal: closeModal,\n        isLightTheme: isLightTheme,\n        onCreateForm: handleCreateForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 13\n      }, this), isDeleteModalOpen && /*#__PURE__*/_jsxDEV(DeleteFolder, {\n        closeModal: closeDeleteFolderModal,\n        isLightTheme: isLightTheme,\n        onConfirm: confirmDeleteFolder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 13\n      }, this), isDeleteFormModalOpen && /*#__PURE__*/_jsxDEV(DeleteForm, {\n        closeModal: closeDeleteFormModal,\n        isLightTheme: isLightTheme,\n        onConfirm: confirmDeleteForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 13\n      }, this), isShareModalOpen && /*#__PURE__*/_jsxDEV(ShareModal, {\n        isOpen: isShareModalOpen,\n        onClose: closeShareModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"f3HGSuXIu4fcsD9qDwBtyu10qE0=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","CreateFolderModal","CreateFormModal","DeleteFolder","DeleteForm","Settings","ShareModal","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","isModalOpen","setIsModalOpen","modalType","setModalType","isLightTheme","setIsLightTheme","isDropdownOpen","setIsDropdownOpen","folders","setFolders","forms","setForms","deleteFolderIndex","setDeleteFolderIndex","deleteFormIndex","setDeleteFormIndex","isDeleteModalOpen","setIsDeleteModalOpen","isDeleteFormModalOpen","setIsDeleteFormModalOpen","isSettingsOpen","setIsSettingsOpen","isShareModalOpen","setIsShareModalOpen","selectedFolder","setSelectedFolder","openModal","type","closeModal","handleCreateFolder","folderName","trim","handleCreateForm","formName","toggleTheme","prevState","toggleDropdown","handleDeleteFolder","index","updatedFolders","filter","_","i","handleDeleteForm","updatedForms","openDeleteFolderModal","openDeleteFormModal","closeDeleteFolderModal","closeDeleteFormModal","confirmDeleteFolder","confirmDeleteForm","openSettings","closeSettings","openShareModal","closeShareModal","handleFolderClick","folder","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","checked","onChange","map","style","backgroundColor","e","stopPropagation","form","startsWith","replace","onCreateFolder","onCreateForm","onConfirm","isOpen","onClose","_c","$RefreshReg$"],"sources":["D:/Cuvette/Final evaluation/form-builder/src/Components/Dashboard/Dashboard.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Dashboard.css\";\r\nimport CreateFolderModal from \"./CreateFolderModal\";\r\nimport CreateFormModal from \"./CreateFormModal\";\r\nimport DeleteFolder from \"./DeleteFolder\";\r\nimport DeleteForm from \"./DeleteForm\";\r\nimport Settings from \"./Settings\";\r\nimport ShareModal from \"./ShareModal\";\r\n\r\nconst Dashboard = () => {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [modalType, setModalType] = useState(null);\r\n  const [isLightTheme, setIsLightTheme] = useState(false);\r\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\r\n  const [folders, setFolders] = useState([]);\r\n  const [forms, setForms] = useState([]);\r\n  const [deleteFolderIndex, setDeleteFolderIndex] = useState(null);\r\n  const [deleteFormIndex, setDeleteFormIndex] = useState(null);\r\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\r\n  const [isDeleteFormModalOpen, setIsDeleteFormModalOpen] = useState(false);\r\n  const [isSettingsOpen, setIsSettingsOpen] = useState(false);\r\n  const [isShareModalOpen, setIsShareModalOpen] = useState(false);\r\n  const [selectedFolder, setSelectedFolder] = useState(null);\r\n\r\n  const openModal = (type) => {\r\n    setModalType(type);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n    setModalType(null);\r\n  };\r\n\r\n  const handleCreateFolder = (folderName) => {\r\n    if (folderName.trim()) {\r\n      setFolders([...folders, folderName.trim()]);\r\n    }\r\n    closeModal();\r\n  };\r\n\r\n  const handleCreateForm = (formName) => {\r\n    if (formName.trim() && selectedFolder) {\r\n      setForms([...forms, `${selectedFolder}:${formName.trim()}`]);\r\n    }\r\n    closeModal();\r\n  };\r\n\r\n  const toggleTheme = () => {\r\n    setIsLightTheme((prevState) => !prevState);\r\n  };\r\n\r\n  const toggleDropdown = () => {\r\n    setIsDropdownOpen((prevState) => !prevState);\r\n  };\r\n\r\n  const handleDeleteFolder = (index) => {\r\n    const updatedFolders = folders.filter((_, i) => i !== index);\r\n    setFolders(updatedFolders);\r\n    if (folders[index] === selectedFolder) {\r\n      setSelectedFolder(null);\r\n    }\r\n  };\r\n\r\n  const handleDeleteForm = (index) => {\r\n    const updatedForms = forms.filter((_, i) => i !== index);\r\n    setForms(updatedForms);\r\n  };\r\n\r\n  const openDeleteFolderModal = (index) => {\r\n    setDeleteFolderIndex(index);\r\n    setIsDeleteModalOpen(true);\r\n  };\r\n\r\n  const openDeleteFormModal = (index) => {\r\n    setDeleteFormIndex(index);\r\n    setIsDeleteFormModalOpen(true);\r\n  };\r\n\r\n  const closeDeleteFolderModal = () => {\r\n    setDeleteFolderIndex(null);\r\n    setIsDeleteModalOpen(false);\r\n  };\r\n\r\n  const closeDeleteFormModal = () => {\r\n    setDeleteFormIndex(null);\r\n    setIsDeleteFormModalOpen(false);\r\n  };\r\n\r\n  const confirmDeleteFolder = () => {\r\n    if (deleteFolderIndex !== null) {\r\n      handleDeleteFolder(deleteFolderIndex);\r\n    }\r\n    closeDeleteFolderModal();\r\n  };\r\n\r\n  const confirmDeleteForm = () => {\r\n    if (deleteFormIndex !== null) {\r\n      handleDeleteForm(deleteFormIndex);\r\n    }\r\n    closeDeleteFormModal();\r\n  };\r\n\r\n  const openSettings = () => {\r\n    setIsSettingsOpen(true);\r\n  };\r\n\r\n  const closeSettings = () => {\r\n    setIsSettingsOpen(false);\r\n  };\r\n\r\n  const openShareModal = () => {\r\n    setIsShareModalOpen(true);\r\n  };\r\n\r\n  const closeShareModal = () => {\r\n    setIsShareModalOpen(false);\r\n  };\r\n\r\n  const handleFolderClick = (folder) => {\r\n    setSelectedFolder(folder === selectedFolder ? null : folder);\r\n  };\r\n\r\n  return (\r\n    <div className={`dashboard-container ${isLightTheme ? \"light\" : \"dark\"}`}>\r\n      {isSettingsOpen ? (\r\n        <Settings closeSettings={closeSettings} />\r\n      ) : (\r\n        <>\r\n          <nav className=\"navbar\">\r\n            <div className=\"workspace-container\">\r\n              <button className=\"workspace-button\" onClick={toggleDropdown}>\r\n                <span>Dewank Rastogi's workspace</span>\r\n                <img className=\"dropdown-icon\" src=\"drop.png\" alt=\"Dropdown Icon\" />\r\n              </button>\r\n              {isDropdownOpen && (\r\n                <div className=\"dropdown-menu\">\r\n                  <button className=\"dropdown-item\" onClick={openSettings}>\r\n                    Settings\r\n                  </button>\r\n                  <button className=\"dropdown-item logout\">Log Out</button>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"theme-toggle\">\r\n              <span>Light</span>\r\n              <label className=\"switch\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={!isLightTheme}\r\n                  onChange={toggleTheme}\r\n                />\r\n                <span className=\"slider\"></span>\r\n              </label>\r\n              <span>Dark</span>\r\n            </div>\r\n            <button className=\"share-button\" onClick={openShareModal}>\r\n              Share\r\n            </button>\r\n          </nav>\r\n\r\n          <div className=\"Dashboard-content\">\r\n            <div className=\"folder-list\">\r\n              <button className=\"create-folder\" onClick={() => openModal(\"folder\")}>\r\n                <img src=\"folder.png\" className=\"folder\" alt=\"Folder\" />\r\n                Create a folder\r\n              </button>\r\n              {folders.map((folder, index) => (\r\n                <div\r\n                  key={index}\r\n                  className={`folder-item ${selectedFolder === folder ? \"selected-folder\" : \"\"}`}\r\n                  onClick={() => handleFolderClick(folder)}\r\n                  style={{\r\n                    backgroundColor: selectedFolder === folder ? \"#fff\" : \"transparent\",\r\n                  }}\r\n                >\r\n                  <span>{folder}</span>\r\n                  <button\r\n                    className=\"delete-button\"\r\n                    onClick={(e) => {\r\n                      e.stopPropagation(); // Prevent folder click\r\n                      openDeleteFolderModal(index);\r\n                    }}\r\n                  >\r\n                    <img src=\"del.png\" alt=\"Delete\" />\r\n                  </button>\r\n                </div>\r\n              ))}\r\n            </div>\r\n\r\n            <div className=\"form-list\">\r\n              {selectedFolder && (\r\n                <>\r\n                  <h3>Forms in {selectedFolder}:</h3>\r\n                  <button className=\"create-typebot\" onClick={() => openModal(\"form\")}>\r\n                    Create a Form\r\n                  </button>\r\n                  {forms\r\n                    .filter((form) => form.startsWith(`${selectedFolder}:`))\r\n                    .map((form, index) => (\r\n                      <div key={index} className=\"form-item\">\r\n                        <span>{form.replace(`${selectedFolder}:`, \"\")}</span>\r\n                        <button\r\n                          className=\"delete-button-form\"\r\n                          onClick={() => openDeleteFormModal(index)}\r\n                        >\r\n                          <img src=\"del.png\" className=\"del-form\" alt=\"Delete\" />\r\n                        </button>\r\n                      </div>\r\n                    ))}\r\n                </>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {isModalOpen && modalType === \"folder\" && (\r\n            <CreateFolderModal\r\n              closeModal={closeModal}\r\n              isLightTheme={isLightTheme}\r\n              onCreateFolder={handleCreateFolder}\r\n            />\r\n          )}\r\n          {isModalOpen && modalType === \"form\" && (\r\n            <CreateFormModal\r\n              closeModal={closeModal}\r\n              isLightTheme={isLightTheme}\r\n              onCreateForm={handleCreateForm}\r\n            />\r\n          )}\r\n          {isDeleteModalOpen && (\r\n            <DeleteFolder\r\n              closeModal={closeDeleteFolderModal}\r\n              isLightTheme={isLightTheme}\r\n              onConfirm={confirmDeleteFolder}\r\n            />\r\n          )}\r\n          {isDeleteFormModalOpen && (\r\n            <DeleteForm\r\n              closeModal={closeDeleteFormModal}\r\n              isLightTheme={isLightTheme}\r\n              onConfirm={confirmDeleteForm}\r\n            />\r\n          )}\r\n          {isShareModalOpen && (\r\n            <ShareModal isOpen={isShareModalOpen} onClose={closeShareModal} />\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,iBAAiB;AACxB,OAAOC,iBAAiB,MAAM,qBAAqB;AACnD,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEtC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACiB,YAAY,EAAEC,eAAe,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACmB,cAAc,EAAEC,iBAAiB,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACqB,OAAO,EAAEC,UAAU,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACuB,KAAK,EAAEC,QAAQ,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACyB,iBAAiB,EAAEC,oBAAoB,CAAC,GAAG1B,QAAQ,CAAC,IAAI,CAAC;EAChE,MAAM,CAAC2B,eAAe,EAAEC,kBAAkB,CAAC,GAAG5B,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAAC6B,iBAAiB,EAAEC,oBAAoB,CAAC,GAAG9B,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAAC+B,qBAAqB,EAAEC,wBAAwB,CAAC,GAAGhC,QAAQ,CAAC,KAAK,CAAC;EACzE,MAAM,CAACiC,cAAc,EAAEC,iBAAiB,CAAC,GAAGlC,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACmC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGpC,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAM,CAACqC,cAAc,EAAEC,iBAAiB,CAAC,GAAGtC,QAAQ,CAAC,IAAI,CAAC;EAE1D,MAAMuC,SAAS,GAAIC,IAAI,IAAK;IAC1BxB,YAAY,CAACwB,IAAI,CAAC;IAClB1B,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAM2B,UAAU,GAAGA,CAAA,KAAM;IACvB3B,cAAc,CAAC,KAAK,CAAC;IACrBE,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAM0B,kBAAkB,GAAIC,UAAU,IAAK;IACzC,IAAIA,UAAU,CAACC,IAAI,CAAC,CAAC,EAAE;MACrBtB,UAAU,CAAC,CAAC,GAAGD,OAAO,EAAEsB,UAAU,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC7C;IACAH,UAAU,CAAC,CAAC;EACd,CAAC;EAED,MAAMI,gBAAgB,GAAIC,QAAQ,IAAK;IACrC,IAAIA,QAAQ,CAACF,IAAI,CAAC,CAAC,IAAIP,cAAc,EAAE;MACrCb,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAE,GAAGc,cAAc,IAAIS,QAAQ,CAACF,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;IAC9D;IACAH,UAAU,CAAC,CAAC;EACd,CAAC;EAED,MAAMM,WAAW,GAAGA,CAAA,KAAM;IACxB7B,eAAe,CAAE8B,SAAS,IAAK,CAACA,SAAS,CAAC;EAC5C,CAAC;EAED,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3B7B,iBAAiB,CAAE4B,SAAS,IAAK,CAACA,SAAS,CAAC;EAC9C,CAAC;EAED,MAAME,kBAAkB,GAAIC,KAAK,IAAK;IACpC,MAAMC,cAAc,GAAG/B,OAAO,CAACgC,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,KAAKJ,KAAK,CAAC;IAC5D7B,UAAU,CAAC8B,cAAc,CAAC;IAC1B,IAAI/B,OAAO,CAAC8B,KAAK,CAAC,KAAKd,cAAc,EAAE;MACrCC,iBAAiB,CAAC,IAAI,CAAC;IACzB;EACF,CAAC;EAED,MAAMkB,gBAAgB,GAAIL,KAAK,IAAK;IAClC,MAAMM,YAAY,GAAGlC,KAAK,CAAC8B,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,KAAKJ,KAAK,CAAC;IACxD3B,QAAQ,CAACiC,YAAY,CAAC;EACxB,CAAC;EAED,MAAMC,qBAAqB,GAAIP,KAAK,IAAK;IACvCzB,oBAAoB,CAACyB,KAAK,CAAC;IAC3BrB,oBAAoB,CAAC,IAAI,CAAC;EAC5B,CAAC;EAED,MAAM6B,mBAAmB,GAAIR,KAAK,IAAK;IACrCvB,kBAAkB,CAACuB,KAAK,CAAC;IACzBnB,wBAAwB,CAAC,IAAI,CAAC;EAChC,CAAC;EAED,MAAM4B,sBAAsB,GAAGA,CAAA,KAAM;IACnClC,oBAAoB,CAAC,IAAI,CAAC;IAC1BI,oBAAoB,CAAC,KAAK,CAAC;EAC7B,CAAC;EAED,MAAM+B,oBAAoB,GAAGA,CAAA,KAAM;IACjCjC,kBAAkB,CAAC,IAAI,CAAC;IACxBI,wBAAwB,CAAC,KAAK,CAAC;EACjC,CAAC;EAED,MAAM8B,mBAAmB,GAAGA,CAAA,KAAM;IAChC,IAAIrC,iBAAiB,KAAK,IAAI,EAAE;MAC9ByB,kBAAkB,CAACzB,iBAAiB,CAAC;IACvC;IACAmC,sBAAsB,CAAC,CAAC;EAC1B,CAAC;EAED,MAAMG,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAIpC,eAAe,KAAK,IAAI,EAAE;MAC5B6B,gBAAgB,CAAC7B,eAAe,CAAC;IACnC;IACAkC,oBAAoB,CAAC,CAAC;EACxB,CAAC;EAED,MAAMG,YAAY,GAAGA,CAAA,KAAM;IACzB9B,iBAAiB,CAAC,IAAI,CAAC;EACzB,CAAC;EAED,MAAM+B,aAAa,GAAGA,CAAA,KAAM;IAC1B/B,iBAAiB,CAAC,KAAK,CAAC;EAC1B,CAAC;EAED,MAAMgC,cAAc,GAAGA,CAAA,KAAM;IAC3B9B,mBAAmB,CAAC,IAAI,CAAC;EAC3B,CAAC;EAED,MAAM+B,eAAe,GAAGA,CAAA,KAAM;IAC5B/B,mBAAmB,CAAC,KAAK,CAAC;EAC5B,CAAC;EAED,MAAMgC,iBAAiB,GAAIC,MAAM,IAAK;IACpC/B,iBAAiB,CAAC+B,MAAM,KAAKhC,cAAc,GAAG,IAAI,GAAGgC,MAAM,CAAC;EAC9D,CAAC;EAED,oBACE7D,OAAA;IAAK8D,SAAS,EAAE,uBAAuBrD,YAAY,GAAG,OAAO,GAAG,MAAM,EAAG;IAAAsD,QAAA,EACtEtC,cAAc,gBACbzB,OAAA,CAACH,QAAQ;MAAC4D,aAAa,EAAEA;IAAc;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAE1CnE,OAAA,CAAAE,SAAA;MAAA6D,QAAA,gBACE/D,OAAA;QAAK8D,SAAS,EAAC,QAAQ;QAAAC,QAAA,gBACrB/D,OAAA;UAAK8D,SAAS,EAAC,qBAAqB;UAAAC,QAAA,gBAClC/D,OAAA;YAAQ8D,SAAS,EAAC,kBAAkB;YAACM,OAAO,EAAE3B,cAAe;YAAAsB,QAAA,gBAC3D/D,OAAA;cAAA+D,QAAA,EAAM;YAA0B;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACvCnE,OAAA;cAAK8D,SAAS,EAAC,eAAe;cAACO,GAAG,EAAC,UAAU;cAACC,GAAG,EAAC;YAAe;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9D,CAAC,EACRxD,cAAc,iBACbX,OAAA;YAAK8D,SAAS,EAAC,eAAe;YAAAC,QAAA,gBAC5B/D,OAAA;cAAQ8D,SAAS,EAAC,eAAe;cAACM,OAAO,EAAEZ,YAAa;cAAAO,QAAA,EAAC;YAEzD;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACTnE,OAAA;cAAQ8D,SAAS,EAAC,sBAAsB;cAAAC,QAAA,EAAC;YAAO;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtD,CACN;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eAENnE,OAAA;UAAK8D,SAAS,EAAC,cAAc;UAAAC,QAAA,gBAC3B/D,OAAA;YAAA+D,QAAA,EAAM;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAClBnE,OAAA;YAAO8D,SAAS,EAAC,QAAQ;YAAAC,QAAA,gBACvB/D,OAAA;cACEgC,IAAI,EAAC,UAAU;cACfuC,OAAO,EAAE,CAAC9D,YAAa;cACvB+D,QAAQ,EAAEjC;YAAY;cAAAyB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACvB,CAAC,eACFnE,OAAA;cAAM8D,SAAS,EAAC;YAAQ;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3B,CAAC,eACRnE,OAAA;YAAA+D,QAAA,EAAM;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACd,CAAC,eACNnE,OAAA;UAAQ8D,SAAS,EAAC,cAAc;UAACM,OAAO,EAAEV,cAAe;UAAAK,QAAA,EAAC;QAE1D;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eAENnE,OAAA;QAAK8D,SAAS,EAAC,mBAAmB;QAAAC,QAAA,gBAChC/D,OAAA;UAAK8D,SAAS,EAAC,aAAa;UAAAC,QAAA,gBAC1B/D,OAAA;YAAQ8D,SAAS,EAAC,eAAe;YAACM,OAAO,EAAEA,CAAA,KAAMrC,SAAS,CAAC,QAAQ,CAAE;YAAAgC,QAAA,gBACnE/D,OAAA;cAAKqE,GAAG,EAAC,YAAY;cAACP,SAAS,EAAC,QAAQ;cAACQ,GAAG,EAAC;YAAQ;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,mBAE1D;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EACRtD,OAAO,CAAC4D,GAAG,CAAC,CAACZ,MAAM,EAAElB,KAAK,kBACzB3C,OAAA;YAEE8D,SAAS,EAAE,eAAejC,cAAc,KAAKgC,MAAM,GAAG,iBAAiB,GAAG,EAAE,EAAG;YAC/EO,OAAO,EAAEA,CAAA,KAAMR,iBAAiB,CAACC,MAAM,CAAE;YACzCa,KAAK,EAAE;cACLC,eAAe,EAAE9C,cAAc,KAAKgC,MAAM,GAAG,MAAM,GAAG;YACxD,CAAE;YAAAE,QAAA,gBAEF/D,OAAA;cAAA+D,QAAA,EAAOF;YAAM;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACrBnE,OAAA;cACE8D,SAAS,EAAC,eAAe;cACzBM,OAAO,EAAGQ,CAAC,IAAK;gBACdA,CAAC,CAACC,eAAe,CAAC,CAAC,CAAC,CAAC;gBACrB3B,qBAAqB,CAACP,KAAK,CAAC;cAC9B,CAAE;cAAAoB,QAAA,eAEF/D,OAAA;gBAAKqE,GAAG,EAAC,SAAS;gBAACC,GAAG,EAAC;cAAQ;gBAAAN,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC5B,CAAC;UAAA,GAhBJxB,KAAK;YAAAqB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAiBP,CACN,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eAENnE,OAAA;UAAK8D,SAAS,EAAC,WAAW;UAAAC,QAAA,EACvBlC,cAAc,iBACb7B,OAAA,CAAAE,SAAA;YAAA6D,QAAA,gBACE/D,OAAA;cAAA+D,QAAA,GAAI,WAAS,EAAClC,cAAc,EAAC,GAAC;YAAA;cAAAmC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACnCnE,OAAA;cAAQ8D,SAAS,EAAC,gBAAgB;cAACM,OAAO,EAAEA,CAAA,KAAMrC,SAAS,CAAC,MAAM,CAAE;cAAAgC,QAAA,EAAC;YAErE;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,EACRpD,KAAK,CACH8B,MAAM,CAAEiC,IAAI,IAAKA,IAAI,CAACC,UAAU,CAAC,GAAGlD,cAAc,GAAG,CAAC,CAAC,CACvD4C,GAAG,CAAC,CAACK,IAAI,EAAEnC,KAAK,kBACf3C,OAAA;cAAiB8D,SAAS,EAAC,WAAW;cAAAC,QAAA,gBACpC/D,OAAA;gBAAA+D,QAAA,EAAOe,IAAI,CAACE,OAAO,CAAC,GAAGnD,cAAc,GAAG,EAAE,EAAE;cAAC;gBAAAmC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACrDnE,OAAA;gBACE8D,SAAS,EAAC,oBAAoB;gBAC9BM,OAAO,EAAEA,CAAA,KAAMjB,mBAAmB,CAACR,KAAK,CAAE;gBAAAoB,QAAA,eAE1C/D,OAAA;kBAAKqE,GAAG,EAAC,SAAS;kBAACP,SAAS,EAAC,UAAU;kBAACQ,GAAG,EAAC;gBAAQ;kBAAAN,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACjD,CAAC;YAAA,GAPDxB,KAAK;cAAAqB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAQV,CACN,CAAC;UAAA,eACJ;QACH;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,EAEL9D,WAAW,IAAIE,SAAS,KAAK,QAAQ,iBACpCP,OAAA,CAACP,iBAAiB;QAChBwC,UAAU,EAAEA,UAAW;QACvBxB,YAAY,EAAEA,YAAa;QAC3BwE,cAAc,EAAE/C;MAAmB;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC,CACF,EACA9D,WAAW,IAAIE,SAAS,KAAK,MAAM,iBAClCP,OAAA,CAACN,eAAe;QACduC,UAAU,EAAEA,UAAW;QACvBxB,YAAY,EAAEA,YAAa;QAC3ByE,YAAY,EAAE7C;MAAiB;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CACF,EACA9C,iBAAiB,iBAChBrB,OAAA,CAACL,YAAY;QACXsC,UAAU,EAAEmB,sBAAuB;QACnC3C,YAAY,EAAEA,YAAa;QAC3B0E,SAAS,EAAE7B;MAAoB;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CACF,EACA5C,qBAAqB,iBACpBvB,OAAA,CAACJ,UAAU;QACTqC,UAAU,EAAEoB,oBAAqB;QACjC5C,YAAY,EAAEA,YAAa;QAC3B0E,SAAS,EAAE5B;MAAkB;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CACF,EACAxC,gBAAgB,iBACf3B,OAAA,CAACF,UAAU;QAACsF,MAAM,EAAEzD,gBAAiB;QAAC0D,OAAO,EAAE1B;MAAgB;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAClE;IAAA,eACD;EACH;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC/D,EAAA,CAlPID,SAAS;AAAAmF,EAAA,GAATnF,SAAS;AAoPf,eAAeA,SAAS;AAAC,IAAAmF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}