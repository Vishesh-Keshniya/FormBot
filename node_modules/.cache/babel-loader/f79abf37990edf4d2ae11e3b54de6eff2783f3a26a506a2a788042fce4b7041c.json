{"ast":null,"code":"var _jsxFileName = \"D:\\\\Cuvette\\\\Final evaluation\\\\form-builder\\\\src\\\\Components\\\\Dashboard\\\\Dashboard.js\",\n  _s = $RefreshSig$();\n// Updated Dashboard Component\nimport React, { useState } from \"react\";\nimport \"./Dashboard.css\";\nimport CreateFolderModal from \"./CreateFolderModal\";\nimport CreateFormModal from \"./CreateFormModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [modalType, setModalType] = useState(null);\n  const [isLightTheme, setIsLightTheme] = useState(false);\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n\n  // Function to open modal with specified type\n  const openModal = type => {\n    setModalType(type);\n    setIsModalOpen(true);\n  };\n\n  // Function to close modal\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setModalType(null);\n  };\n\n  // Toggle theme\n  const toggleTheme = () => {\n    setIsLightTheme(prevState => !prevState);\n  };\n\n  // Toggle dropdown menu\n  const toggleDropdown = () => {\n    setIsDropdownOpen(prevState => !prevState);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `dashboard-container ${isLightTheme ? \"light\" : \"dark\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: `navbar ${isLightTheme ? \"light\" : \"dark\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `workspace-container ${isLightTheme ? \"light\" : \"dark\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `workspace-button ${isLightTheme ? \"light\" : \"dark\"}`,\n          onClick: toggleDropdown,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Dewank Rastogi's workspace\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"dropdown-icon\",\n            src: \"drop.png\",\n            alt: \"Dropdown Icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), isDropdownOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `dropdown-menu ${isLightTheme ? \"light\" : \"dark\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"dropdown-item\",\n            children: \"Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"dropdown-item logout\",\n            children: \"Log Out\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"theme-toggle\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Light\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"switch\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: !isLightTheme,\n            onChange: toggleTheme\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"slider\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Dark\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"share-button\",\n        children: \"Share\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"create-folder\",\n        onClick: () => openModal(\"folder\"),\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"folder.png\",\n          className: \"folder\",\n          alt: \"Folder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), \"Create a folder\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"create-typebot\",\n        onClick: () => openModal(\"form\"),\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"plus\",\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 45\n          }, this), \"Create a typebot\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), isModalOpen && modalType === \"folder\" && /*#__PURE__*/_jsxDEV(CreateFolderModal, {\n      closeModal: closeModal,\n      isLightTheme: isLightTheme\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this), isModalOpen && modalType === \"form\" && /*#__PURE__*/_jsxDEV(CreateFormModal, {\n      closeModal: closeModal,\n      isLightTheme: isLightTheme\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"ur/1U5TLNvoeA/8XbRW0j1DKUI8=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","CreateFolderModal","CreateFormModal","jsxDEV","_jsxDEV","Dashboard","_s","isModalOpen","setIsModalOpen","modalType","setModalType","isLightTheme","setIsLightTheme","isDropdownOpen","setIsDropdownOpen","openModal","type","closeModal","toggleTheme","prevState","toggleDropdown","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","checked","onChange","_c","$RefreshReg$"],"sources":["D:/Cuvette/Final evaluation/form-builder/src/Components/Dashboard/Dashboard.js"],"sourcesContent":["// Updated Dashboard Component\r\nimport React, { useState } from \"react\";\r\nimport \"./Dashboard.css\";\r\nimport CreateFolderModal from \"./CreateFolderModal\";\r\nimport CreateFormModal from \"./CreateFormModal\";\r\n\r\nconst Dashboard = () => {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [modalType, setModalType] = useState(null);\r\n  const [isLightTheme, setIsLightTheme] = useState(false);\r\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\r\n\r\n  // Function to open modal with specified type\r\n  const openModal = (type) => {\r\n    setModalType(type);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  // Function to close modal\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n    setModalType(null);\r\n  };\r\n\r\n  // Toggle theme\r\n  const toggleTheme = () => {\r\n    setIsLightTheme((prevState) => !prevState);\r\n  };\r\n\r\n  // Toggle dropdown menu\r\n  const toggleDropdown = () => {\r\n    setIsDropdownOpen((prevState) => !prevState);\r\n  };\r\n\r\n  return (\r\n    <div className={`dashboard-container ${isLightTheme ? \"light\" : \"dark\"}`}>\r\n      {/* Navbar */}\r\n      <nav className={`navbar ${isLightTheme ? \"light\" : \"dark\"}`}>\r\n        <div\r\n          className={`workspace-container ${\r\n            isLightTheme ? \"light\" : \"dark\"\r\n          }`}\r\n        >\r\n          <button\r\n            className={`workspace-button ${\r\n              isLightTheme ? \"light\" : \"dark\"\r\n            }`}\r\n            onClick={toggleDropdown}\r\n          >\r\n            <span>Dewank Rastogi's workspace</span>\r\n            <img className=\"dropdown-icon\" src=\"drop.png\" alt=\"Dropdown Icon\" />\r\n          </button>\r\n\r\n          {/* Dropdown menu */}\r\n          {isDropdownOpen && (\r\n            <div\r\n              className={`dropdown-menu ${isLightTheme ? \"light\" : \"dark\"}`}\r\n            >\r\n              <button className=\"dropdown-item\">Settings</button>\r\n              <button className=\"dropdown-item logout\">Log Out</button>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"theme-toggle\">\r\n          <span>Light</span>\r\n          <label className=\"switch\">\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={!isLightTheme}\r\n              onChange={toggleTheme}\r\n            />\r\n            <span className=\"slider\"></span>\r\n          </label>\r\n          <span>Dark</span>\r\n        </div>\r\n        <button className=\"share-button\">Share</button>\r\n      </nav>\r\n\r\n      {/* Dashboard Content */}\r\n      <div className=\"dashboard-content\">\r\n        <button className=\"create-folder\" onClick={() => openModal(\"folder\")}>\r\n          <img src=\"folder.png\" className=\"folder\" alt=\"Folder\" />\r\n          Create a folder\r\n        </button>\r\n        <button className=\"create-typebot\" onClick={() => openModal(\"form\")}>\r\n          <p>\r\n            <span className=\"plus\">+</span> <br />\r\n            Create a typebot\r\n          </p>\r\n        </button>\r\n      </div>\r\n\r\n      {/* Conditional rendering of modals */}\r\n      {isModalOpen && modalType === \"folder\" && (\r\n        <CreateFolderModal closeModal={closeModal} isLightTheme={isLightTheme} />\r\n      )}\r\n      {isModalOpen && modalType === \"form\" && (\r\n        <CreateFormModal closeModal={closeModal} isLightTheme={isLightTheme} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}