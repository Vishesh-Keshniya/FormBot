{"ast":null,"code":"var _jsxFileName = \"D:\\\\Cuvette\\\\MERN\\\\Client\\\\form-builder\\\\src\\\\Components\\\\Login-page\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport { useNavigate } from \"react-router-dom\";\nimport React, { useState } from 'react';\nimport './LoginPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = ({\n  onBackClick,\n  onNavigateToSignUp,\n  onLoginSuccess\n}) => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n\n  // Handle Back Button Click\n  const handleBackClick = () => {\n    if (onBackClick) onBackClick();\n  };\n\n  // Handle Register Button Click\n  const handleRegisterClick = () => {\n    if (onNavigateToSignUp) onNavigateToSignUp();\n  };\n\n  // Handle Form Submit\n  const handleLoginSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    setLoading(true); // Set loading state to true\n\n    try {\n      const response = await fetch('http://localhost:8000/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        alert('Login Successful!');\n        localStorage.setItem('jwtToken', data.token); // Store token in localStorage\n        console.log('JWT Token:', data.token); // Log to ensure token is stored\n        if (onLoginSuccess) onLoginSuccess(); // Optionally call onLoginSuccess\n        navigate(\"/dashboard\"); // Navigate to the dashboard after successful login\n      } else {\n        setError(data.message || 'Invalid email or password.');\n      }\n    } catch (error) {\n      setError('An error occurred. Please try again later.');\n      console.error('Login error:', error); // For debugging\n    } finally {\n      setLoading(false); // Set loading state to false once request is complete\n    }\n  };\n\n  // Check if the user is already logged in\n  React.useEffect(() => {\n    if (localStorage.getItem('jwtToken')) {\n      navigate(\"/dashboard\"); // Redirect to the dashboard if the user is logged in\n    }\n  }, [navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"back-button\",\n      onClick: () => navigate(\"/\"),\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"arrow_back.png\",\n        alt: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"orange-triangle\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"taco.png\",\n        alt: \"Triangle Design\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleLoginSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Enter your email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"********\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn login-btn\",\n          disabled: loading,\n          children: loading ? 'Logging in...' : 'Log In'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"or\",\n          children: \"OR\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn google-btn\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"google.png\",\n            alt: \"Google Icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), \"Sign In with Google\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"register\",\n        children: [\"Don\\u2019t have an account?\", ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate(\"/signup\"),\n          className: \"register-btn\",\n          children: \"Register now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pink-ellipse\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"pinkelip.png\",\n          alt: \"Pink Ellipse\",\n          className: \"pink\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottom-circle\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"bottomellip.png\",\n          alt: \"Bottom Circle\",\n          className: \"bottom\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"ncsDSOg/CqnpLRMIB/KAUAvfmzc=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["useNavigate","React","useState","jsxDEV","_jsxDEV","LoginPage","onBackClick","onNavigateToSignUp","onLoginSuccess","_s","email","setEmail","password","setPassword","error","setError","loading","setLoading","navigate","handleBackClick","handleRegisterClick","handleLoginSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","ok","alert","localStorage","setItem","token","console","log","message","useEffect","getItem","className","children","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","disabled","_c","$RefreshReg$"],"sources":["D:/Cuvette/MERN/Client/form-builder/src/Components/Login-page/LoginPage.js"],"sourcesContent":["import { useNavigate } from \"react-router-dom\";\r\nimport React, { useState } from 'react';\r\nimport './LoginPage.css';\r\n\r\nconst LoginPage = ({ onBackClick, onNavigateToSignUp, onLoginSuccess }) => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  // Handle Back Button Click\r\n  const handleBackClick = () => {\r\n    if (onBackClick) onBackClick();\r\n  };\r\n\r\n  // Handle Register Button Click\r\n  const handleRegisterClick = () => {\r\n    if (onNavigateToSignUp) onNavigateToSignUp();\r\n  };\r\n\r\n  // Handle Form Submit\r\n  const handleLoginSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setLoading(true); // Set loading state to true\r\n    \r\n    try {\r\n      const response = await fetch('http://localhost:8000/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        alert('Login Successful!');\r\n        localStorage.setItem('jwtToken', data.token); // Store token in localStorage\r\n        console.log('JWT Token:', data.token); // Log to ensure token is stored\r\n        if (onLoginSuccess) onLoginSuccess(); // Optionally call onLoginSuccess\r\n        navigate(\"/dashboard\"); // Navigate to the dashboard after successful login\r\n      } else {\r\n        setError(data.message || 'Invalid email or password.');\r\n      }\r\n    } catch (error) {\r\n      setError('An error occurred. Please try again later.');\r\n      console.error('Login error:', error); // For debugging\r\n    } finally {\r\n      setLoading(false); // Set loading state to false once request is complete\r\n    }\r\n  };\r\n\r\n  // Check if the user is already logged in\r\n  React.useEffect(() => {\r\n    if (localStorage.getItem('jwtToken')) {\r\n      navigate(\"/dashboard\"); // Redirect to the dashboard if the user is logged in\r\n    }\r\n  }, [navigate]);\r\n\r\n  return (\r\n    <div className=\"login-page\">\r\n      <button className=\"back-button\" onClick={() => navigate(\"/\")}>\r\n        <img src=\"arrow_back.png\" alt=\"Back\"  />\r\n      </button>\r\n\r\n      <div className=\"orange-triangle\">\r\n        <img src=\"taco.png\" alt=\"Triangle Design\" />\r\n      </div>\r\n\r\n      <div className=\"login-container\">\r\n        <form onSubmit={handleLoginSubmit}>\r\n          <label>Email</label>\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Enter your email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          />\r\n\r\n          <label>Password</label>\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"********\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n          />\r\n\r\n          {error && <div className=\"error\">{error}</div>}\r\n\r\n          <button type=\"submit\" className=\"btn login-btn\" disabled={loading}>\r\n            {loading ? 'Logging in...' : 'Log In' }\r\n          </button>\r\n\r\n          <div className=\"or\">OR</div>\r\n\r\n          <button type=\"button\" className=\"btn google-btn\">\r\n            <img src=\"google.png\" alt=\"Google Icon\" />\r\n            Sign In with Google\r\n          </button>\r\n        </form>\r\n\r\n        <div className=\"register\">\r\n          Don’t have an account?{' '}\r\n          <button onClick={() => navigate(\"/signup\")} className=\"register-btn\">\r\n            Register now\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"pink-ellipse\">\r\n          <img src=\"pinkelip.png\" alt=\"Pink Ellipse\" className=\"pink\" />\r\n        </div>\r\n\r\n        <div className=\"bottom-circle\">\r\n          <img src=\"bottomellip.png\" alt=\"Bottom Circle\" className=\"bottom\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}