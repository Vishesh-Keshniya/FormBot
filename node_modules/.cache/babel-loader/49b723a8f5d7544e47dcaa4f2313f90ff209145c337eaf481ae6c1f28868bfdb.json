{"ast":null,"code":"var _jsxFileName = \"D:\\\\Cuvette\\\\Final evaluation\\\\form-builder\\\\src\\\\Components\\\\Dashboard\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Dashboard.css\";\nimport CreateFolderModal from \"./CreateFolderModal\";\nimport CreateFormModal from \"./CreateFormModal\";\nimport DeleteFolder from \"./DeleteFolder\";\nimport DeleteForm from \"./DeleteForm\";\nimport Settings from \"./Settings\";\nimport ShareModal from \"./ShareModal\"; // Assuming you have a ShareModal component\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [modalType, setModalType] = useState(null);\n  const [currentFolderIndex, setCurrentFolderIndex] = useState(null);\n  const [isLightTheme, setIsLightTheme] = useState(false);\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [folders, setFolders] = useState([]);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [isDeleteFormModalOpen, setIsDeleteFormModalOpen] = useState(false);\n  const [deleteFolderIndex, setDeleteFolderIndex] = useState(null);\n  const [deleteFormInfo, setDeleteFormInfo] = useState(null);\n  const [isSettingsOpen, setIsSettingsOpen] = useState(false);\n  const [isShareModalOpen, setIsShareModalOpen] = useState(false);\n  const openModal = (type, folderIndex = null) => {\n    setModalType(type);\n    setCurrentFolderIndex(folderIndex);\n    setIsModalOpen(true);\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setModalType(null);\n    setCurrentFolderIndex(null);\n  };\n  const handleCreateFolder = folderName => {\n    if (folderName.trim()) {\n      setFolders([...folders, {\n        name: folderName.trim(),\n        forms: []\n      }]);\n    }\n    closeModal();\n  };\n  const handleCreateForm = formName => {\n    if (formName.trim() && currentFolderIndex !== null) {\n      const updatedFolders = [...folders];\n      updatedFolders[currentFolderIndex].forms.push(formName.trim());\n      setFolders(updatedFolders);\n    }\n    closeModal();\n  };\n  const toggleTheme = () => {\n    setIsLightTheme(prevState => !prevState);\n  };\n  const toggleDropdown = () => {\n    setIsDropdownOpen(prevState => !prevState);\n  };\n  const handleDeleteFolder = index => {\n    const updatedFolders = folders.filter((_, i) => i !== index);\n    setFolders(updatedFolders);\n  };\n  const handleDeleteForm = (folderIndex, formIndex) => {\n    const updatedFolders = [...folders];\n    updatedFolders[folderIndex].forms.splice(formIndex, 1);\n    setFolders(updatedFolders);\n  };\n  const openDeleteFolderModal = index => {\n    setDeleteFolderIndex(index);\n    setIsDeleteModalOpen(true);\n  };\n  const openDeleteFormModal = (folderIndex, formIndex) => {\n    setDeleteFormInfo({\n      folderIndex,\n      formIndex\n    });\n    setIsDeleteFormModalOpen(true);\n  };\n  const closeDeleteFolderModal = () => {\n    setDeleteFolderIndex(null);\n    setIsDeleteModalOpen(false);\n  };\n  const closeDeleteFormModal = () => {\n    setDeleteFormInfo(null);\n    setIsDeleteFormModalOpen(false);\n  };\n  const confirmDeleteFolder = () => {\n    if (deleteFolderIndex !== null) {\n      handleDeleteFolder(deleteFolderIndex);\n    }\n    closeDeleteFolderModal();\n  };\n  const confirmDeleteForm = () => {\n    if (deleteFormInfo) {\n      const {\n        folderIndex,\n        formIndex\n      } = deleteFormInfo;\n      handleDeleteForm(folderIndex, formIndex);\n    }\n    closeDeleteFormModal();\n  };\n  const openSettings = () => {\n    setIsSettingsOpen(true);\n  };\n  const closeSettings = () => {\n    setIsSettingsOpen(false);\n  };\n  const openShareModal = () => {\n    setIsShareModalOpen(true);\n  };\n  const closeShareModal = () => {\n    setIsShareModalOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `dashboard-container ${isLightTheme ? \"light\" : \"dark\"}`,\n    children: isSettingsOpen ? /*#__PURE__*/_jsxDEV(Settings, {\n      closeSettings: closeSettings\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"navbar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"workspace-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"workspace-button\",\n            onClick: toggleDropdown,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Dewank Rastogi's workspace\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"dropdown-icon\",\n              src: \"drop.png\",\n              alt: \"Dropdown Icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this), isDropdownOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dropdown-menu\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"dropdown-item\",\n              onClick: openSettings,\n              children: \"Settings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"dropdown-item logout\",\n              children: \"Log Out\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"theme-toggle\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Light\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"switch\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: !isLightTheme,\n              onChange: toggleTheme\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"slider\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Dark\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"share-button\",\n          onClick: openShareModal,\n          children: \"Share\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Dashboard-content\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"Create-folder-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"create-folder\",\n              onClick: () => openModal(\"folder\"),\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"folder.png\",\n                className: \"folder\",\n                alt: \"Folder\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 19\n              }, this), \"Create a folder\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this), folders.map((folder, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"folder-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: folder.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"delete-button\",\n              onClick: () => openDeleteFolderModal(index),\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"del.png\",\n                alt: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"create-form-button\",\n              onClick: () => openModal(\"form\", index),\n              children: \"Add Form\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"form-list\",\n              children: folder.forms.map((form, formIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: form\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"delete-button-form\",\n                  onClick: () => openDeleteFormModal(index, formIndex),\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: \"del.png\",\n                    className: \"del-form\",\n                    alt: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 191,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 25\n                }, this)]\n              }, formIndex, true, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this), isModalOpen && modalType === \"folder\" && /*#__PURE__*/_jsxDEV(CreateFolderModal, {\n        closeModal: closeModal,\n        isLightTheme: isLightTheme,\n        onCreateFolder: handleCreateFolder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 13\n      }, this), isModalOpen && modalType === \"form\" && /*#__PURE__*/_jsxDEV(CreateFormModal, {\n        closeModal: closeModal,\n        isLightTheme: isLightTheme,\n        onCreateForm: handleCreateForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 13\n      }, this), isDeleteModalOpen && /*#__PURE__*/_jsxDEV(DeleteFolder, {\n        closeModal: closeDeleteFolderModal,\n        isLightTheme: isLightTheme,\n        onConfirm: confirmDeleteFolder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 13\n      }, this), isDeleteFormModalOpen && /*#__PURE__*/_jsxDEV(DeleteForm, {\n        closeModal: closeDeleteFormModal,\n        isLightTheme: isLightTheme,\n        onConfirm: confirmDeleteForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 13\n      }, this), isShareModalOpen && /*#__PURE__*/_jsxDEV(ShareModal, {\n        isOpen: isShareModalOpen,\n        onClose: closeShareModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"1SiUy4xC6PhDMvWQUU7oWZubg58=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","CreateFolderModal","CreateFormModal","DeleteFolder","DeleteForm","Settings","ShareModal","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","isModalOpen","setIsModalOpen","modalType","setModalType","currentFolderIndex","setCurrentFolderIndex","isLightTheme","setIsLightTheme","isDropdownOpen","setIsDropdownOpen","folders","setFolders","isDeleteModalOpen","setIsDeleteModalOpen","isDeleteFormModalOpen","setIsDeleteFormModalOpen","deleteFolderIndex","setDeleteFolderIndex","deleteFormInfo","setDeleteFormInfo","isSettingsOpen","setIsSettingsOpen","isShareModalOpen","setIsShareModalOpen","openModal","type","folderIndex","closeModal","handleCreateFolder","folderName","trim","name","forms","handleCreateForm","formName","updatedFolders","push","toggleTheme","prevState","toggleDropdown","handleDeleteFolder","index","filter","_","i","handleDeleteForm","formIndex","splice","openDeleteFolderModal","openDeleteFormModal","closeDeleteFolderModal","closeDeleteFormModal","confirmDeleteFolder","confirmDeleteForm","openSettings","closeSettings","openShareModal","closeShareModal","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","checked","onChange","map","folder","form","onCreateFolder","onCreateForm","onConfirm","isOpen","onClose","_c","$RefreshReg$"],"sources":["D:/Cuvette/Final evaluation/form-builder/src/Components/Dashboard/Dashboard.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Dashboard.css\";\r\nimport CreateFolderModal from \"./CreateFolderModal\";\r\nimport CreateFormModal from \"./CreateFormModal\";\r\nimport DeleteFolder from \"./DeleteFolder\";\r\nimport DeleteForm from \"./DeleteForm\";\r\nimport Settings from \"./Settings\";\r\nimport ShareModal from \"./ShareModal\"; // Assuming you have a ShareModal component\r\n\r\nconst Dashboard = () => {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [modalType, setModalType] = useState(null);\r\n  const [currentFolderIndex, setCurrentFolderIndex] = useState(null);\r\n  const [isLightTheme, setIsLightTheme] = useState(false);\r\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\r\n  const [folders, setFolders] = useState([]);\r\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\r\n  const [isDeleteFormModalOpen, setIsDeleteFormModalOpen] = useState(false);\r\n  const [deleteFolderIndex, setDeleteFolderIndex] = useState(null);\r\n  const [deleteFormInfo, setDeleteFormInfo] = useState(null);\r\n  const [isSettingsOpen, setIsSettingsOpen] = useState(false);\r\n  const [isShareModalOpen, setIsShareModalOpen] = useState(false);\r\n\r\n  const openModal = (type, folderIndex = null) => {\r\n    setModalType(type);\r\n    setCurrentFolderIndex(folderIndex);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n    setModalType(null);\r\n    setCurrentFolderIndex(null);\r\n  };\r\n\r\n  const handleCreateFolder = (folderName) => {\r\n    if (folderName.trim()) {\r\n      setFolders([...folders, { name: folderName.trim(), forms: [] }]);\r\n    }\r\n    closeModal();\r\n  };\r\n\r\n  const handleCreateForm = (formName) => {\r\n    if (formName.trim() && currentFolderIndex !== null) {\r\n      const updatedFolders = [...folders];\r\n      updatedFolders[currentFolderIndex].forms.push(formName.trim());\r\n      setFolders(updatedFolders);\r\n    }\r\n    closeModal();\r\n  };\r\n\r\n  const toggleTheme = () => {\r\n    setIsLightTheme((prevState) => !prevState);\r\n  };\r\n\r\n  const toggleDropdown = () => {\r\n    setIsDropdownOpen((prevState) => !prevState);\r\n  };\r\n\r\n  const handleDeleteFolder = (index) => {\r\n    const updatedFolders = folders.filter((_, i) => i !== index);\r\n    setFolders(updatedFolders);\r\n  };\r\n\r\n  const handleDeleteForm = (folderIndex, formIndex) => {\r\n    const updatedFolders = [...folders];\r\n    updatedFolders[folderIndex].forms.splice(formIndex, 1);\r\n    setFolders(updatedFolders);\r\n  };\r\n\r\n  const openDeleteFolderModal = (index) => {\r\n    setDeleteFolderIndex(index);\r\n    setIsDeleteModalOpen(true);\r\n  };\r\n\r\n  const openDeleteFormModal = (folderIndex, formIndex) => {\r\n    setDeleteFormInfo({ folderIndex, formIndex });\r\n    setIsDeleteFormModalOpen(true);\r\n  };\r\n\r\n  const closeDeleteFolderModal = () => {\r\n    setDeleteFolderIndex(null);\r\n    setIsDeleteModalOpen(false);\r\n  };\r\n\r\n  const closeDeleteFormModal = () => {\r\n    setDeleteFormInfo(null);\r\n    setIsDeleteFormModalOpen(false);\r\n  };\r\n\r\n  const confirmDeleteFolder = () => {\r\n    if (deleteFolderIndex !== null) {\r\n      handleDeleteFolder(deleteFolderIndex);\r\n    }\r\n    closeDeleteFolderModal();\r\n  };\r\n\r\n  const confirmDeleteForm = () => {\r\n    if (deleteFormInfo) {\r\n      const { folderIndex, formIndex } = deleteFormInfo;\r\n      handleDeleteForm(folderIndex, formIndex);\r\n    }\r\n    closeDeleteFormModal();\r\n  };\r\n\r\n  const openSettings = () => {\r\n    setIsSettingsOpen(true);\r\n  };\r\n\r\n  const closeSettings = () => {\r\n    setIsSettingsOpen(false);\r\n  };\r\n\r\n  const openShareModal = () => {\r\n    setIsShareModalOpen(true);\r\n  };\r\n\r\n  const closeShareModal = () => {\r\n    setIsShareModalOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={`dashboard-container ${isLightTheme ? \"light\" : \"dark\"}`}>\r\n      {isSettingsOpen ? (\r\n        <Settings closeSettings={closeSettings} />\r\n      ) : (\r\n        <>\r\n          <nav className=\"navbar\">\r\n            <div className=\"logo\"></div>\r\n            <div className=\"workspace-container\">\r\n              <button className=\"workspace-button\" onClick={toggleDropdown}>\r\n                <span>Dewank Rastogi's workspace</span>\r\n                <img className=\"dropdown-icon\" src=\"drop.png\" alt=\"Dropdown Icon\" />\r\n              </button>\r\n              {isDropdownOpen && (\r\n                <div className=\"dropdown-menu\">\r\n                  <button className=\"dropdown-item\" onClick={openSettings}>Settings</button>\r\n                  <button className=\"dropdown-item logout\">Log Out</button>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"theme-toggle\">\r\n              <span>Light</span>\r\n              <label className=\"switch\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={!isLightTheme}\r\n                  onChange={toggleTheme}\r\n                />\r\n                <span className=\"slider\"></span>\r\n              </label>\r\n              <span>Dark</span>\r\n            </div>\r\n            <button className=\"share-button\" onClick={openShareModal}>\r\n              Share\r\n            </button>\r\n          </nav>\r\n\r\n          <div className=\"Dashboard-content\">\r\n            <ul className=\"Create-folder-list\">\r\n              <li>\r\n                <button className=\"create-folder\" onClick={() => openModal(\"folder\")}>\r\n                  <img src=\"folder.png\" className=\"folder\" alt=\"Folder\" />\r\n                  Create a folder\r\n                </button>\r\n              </li>\r\n              {folders.map((folder, index) => (\r\n                <div key={index} className=\"folder-item\">\r\n                  <span>{folder.name}</span>\r\n                  <button\r\n                    className=\"delete-button\"\r\n                    onClick={() => openDeleteFolderModal(index)}\r\n                  >\r\n                    <img src=\"del.png\" alt=\"Delete\" />\r\n                  </button>\r\n                  <button\r\n                    className=\"create-form-button\"\r\n                    onClick={() => openModal(\"form\", index)}\r\n                  >\r\n                    Add Form\r\n                  </button>\r\n                  <ul className=\"form-list\">\r\n                    {folder.forms.map((form, formIndex) => (\r\n                      <div key={formIndex} className=\"form-item\">\r\n                        <span>{form}</span>\r\n                        <button\r\n                          className=\"delete-button-form\"\r\n                          onClick={() => openDeleteFormModal(index, formIndex)}\r\n                        >\r\n                          <img src=\"del.png\" className=\"del-form\" alt=\"Delete\" />\r\n                        </button>\r\n                      </div>\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n\r\n          {isModalOpen && modalType === \"folder\" && (\r\n            <CreateFolderModal\r\n              closeModal={closeModal}\r\n              isLightTheme={isLightTheme}\r\n              onCreateFolder={handleCreateFolder}\r\n            />\r\n          )}\r\n          {isModalOpen && modalType === \"form\" && (\r\n            <CreateFormModal\r\n              closeModal={closeModal}\r\n              isLightTheme={isLightTheme}\r\n              onCreateForm={handleCreateForm}\r\n            />\r\n          )}\r\n          {isDeleteModalOpen && (\r\n            <DeleteFolder\r\n              closeModal={closeDeleteFolderModal}\r\n              isLightTheme={isLightTheme}\r\n              onConfirm={confirmDeleteFolder}\r\n            />\r\n          )}\r\n          {isDeleteFormModalOpen && (\r\n            <DeleteForm\r\n              closeModal={closeDeleteFormModal}\r\n              isLightTheme={isLightTheme}\r\n              onConfirm={confirmDeleteForm}\r\n            />\r\n          )}\r\n          {isShareModalOpen && (\r\n            <ShareModal isOpen={isShareModalOpen} onClose={closeShareModal} />\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}