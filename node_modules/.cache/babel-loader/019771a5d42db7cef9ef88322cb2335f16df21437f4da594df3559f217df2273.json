{"ast":null,"code":"var _jsxFileName = \"D:\\\\Cuvette\\\\MERN\\\\Client\\\\form-builder\\\\src\\\\Components\\\\Dashboard\\\\CreateFolderModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./CreateFolderModal.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateFolderModal = ({\n  closeModal,\n  isLightTheme,\n  onCreateFolder\n}) => {\n  _s();\n  const [folderName, setFolderName] = useState(\"\");\n  const handleCreate = async () => {\n    try {\n      // Make the API request to create the folder\n      const response = await fetch(\"http://localhost:5000/create-folder\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          folderName,\n          userId: \"yourUserId\" // Replace with the actual logged-in user ID\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        // Folder created successfully, trigger the parent handler\n        onCreateFolder(data.folder);\n      } else {\n        alert(data.message); // Show error message\n      }\n    } catch (error) {\n      console.error(error);\n      alert(\"An error occurred while creating the folder\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `modal-overlay ${isLightTheme ? \"light\" : \"dark\"}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `modal-container ${isLightTheme ? \"light\" : \"dark\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"modal-title\",\n        children: \"Create New Folder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter folder name\",\n        className: \"modal-input\",\n        value: folderName,\n        onChange: e => setFolderName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"modal-button done\",\n          onClick: handleCreate,\n          children: \"Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"bar\",\n          children: \"|\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"modal-button cancel\",\n          onClick: closeModal,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateFolderModal, \"alRrfKll5azFKw4bC5iXBLTELHI=\");\n_c = CreateFolderModal;\nexport default CreateFolderModal;\nvar _c;\n$RefreshReg$(_c, \"CreateFolderModal\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CreateFolderModal","closeModal","isLightTheme","onCreateFolder","_s","folderName","setFolderName","handleCreate","response","fetch","method","headers","body","JSON","stringify","userId","data","json","ok","folder","alert","message","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["D:/Cuvette/MERN/Client/form-builder/src/Components/Dashboard/CreateFolderModal.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./CreateFolderModal.css\";\r\n\r\nconst CreateFolderModal = ({ closeModal, isLightTheme, onCreateFolder }) => {\r\n  const [folderName, setFolderName] = useState(\"\");\r\n\r\n  const handleCreate = async () => {\r\n    try {\r\n      // Make the API request to create the folder\r\n      const response = await fetch(\"http://localhost:5000/create-folder\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          folderName,\r\n          userId: \"yourUserId\", // Replace with the actual logged-in user ID\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        // Folder created successfully, trigger the parent handler\r\n        onCreateFolder(data.folder);\r\n      } else {\r\n        alert(data.message);  // Show error message\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      alert(\"An error occurred while creating the folder\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`modal-overlay ${isLightTheme ? \"light\" : \"dark\"}`}>\r\n      <div className={`modal-container ${isLightTheme ? \"light\" : \"dark\"}`}>\r\n        <h3 className=\"modal-title\">Create New Folder</h3>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter folder name\"\r\n          className=\"modal-input\"\r\n          value={folderName}\r\n          onChange={(e) => setFolderName(e.target.value)}\r\n        />\r\n        <div className=\"modal-buttons\">\r\n          <button className=\"modal-button done\" onClick={handleCreate}>\r\n            Done\r\n          </button>\r\n          <h3 className=\"bar\">|</h3>\r\n          <button className=\"modal-button cancel\" onClick={closeModal}>\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateFolderModal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}