{"ast":null,"code":"var _jsxFileName = \"D:\\\\Cuvette\\\\Final evaluation\\\\form-builder\\\\src\\\\Components\\\\Dashboard\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Dashboard.css\";\nimport CreateFolderModal from \"./CreateFolderModal\";\nimport CreateFormModal from \"./CreateFormModal\";\nimport DeleteFolder from \"./DeleteFolder\";\nimport DeleteForm from \"./DeleteForm\"; // Import the DeleteForm component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [modalType, setModalType] = useState(null);\n  const [isLightTheme, setIsLightTheme] = useState(false);\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [folders, setFolders] = useState([]); // State for folders\n  const [forms, setForms] = useState([]); // State for forms\n  const [deleteFolderIndex, setDeleteFolderIndex] = useState(null);\n  const [deleteFormIndex, setDeleteFormIndex] = useState(null); // State for deleting forms\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [isDeleteFormModalOpen, setIsDeleteFormModalOpen] = useState(false); // Modal state for forms\n\n  // Function to open modal with specified type\n  const openModal = type => {\n    setModalType(type);\n    setIsModalOpen(true);\n  };\n\n  // Function to close modal\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setModalType(null);\n  };\n\n  // Function to handle folder creation\n  const handleCreateFolder = folderName => {\n    if (folderName.trim()) {\n      setFolders([...folders, folderName.trim()]);\n    }\n    closeModal();\n  };\n\n  // Function to handle form creation\n  const handleCreateForm = formName => {\n    if (formName.trim()) {\n      setForms([...forms, formName.trim()]);\n    }\n    closeModal();\n  };\n\n  // Toggle theme\n  const toggleTheme = () => {\n    setIsLightTheme(prevState => !prevState);\n  };\n\n  // Toggle dropdown menu\n  const toggleDropdown = () => {\n    setIsDropdownOpen(prevState => !prevState);\n  };\n\n  // Function to delete a folder\n  const handleDeleteFolder = index => {\n    const updatedFolders = folders.filter((_, i) => i !== index);\n    setFolders(updatedFolders);\n  };\n\n  // Function to delete a form\n  const handleDeleteForm = index => {\n    const updatedForms = forms.filter((_, i) => i !== index);\n    setForms(updatedForms);\n  };\n\n  // Open delete modal with the folder index\n  const openDeleteFolderModal = index => {\n    setDeleteFolderIndex(index);\n    setIsDeleteModalOpen(true);\n  };\n\n  // Open delete modal with the form index\n  const openDeleteFormModal = index => {\n    setDeleteFormIndex(index);\n    setIsDeleteFormModalOpen(true); // Open the form delete modal\n  };\n\n  // Close delete modal\n  const closeDeleteFolderModal = () => {\n    setDeleteFolderIndex(null);\n    setIsDeleteModalOpen(false);\n  };\n  const closeDeleteFormModal = () => {\n    setDeleteFormIndex(null);\n    setIsDeleteFormModalOpen(false);\n  };\n\n  // Confirm folder deletion\n  const confirmDeleteFolder = () => {\n    if (deleteFolderIndex !== null) {\n      handleDeleteFolder(deleteFolderIndex);\n    }\n    closeDeleteFolderModal();\n  };\n\n  // Confirm form deletion\n  const confirmDeleteForm = () => {\n    if (deleteFormIndex !== null) {\n      handleDeleteForm(deleteFormIndex);\n    }\n    closeDeleteFormModal();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `dashboard-container ${isLightTheme ? \"light\" : \"dark\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"workspace-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"workspace-button\",\n          onClick: toggleDropdown,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Dewank Rastogi's workspace\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"dropdown-icon\",\n            src: \"drop.png\",\n            alt: \"Dropdown Icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), isDropdownOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-menu\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"dropdown-item\",\n            children: \"Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"dropdown-item logout\",\n            children: \"Log Out\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"theme-toggle\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Light\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"switch\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: !isLightTheme,\n            onChange: toggleTheme\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"slider\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Dark\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"share-button\",\n        children: \"Share\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Dashboard-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"Create-folder-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"create-folder\",\n            onClick: () => openModal(\"folder\"),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"folder.png\",\n              className: \"folder\",\n              alt: \"Folder\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this), \"Create a folder\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"folder-list\",\n            children: folders.map((folder, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"folder-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: folder\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"delete-button\",\n                onClick: () => openDeleteFolderModal(index),\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: \"del.png\",\n                  alt: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"Create-form-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"create-typebot\",\n            onClick: () => openModal(\"form\"),\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"plus\",\n                children: \"+\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 17\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 49\n              }, this), \"Create a typebot\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"form-li\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-list\",\n            children: forms.map((form, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: form\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"delete-button-form\",\n                onClick: () => openDeleteFormModal(index) // Open delete form modal\n                ,\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: \"del.png\",\n                  className: \"del-form\",\n                  alt: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), isModalOpen && modalType === \"folder\" && /*#__PURE__*/_jsxDEV(CreateFolderModal, {\n      closeModal: closeModal,\n      isLightTheme: isLightTheme,\n      onCreateFolder: handleCreateFolder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }, this), isModalOpen && modalType === \"form\" && /*#__PURE__*/_jsxDEV(CreateFormModal, {\n      closeModal: closeModal,\n      isLightTheme: isLightTheme,\n      onCreateForm: handleCreateForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 9\n    }, this), isDeleteModalOpen && /*#__PURE__*/_jsxDEV(DeleteFolder, {\n      closeModal: closeDeleteFolderModal,\n      isLightTheme: isLightTheme,\n      onConfirm: confirmDeleteFolder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 9\n    }, this), isDeleteFormModalOpen && /*#__PURE__*/_jsxDEV(DeleteForm, {\n      closeModal: closeDeleteFormModal,\n      isLightTheme: isLightTheme,\n      onConfirm: confirmDeleteForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"E37a+IvqzyGOez2A76wmJq75PPk=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","CreateFolderModal","CreateFormModal","DeleteFolder","DeleteForm","jsxDEV","_jsxDEV","Dashboard","_s","isModalOpen","setIsModalOpen","modalType","setModalType","isLightTheme","setIsLightTheme","isDropdownOpen","setIsDropdownOpen","folders","setFolders","forms","setForms","deleteFolderIndex","setDeleteFolderIndex","deleteFormIndex","setDeleteFormIndex","isDeleteModalOpen","setIsDeleteModalOpen","isDeleteFormModalOpen","setIsDeleteFormModalOpen","openModal","type","closeModal","handleCreateFolder","folderName","trim","handleCreateForm","formName","toggleTheme","prevState","toggleDropdown","handleDeleteFolder","index","updatedFolders","filter","_","i","handleDeleteForm","updatedForms","openDeleteFolderModal","openDeleteFormModal","closeDeleteFolderModal","closeDeleteFormModal","confirmDeleteFolder","confirmDeleteForm","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","checked","onChange","map","folder","form","onCreateFolder","onCreateForm","onConfirm","_c","$RefreshReg$"],"sources":["D:/Cuvette/Final evaluation/form-builder/src/Components/Dashboard/Dashboard.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Dashboard.css\";\r\nimport CreateFolderModal from \"./CreateFolderModal\";\r\nimport CreateFormModal from \"./CreateFormModal\";\r\nimport DeleteFolder from \"./DeleteFolder\";\r\nimport DeleteForm from \"./DeleteForm\"; // Import the DeleteForm component\r\n\r\nconst Dashboard = () => {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [modalType, setModalType] = useState(null);\r\n  const [isLightTheme, setIsLightTheme] = useState(false);\r\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\r\n  const [folders, setFolders] = useState([]); // State for folders\r\n  const [forms, setForms] = useState([]); // State for forms\r\n  const [deleteFolderIndex, setDeleteFolderIndex] = useState(null);\r\n  const [deleteFormIndex, setDeleteFormIndex] = useState(null); // State for deleting forms\r\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\r\n  const [isDeleteFormModalOpen, setIsDeleteFormModalOpen] = useState(false); // Modal state for forms\r\n\r\n  // Function to open modal with specified type\r\n  const openModal = (type) => {\r\n    setModalType(type);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  // Function to close modal\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n    setModalType(null);\r\n  };\r\n\r\n  // Function to handle folder creation\r\n  const handleCreateFolder = (folderName) => {\r\n    if (folderName.trim()) {\r\n      setFolders([...folders, folderName.trim()]);\r\n    }\r\n    closeModal();\r\n  };\r\n\r\n  // Function to handle form creation\r\n  const handleCreateForm = (formName) => {\r\n    if (formName.trim()) {\r\n      setForms([...forms, formName.trim()]);\r\n    }\r\n    closeModal();\r\n  };\r\n\r\n  // Toggle theme\r\n  const toggleTheme = () => {\r\n    setIsLightTheme((prevState) => !prevState);\r\n  };\r\n\r\n  // Toggle dropdown menu\r\n  const toggleDropdown = () => {\r\n    setIsDropdownOpen((prevState) => !prevState);\r\n  };\r\n\r\n  // Function to delete a folder\r\n  const handleDeleteFolder = (index) => {\r\n    const updatedFolders = folders.filter((_, i) => i !== index);\r\n    setFolders(updatedFolders);\r\n  };\r\n\r\n  // Function to delete a form\r\n  const handleDeleteForm = (index) => {\r\n    const updatedForms = forms.filter((_, i) => i !== index);\r\n    setForms(updatedForms);\r\n  };\r\n\r\n  // Open delete modal with the folder index\r\n  const openDeleteFolderModal = (index) => {\r\n    setDeleteFolderIndex(index);\r\n    setIsDeleteModalOpen(true);\r\n  };\r\n\r\n  // Open delete modal with the form index\r\n  const openDeleteFormModal = (index) => {\r\n    setDeleteFormIndex(index);\r\n    setIsDeleteFormModalOpen(true); // Open the form delete modal\r\n  };\r\n\r\n  // Close delete modal\r\n  const closeDeleteFolderModal = () => {\r\n    setDeleteFolderIndex(null);\r\n    setIsDeleteModalOpen(false);\r\n  };\r\n\r\n  const closeDeleteFormModal = () => {\r\n    setDeleteFormIndex(null);\r\n    setIsDeleteFormModalOpen(false);\r\n  };\r\n\r\n  // Confirm folder deletion\r\n  const confirmDeleteFolder = () => {\r\n    if (deleteFolderIndex !== null) {\r\n      handleDeleteFolder(deleteFolderIndex);\r\n    }\r\n    closeDeleteFolderModal();\r\n  };\r\n\r\n  // Confirm form deletion\r\n  const confirmDeleteForm = () => {\r\n    if (deleteFormIndex !== null) {\r\n      handleDeleteForm(deleteFormIndex);\r\n    }\r\n    closeDeleteFormModal();\r\n  };\r\n\r\n  return (\r\n    <div className={`dashboard-container ${isLightTheme ? \"light\" : \"dark\"}`}>\r\n      {/* Navbar */}\r\n      <nav className=\"navbar\">\r\n        <div className=\"workspace-container\">\r\n          <button className=\"workspace-button\" onClick={toggleDropdown}>\r\n            <span>Dewank Rastogi's workspace</span>\r\n            <img className=\"dropdown-icon\" src=\"drop.png\" alt=\"Dropdown Icon\" />\r\n          </button>\r\n\r\n          {/* Dropdown menu */}\r\n          {isDropdownOpen && (\r\n            <div className=\"dropdown-menu\">\r\n              <button className=\"dropdown-item\">Settings</button>\r\n              <button className=\"dropdown-item logout\">Log Out</button>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"theme-toggle\">\r\n          <span>Light</span>\r\n          <label className=\"switch\">\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={!isLightTheme}\r\n              onChange={toggleTheme}\r\n            />\r\n            <span className=\"slider\"></span>\r\n          </label>\r\n          <span>Dark</span>\r\n        </div>\r\n        <button className=\"share-button\">Share</button>\r\n      </nav>\r\n\r\n      {/* Dashboard Content */}\r\n      <div className=\"Dashboard-content\">\r\n        <ul className=\"Create-folder-list\">\r\n          <li>\r\n            <button className=\"create-folder\" onClick={() => openModal(\"folder\")}>\r\n              <img src=\"folder.png\" className=\"folder\" alt=\"Folder\" />\r\n              Create a folder\r\n            </button>\r\n          </li>\r\n\r\n          <li>\r\n            <div className=\"folder-list\">\r\n              {folders.map((folder, index) => (\r\n                <div key={index} className=\"folder-item\">\r\n                  <span>{folder}</span>\r\n                  <button\r\n                    className=\"delete-button\"\r\n                    onClick={() => openDeleteFolderModal(index)}\r\n                  >\r\n                    <img src=\"del.png\" alt=\"Delete\" />\r\n                  </button>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </li>\r\n        </ul>\r\n\r\n        <ul className=\"Create-form-list\">\r\n          <li>\r\n            <button\r\n              className=\"create-typebot\"\r\n              onClick={() => openModal(\"form\")}\r\n            >\r\n              <p>\r\n                <span className=\"plus\">+</span> <br />\r\n                Create a typebot\r\n              </p>\r\n            </button>\r\n          </li>\r\n\r\n          <li className=\"form-li\">\r\n            <div className=\"form-list\">\r\n              {forms.map((form, index) => (\r\n                <div key={index} className=\"form-item\">\r\n                  <span>{form}</span>\r\n                  <button\r\n                    className=\"delete-button-form\"\r\n                    onClick={() => openDeleteFormModal(index)} // Open delete form modal\r\n                  >\r\n                    <img src=\"del.png\" className=\"del-form\" alt=\"Delete\" />\r\n                  </button>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n\r\n      {/* Conditional rendering of modals */}\r\n      {isModalOpen && modalType === \"folder\" && (\r\n        <CreateFolderModal\r\n          closeModal={closeModal}\r\n          isLightTheme={isLightTheme}\r\n          onCreateFolder={handleCreateFolder}\r\n        />\r\n      )}\r\n      {isModalOpen && modalType === \"form\" && (\r\n        <CreateFormModal\r\n          closeModal={closeModal}\r\n          isLightTheme={isLightTheme}\r\n          onCreateForm={handleCreateForm}\r\n        />\r\n      )}\r\n      {isDeleteModalOpen && (\r\n        <DeleteFolder\r\n          closeModal={closeDeleteFolderModal}\r\n          isLightTheme={isLightTheme}\r\n          onConfirm={confirmDeleteFolder}\r\n        />\r\n      )}\r\n      {isDeleteFormModalOpen && (\r\n        <DeleteForm\r\n          closeModal={closeDeleteFormModal}\r\n          isLightTheme={isLightTheme}\r\n          onConfirm={confirmDeleteForm}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}