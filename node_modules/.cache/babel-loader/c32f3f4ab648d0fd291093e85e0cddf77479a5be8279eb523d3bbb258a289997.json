{"ast":null,"code":"import React,{useState}from'react';import{useNavigate}from\"react-router-dom\";import\"./ResponseNavbar.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function ResponseNavbar(){const[isLightTheme,setIsLightTheme]=useState(false);const navigate=useNavigate();const toggleTheme=()=>{setIsLightTheme(prevState=>!prevState);};return/*#__PURE__*/_jsx(\"div\",{className:\"workspace-container-res \".concat(isLightTheme?\"dark\":\"light\"),children:/*#__PURE__*/_jsx(\"div\",{className:\"workspace-container-work-res \".concat(isLightTheme?\"dark\":\"light\"),children:/*#__PURE__*/_jsxs(\"nav\",{className:\"workspace-navwork-res\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mid-buttonwork-res\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"flow-buttonwork-res \",onClick:()=>navigate(\"/workspace\"),children:\"Flow\"}),/*#__PURE__*/_jsx(\"button\",{className:\"response-buttonwork-res active\",children:\"Response\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"rest-buttonswork-res\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"theme-togglework-res\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Light\"}),/*#__PURE__*/_jsxs(\"label\",{className:\"switchwork-res\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:isLightTheme,onChange:toggleTheme}),/*#__PURE__*/_jsx(\"span\",{className:\"sliderwork-res\"})]}),/*#__PURE__*/_jsx(\"span\",{children:\"Dark\"})]}),/*#__PURE__*/_jsx(\"button\",{className:\"share-from-buttonwork-res\",children:\"Share\"}),/*#__PURE__*/_jsx(\"button\",{className:\"save-buttonwork-res\",children:\"Save\"}),/*#__PURE__*/_jsx(\"button\",{className:\"close-buttonwork-res\",onClick:()=>navigate(\"/dashboard\"),children:/*#__PURE__*/_jsx(\"img\",{src:\"close.png\",alt:\"Close\"})})]})]})})});}export default ResponseNavbar;","map":{"version":3,"names":["React","useState","useNavigate","jsx","_jsx","jsxs","_jsxs","ResponseNavbar","isLightTheme","setIsLightTheme","navigate","toggleTheme","prevState","className","concat","children","onClick","type","checked","onChange","src","alt"],"sources":["D:/Cuvette/MERN/Client/form-builder/src/Components/Workspace/ResponseNavbar.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./ResponseNavbar.css\";\r\n\r\nfunction ResponseNavbar() {\r\n   const [isLightTheme, setIsLightTheme] = useState(false);\r\n   const navigate = useNavigate();\r\n\r\n   const toggleTheme = () => {\r\n      setIsLightTheme((prevState) => !prevState);\r\n   };\r\n\r\n   return (\r\n      <div className={`workspace-container-res ${isLightTheme ? \"dark\" : \"light\"}`}>\r\n         <div className={`workspace-container-work-res ${isLightTheme ? \"dark\" : \"light\"}`}>\r\n            <nav className=\"workspace-navwork-res\">\r\n               \r\n               <div className=\"mid-buttonwork-res\">\r\n                  <button className=\"flow-buttonwork-res \"  onClick={() => navigate(\"/workspace\")}>Flow</button>\r\n                  <button className=\"response-buttonwork-res active\">Response</button>\r\n               </div>\r\n               <div className=\"rest-buttonswork-res\">\r\n                  <div className=\"theme-togglework-res\">\r\n                     <span>Light</span>\r\n                     <label className=\"switchwork-res\">\r\n                        <input\r\n                           type=\"checkbox\"\r\n                           checked={isLightTheme}\r\n                           onChange={toggleTheme}\r\n                        />\r\n                        <span className=\"sliderwork-res\"></span>\r\n                     </label>\r\n                     <span>Dark</span>\r\n                  </div>\r\n                  <button className=\"share-from-buttonwork-res\">Share</button>\r\n                  <button className=\"save-buttonwork-res\">Save</button>\r\n                  <button className=\"close-buttonwork-res\" onClick={() => navigate(\"/dashboard\")}>\r\n                     <img src=\"close.png\" alt=\"Close\" />\r\n                  </button>\r\n               </div>\r\n            </nav>\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default ResponseNavbar;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,MAAO,sBAAsB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE9B,QAAS,CAAAC,cAAcA,CAAA,CAAG,CACvB,KAAM,CAACC,YAAY,CAAEC,eAAe,CAAC,CAAGR,QAAQ,CAAC,KAAK,CAAC,CACvD,KAAM,CAAAS,QAAQ,CAAGR,WAAW,CAAC,CAAC,CAE9B,KAAM,CAAAS,WAAW,CAAGA,CAAA,GAAM,CACvBF,eAAe,CAAEG,SAAS,EAAK,CAACA,SAAS,CAAC,CAC7C,CAAC,CAED,mBACGR,IAAA,QAAKS,SAAS,4BAAAC,MAAA,CAA6BN,YAAY,CAAG,MAAM,CAAG,OAAO,CAAG,CAAAO,QAAA,cAC1EX,IAAA,QAAKS,SAAS,iCAAAC,MAAA,CAAkCN,YAAY,CAAG,MAAM,CAAG,OAAO,CAAG,CAAAO,QAAA,cAC/ET,KAAA,QAAKO,SAAS,CAAC,uBAAuB,CAAAE,QAAA,eAEnCT,KAAA,QAAKO,SAAS,CAAC,oBAAoB,CAAAE,QAAA,eAChCX,IAAA,WAAQS,SAAS,CAAC,sBAAsB,CAAEG,OAAO,CAAEA,CAAA,GAAMN,QAAQ,CAAC,YAAY,CAAE,CAAAK,QAAA,CAAC,MAAI,CAAQ,CAAC,cAC9FX,IAAA,WAAQS,SAAS,CAAC,gCAAgC,CAAAE,QAAA,CAAC,UAAQ,CAAQ,CAAC,EAClE,CAAC,cACNT,KAAA,QAAKO,SAAS,CAAC,sBAAsB,CAAAE,QAAA,eAClCT,KAAA,QAAKO,SAAS,CAAC,sBAAsB,CAAAE,QAAA,eAClCX,IAAA,SAAAW,QAAA,CAAM,OAAK,CAAM,CAAC,cAClBT,KAAA,UAAOO,SAAS,CAAC,gBAAgB,CAAAE,QAAA,eAC9BX,IAAA,UACGa,IAAI,CAAC,UAAU,CACfC,OAAO,CAAEV,YAAa,CACtBW,QAAQ,CAAER,WAAY,CACxB,CAAC,cACFP,IAAA,SAAMS,SAAS,CAAC,gBAAgB,CAAO,CAAC,EACpC,CAAC,cACRT,IAAA,SAAAW,QAAA,CAAM,MAAI,CAAM,CAAC,EACf,CAAC,cACNX,IAAA,WAAQS,SAAS,CAAC,2BAA2B,CAAAE,QAAA,CAAC,OAAK,CAAQ,CAAC,cAC5DX,IAAA,WAAQS,SAAS,CAAC,qBAAqB,CAAAE,QAAA,CAAC,MAAI,CAAQ,CAAC,cACrDX,IAAA,WAAQS,SAAS,CAAC,sBAAsB,CAACG,OAAO,CAAEA,CAAA,GAAMN,QAAQ,CAAC,YAAY,CAAE,CAAAK,QAAA,cAC5EX,IAAA,QAAKgB,GAAG,CAAC,WAAW,CAACC,GAAG,CAAC,OAAO,CAAE,CAAC,CAC9B,CAAC,EACP,CAAC,EACJ,CAAC,CACJ,CAAC,CACJ,CAAC,CAEZ,CAEA,cAAe,CAAAd,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}