{"ast":null,"code":"var _jsxFileName = \"D:\\\\Cuvette\\\\MERN\\\\Client\\\\form-builder\\\\src\\\\Components\\\\Dashboard\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport \"./Dashboard.css\";\nimport axios from \"axios\";\nimport CreateFolderModal from \"./CreateFolderModal\";\nimport CreateFormModal from \"./CreateFormModal\";\nimport DeleteFolder from \"./DeleteFolder\";\nimport DeleteForm from \"./DeleteForm\";\nimport Settings from \"./Settings\";\nimport ShareModal from \"./ShareModal\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [modalType, setModalType] = useState(null);\n  const [isLightTheme, setIsLightTheme] = useState(false);\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [folders, setFolders] = useState([]);\n  const [forms, setForms] = useState([]);\n  const [username, setUsername] = useState(\"\");\n  const [activeFolderIndex, setActiveFolderIndex] = useState(null);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [isDeleteFormModalOpen, setIsDeleteFormModalOpen] = useState(false);\n  const [isSettingsOpen, setIsSettingsOpen] = useState(false);\n  const [isShareModalOpen, setIsShareModalOpen] = useState(false);\n  const [isWorkspaceActive, setIsWorkspaceActive] = useState(false); // New state to toggle workspace visibility\n\n  useEffect(() => {\n    const fetchUsername = async () => {\n      try {\n        const token = localStorage.getItem(\"jwtToken\");\n        if (token) {\n          var _response$data;\n          const response = await axios.get(\"http://localhost:8000/username\", {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          setUsername(((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.username) || \"\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching username:\", error);\n      }\n    };\n    fetchUsername();\n  }, []);\n  useEffect(() => {\n    const fetchFolders = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:8000/api/folders\");\n        setFolders(response.data);\n      } catch (error) {\n        console.error(\"Error fetching folders:\", error);\n      }\n    };\n    fetchFolders();\n  }, []);\n  useEffect(() => {\n    const fetchForms = async () => {\n      if (activeFolderIndex !== null) {\n        const folderId = folders[activeFolderIndex]._id;\n        try {\n          const response = await axios.get(`http://localhost:8000/api/forms/${folderId}`);\n          setForms(response.data);\n        } catch (error) {\n          console.error(\"Error fetching forms:\", error);\n        }\n      }\n    };\n    fetchForms();\n  }, [activeFolderIndex, folders]);\n  const openModal = type => {\n    setModalType(type);\n    setIsModalOpen(true);\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setModalType(null);\n  };\n  const handleCreateFolder = async folderName => {\n    if (folderName.trim()) {\n      try {\n        const response = await axios.post(\"http://localhost:8000/api/folders\", {\n          name: folderName.trim()\n        });\n        setFolders(prevFolders => [...prevFolders, response.data]);\n      } catch (error) {\n        var _error$response;\n        if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 409) {\n          alert(\"Folder name must be unique.\");\n        } else {\n          console.error(\"Error creating folder:\", error);\n          alert(\"Failed to create folder. Please try again.\");\n        }\n      }\n    }\n    closeModal();\n  };\n  const handleCreateForm = async formName => {\n    if (formName.trim()) {\n      try {\n        let response;\n        if (activeFolderIndex !== null) {\n          const folderId = folders[activeFolderIndex]._id;\n          response = await axios.post(\"http://localhost:8000/api/forms\", {\n            name: formName.trim(),\n            folderId\n          });\n          setFolders(prevFolders => {\n            const updatedFolders = [...prevFolders];\n            updatedFolders[activeFolderIndex].forms.push(response.data);\n            return updatedFolders;\n          });\n        } else {\n          response = await axios.post(\"http://localhost:8000/api/forms\", {\n            name: formName.trim()\n          });\n          setForms(prevForms => [...prevForms, response.data]);\n        }\n      } catch (error) {\n        console.error(\"Error creating form:\", error);\n        alert(\"Failed to create form. Please try again.\");\n      }\n    }\n    closeModal();\n  };\n  const toggleTheme = () => setIsLightTheme(prev => !prev);\n  const toggleDropdown = () => setIsDropdownOpen(prev => !prev);\n  const openDeleteFolderModal = index => {\n    setActiveFolderIndex(index); // Store the folder index to delete\n    setIsDeleteModalOpen(true); // Open the delete confirmation modal\n  };\n  const openDeleteFormModal = index => {\n    setActiveFolderIndex(index); // Store the form index to delete\n    setIsDeleteFormModalOpen(true); // Open the delete confirmation modal\n  };\n  const closeDeleteFolderModal = () => setIsDeleteModalOpen(false);\n  const closeDeleteFormModal = () => setIsDeleteFormModalOpen(false);\n  const confirmDeleteFolder = async () => {\n    if (activeFolderIndex !== null) {\n      try {\n        await axios.delete(`http://localhost:8000/api/folders/${folders[activeFolderIndex]._id}`); // Make API call to delete the folder\n        setFolders(prevFolders => prevFolders.filter((_, i) => i !== activeFolderIndex)); // Update the front-end state\n      } catch (error) {\n        console.error(\"Error deleting folder:\", error);\n      }\n    }\n    closeDeleteFolderModal(); // Close the modal after deletion\n  };\n  const confirmDeleteForm = async () => {\n    if (activeFolderIndex !== null) {\n      try {\n        var _folders$activeFolder, _folders$activeFolder2;\n        const formId = (_folders$activeFolder = folders[activeFolderIndex]) === null || _folders$activeFolder === void 0 ? void 0 : (_folders$activeFolder2 = _folders$activeFolder.forms[activeFolderIndex]) === null || _folders$activeFolder2 === void 0 ? void 0 : _folders$activeFolder2._id; // Get the form ID\n        await axios.delete(`http://localhost:8000/api/forms/${formId}`); // Make API call to delete the form\n        setFolders(prevFolders => {\n          const updatedFolders = [...prevFolders];\n          updatedFolders[activeFolderIndex].forms = updatedFolders[activeFolderIndex].forms.filter(form => form._id !== formId); // Remove the form from the front-end state\n          return updatedFolders;\n        });\n      } catch (error) {\n        console.error(\"Error deleting form:\", error);\n      }\n    }\n    closeDeleteFormModal(); // Close the modal after deletion\n  };\n  const toggleFolderVisibility = async index => {\n    setActiveFolderIndex(activeFolderIndex === index ? null : index);\n    if (activeFolderIndex !== index) {\n      try {\n        const folderId = folders[index]._id;\n        const response = await axios.get(`http://localhost:8000/api/forms/${folderId}`);\n        setFolders(prevFolders => {\n          const updatedFolders = [...prevFolders];\n          updatedFolders[index].forms = response.data;\n          return updatedFolders;\n        });\n      } catch (error) {\n        console.error(\"Error fetching forms:\", error);\n      }\n    }\n  };\n  const handleFormClick = () => {\n    setIsWorkspaceActive(true); // Set workspace active when a form is clicked\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `dashboard-container ${isLightTheme ? \"light\" : \"dark\"}`,\n    children: isSettingsOpen ? /*#__PURE__*/_jsxDEV(Settings, {\n      closeSettings: () => setIsSettingsOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"navbar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"workspace-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"workspace-button\",\n            onClick: toggleDropdown,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: username ? `${username}'s workspace` : \"Loading...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"dropdown-icon\",\n              src: \"drop.png\",\n              alt: \"Dropdown Icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this), isDropdownOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dropdown-menu\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"dropdown-item\",\n              onClick: () => setIsSettingsOpen(true),\n              children: \"Settings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"dropdown-item logout\",\n              children: \"Log Out\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"theme-toggle\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Light\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"switch\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: !isLightTheme,\n              onChange: toggleTheme\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"slider\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Dark\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"share-button\",\n          onClick: () => setIsShareModalOpen(true),\n          children: \"Share\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Dashboard-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"Create-folder-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `create-folder ${activeFolderIndex !== null ? \"hidden\" : \"\"}`,\n              onClick: () => openModal(\"folder\"),\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"folder.png\",\n                className: \"folder\",\n                alt: \"Folder\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 19\n              }, this), \"Create a folder\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `create-form ${activeFolderIndex === null ? \"hidden\" : \"\"}`,\n              onClick: () => openModal(\"form\"),\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"form.png\",\n                className: \"form\",\n                alt: \"Form\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 19\n              }, this), \"Create a form\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"folder-list\",\n          children: folders.map((folder, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `folder-item ${activeFolderIndex === index ? \"active\" : \"\"}`,\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"folder-button\",\n              onClick: () => toggleFolderVisibility(index),\n              children: folder.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"delete-folder\",\n              onClick: () => openDeleteFolderModal(index),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 19\n            }, this), activeFolderIndex === index && /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"form-list\",\n              children: forms.map(form => /*#__PURE__*/_jsxDEV(\"li\", {\n                onClick: handleFormClick,\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  children: form.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 27\n                }, this)\n              }, form._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 21\n            }, this)]\n          }, folder._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }, this), isWorkspaceActive && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"workspace\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Workspace content here...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }, this), isModalOpen && modalType === \"folder\" && /*#__PURE__*/_jsxDEV(CreateFolderModal, {\n        closeModal: closeModal,\n        createFolder: handleCreateFolder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 13\n      }, this), isModalOpen && modalType === \"form\" && /*#__PURE__*/_jsxDEV(CreateFormModal, {\n        closeModal: closeModal,\n        createForm: handleCreateForm,\n        folders: folders\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 13\n      }, this), isDeleteModalOpen && /*#__PURE__*/_jsxDEV(DeleteFolder, {\n        closeModal: closeDeleteFolderModal,\n        confirmDelete: confirmDeleteFolder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 13\n      }, this), isDeleteFormModalOpen && /*#__PURE__*/_jsxDEV(DeleteForm, {\n        closeModal: closeDeleteFormModal,\n        confirmDelete: confirmDeleteForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 13\n      }, this), isShareModalOpen && /*#__PURE__*/_jsxDEV(ShareModal, {\n        closeModal: () => setIsShareModalOpen(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 196,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"wC64FP/o5aFRN0xrQ3/OAjiAdCM=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["axios","CreateFolderModal","CreateFormModal","DeleteFolder","DeleteForm","Settings","ShareModal","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","isModalOpen","setIsModalOpen","modalType","setModalType","isLightTheme","setIsLightTheme","isDropdownOpen","setIsDropdownOpen","folders","setFolders","forms","setForms","username","setUsername","activeFolderIndex","setActiveFolderIndex","isDeleteModalOpen","setIsDeleteModalOpen","isDeleteFormModalOpen","setIsDeleteFormModalOpen","isSettingsOpen","setIsSettingsOpen","isShareModalOpen","setIsShareModalOpen","isWorkspaceActive","setIsWorkspaceActive","fetchUsername","token","localStorage","getItem","_response$data","response","get","headers","Authorization","data","error","console","fetchFolders","fetchForms","folderId","_id","openModal","type","closeModal","handleCreateFolder","folderName","trim","post","name","prevFolders","_error$response","status","alert","handleCreateForm","formName","updatedFolders","push","prevForms","toggleTheme","prev","toggleDropdown","openDeleteFolderModal","index","openDeleteFormModal","closeDeleteFolderModal","closeDeleteFormModal","confirmDeleteFolder","delete","filter","_","i","confirmDeleteForm","_folders$activeFolder","_folders$activeFolder2","formId","form","toggleFolderVisibility","handleFormClick","className","children","closeSettings","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","checked","onChange","map","folder","createFolder","createForm","confirmDelete","_c","$RefreshReg$"],"sources":["D:/Cuvette/MERN/Client/form-builder/src/Components/Dashboard/Dashboard.js"],"sourcesContent":["import \"./Dashboard.css\";\r\nimport axios from \"axios\";\r\nimport CreateFolderModal from \"./CreateFolderModal\";\r\nimport CreateFormModal from \"./CreateFormModal\";\r\nimport DeleteFolder from \"./DeleteFolder\";\r\nimport DeleteForm from \"./DeleteForm\";\r\nimport Settings from \"./Settings\";\r\nimport ShareModal from \"./ShareModal\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst Dashboard = () => {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [modalType, setModalType] = useState(null);\r\n  const [isLightTheme, setIsLightTheme] = useState(false);\r\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\r\n  const [folders, setFolders] = useState([]);\r\n  const [forms, setForms] = useState([]);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [activeFolderIndex, setActiveFolderIndex] = useState(null);\r\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\r\n  const [isDeleteFormModalOpen, setIsDeleteFormModalOpen] = useState(false);\r\n  const [isSettingsOpen, setIsSettingsOpen] = useState(false);\r\n  const [isShareModalOpen, setIsShareModalOpen] = useState(false);\r\n  const [isWorkspaceActive, setIsWorkspaceActive] = useState(false); // New state to toggle workspace visibility\r\n\r\n  useEffect(() => {\r\n    const fetchUsername = async () => {\r\n      try {\r\n        const token = localStorage.getItem(\"jwtToken\");\r\n        if (token) {\r\n          const response = await axios.get(\"http://localhost:8000/username\", {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          });\r\n          setUsername(response.data?.username || \"\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching username:\", error);\r\n      }\r\n    };\r\n    fetchUsername();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchFolders = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:8000/api/folders\");\r\n        setFolders(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching folders:\", error);\r\n      }\r\n    };\r\n    fetchFolders();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchForms = async () => {\r\n      if (activeFolderIndex !== null) {\r\n        const folderId = folders[activeFolderIndex]._id;\r\n        try {\r\n          const response = await axios.get(`http://localhost:8000/api/forms/${folderId}`);\r\n          setForms(response.data);\r\n        } catch (error) {\r\n          console.error(\"Error fetching forms:\", error);\r\n        }\r\n      }\r\n    };\r\n    fetchForms();\r\n  }, [activeFolderIndex, folders]);\r\n\r\n  const openModal = (type) => {\r\n    setModalType(type);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n    setModalType(null);\r\n  };\r\n\r\n  const handleCreateFolder = async (folderName) => {\r\n    if (folderName.trim()) {\r\n      try {\r\n        const response = await axios.post(\"http://localhost:8000/api/folders\", { name: folderName.trim() });\r\n        setFolders((prevFolders) => [...prevFolders, response.data]);\r\n      } catch (error) {\r\n        if (error.response?.status === 409) {\r\n          alert(\"Folder name must be unique.\");\r\n        } else {\r\n          console.error(\"Error creating folder:\", error);\r\n          alert(\"Failed to create folder. Please try again.\");\r\n        }\r\n      }\r\n    }\r\n    closeModal();\r\n  };\r\n\r\n  const handleCreateForm = async (formName) => {\r\n    if (formName.trim()) {\r\n      try {\r\n        let response;\r\n        if (activeFolderIndex !== null) {\r\n          const folderId = folders[activeFolderIndex]._id;\r\n          response = await axios.post(\"http://localhost:8000/api/forms\", {\r\n            name: formName.trim(),\r\n            folderId,\r\n          });\r\n  \r\n          setFolders((prevFolders) => {\r\n            const updatedFolders = [...prevFolders];\r\n            updatedFolders[activeFolderIndex].forms.push(response.data);\r\n            return updatedFolders;\r\n          });\r\n        } else {\r\n          response = await axios.post(\"http://localhost:8000/api/forms\", {\r\n            name: formName.trim(),\r\n          });\r\n          setForms((prevForms) => [...prevForms, response.data]);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error creating form:\", error);\r\n        alert(\"Failed to create form. Please try again.\");\r\n      }\r\n    }\r\n    closeModal();\r\n  };\r\n\r\n  const toggleTheme = () => setIsLightTheme((prev) => !prev);\r\n  const toggleDropdown = () => setIsDropdownOpen((prev) => !prev);\r\n\r\n  const openDeleteFolderModal = (index) => {\r\n    setActiveFolderIndex(index); // Store the folder index to delete\r\n    setIsDeleteModalOpen(true); // Open the delete confirmation modal\r\n  };\r\n\r\n  const openDeleteFormModal = (index) => {\r\n    setActiveFolderIndex(index); // Store the form index to delete\r\n    setIsDeleteFormModalOpen(true); // Open the delete confirmation modal\r\n  };\r\n\r\n  const closeDeleteFolderModal = () => setIsDeleteModalOpen(false);\r\n  const closeDeleteFormModal = () => setIsDeleteFormModalOpen(false);\r\n\r\n  const confirmDeleteFolder = async () => {\r\n    if (activeFolderIndex !== null) {\r\n      try {\r\n        await axios.delete(`http://localhost:8000/api/folders/${folders[activeFolderIndex]._id}`); // Make API call to delete the folder\r\n        setFolders((prevFolders) => prevFolders.filter((_, i) => i !== activeFolderIndex)); // Update the front-end state\r\n      } catch (error) {\r\n        console.error(\"Error deleting folder:\", error);\r\n      }\r\n    }\r\n    closeDeleteFolderModal(); // Close the modal after deletion\r\n  };\r\n\r\n  const confirmDeleteForm = async () => {\r\n    if (activeFolderIndex !== null) {\r\n      try {\r\n        const formId = folders[activeFolderIndex]?.forms[activeFolderIndex]?._id; // Get the form ID\r\n        await axios.delete(`http://localhost:8000/api/forms/${formId}`); // Make API call to delete the form\r\n        setFolders((prevFolders) => {\r\n          const updatedFolders = [...prevFolders];\r\n          updatedFolders[activeFolderIndex].forms = updatedFolders[activeFolderIndex].forms.filter(\r\n            (form) => form._id !== formId\r\n          ); // Remove the form from the front-end state\r\n          return updatedFolders;\r\n        });\r\n      } catch (error) {\r\n        console.error(\"Error deleting form:\", error);\r\n      }\r\n    }\r\n    closeDeleteFormModal(); // Close the modal after deletion\r\n  };\r\n\r\n  const toggleFolderVisibility = async (index) => {\r\n    setActiveFolderIndex(activeFolderIndex === index ? null : index);\r\n    if (activeFolderIndex !== index) {\r\n      try {\r\n        const folderId = folders[index]._id;\r\n        const response = await axios.get(`http://localhost:8000/api/forms/${folderId}`);\r\n        setFolders((prevFolders) => {\r\n          const updatedFolders = [...prevFolders];\r\n          updatedFolders[index].forms = response.data;\r\n          return updatedFolders;\r\n        });\r\n      } catch (error) {\r\n        console.error(\"Error fetching forms:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleFormClick = () => {\r\n    setIsWorkspaceActive(true); // Set workspace active when a form is clicked\r\n  };\r\n\r\n  return (\r\n    <div className={`dashboard-container ${isLightTheme ? \"light\" : \"dark\"}`}>\r\n      {isSettingsOpen ? (\r\n        <Settings closeSettings={() => setIsSettingsOpen(false)} />\r\n      ) : (\r\n        <>\r\n          <nav className=\"navbar\">\r\n            <div className=\"logo\"></div>\r\n            <div className=\"workspace-container\">\r\n              <button className=\"workspace-button\" onClick={toggleDropdown}>\r\n                <span>{username ? `${username}'s workspace` : \"Loading...\"}</span>\r\n                <img className=\"dropdown-icon\" src=\"drop.png\" alt=\"Dropdown Icon\" />\r\n              </button>\r\n              {isDropdownOpen && (\r\n                <div className=\"dropdown-menu\">\r\n                  <button className=\"dropdown-item\" onClick={() => setIsSettingsOpen(true)}>\r\n                    Settings\r\n                  </button>\r\n                  <button className=\"dropdown-item logout\">Log Out</button>\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div className=\"theme-toggle\">\r\n              <span>Light</span>\r\n              <label className=\"switch\">\r\n                <input type=\"checkbox\" checked={!isLightTheme} onChange={toggleTheme} />\r\n                <span className=\"slider\"></span>\r\n              </label>\r\n              <span>Dark</span>\r\n            </div>\r\n            <button className=\"share-button\" onClick={() => setIsShareModalOpen(true)}>\r\n              Share\r\n            </button>\r\n          </nav>\r\n\r\n          <div className=\"Dashboard-content\">\r\n            <ul className=\"Create-folder-list\">\r\n              <li>\r\n                <button\r\n                  className={`create-folder ${activeFolderIndex !== null ? \"hidden\" : \"\"}`}\r\n                  onClick={() => openModal(\"folder\")}\r\n                >\r\n                  <img src=\"folder.png\" className=\"folder\" alt=\"Folder\" />\r\n                  Create a folder\r\n                </button>\r\n              </li>\r\n              <li>\r\n                <button\r\n                  className={`create-form ${activeFolderIndex === null ? \"hidden\" : \"\"}`}\r\n                  onClick={() => openModal(\"form\")}\r\n                >\r\n                  <img src=\"form.png\" className=\"form\" alt=\"Form\" />\r\n                  Create a form\r\n                </button>\r\n              </li>\r\n            </ul>\r\n\r\n            <div className=\"folder-list\">\r\n              {folders.map((folder, index) => (\r\n                <div\r\n                  key={folder._id}\r\n                  className={`folder-item ${activeFolderIndex === index ? \"active\" : \"\"}`}\r\n                >\r\n                  <button\r\n                    className=\"folder-button\"\r\n                    onClick={() => toggleFolderVisibility(index)}\r\n                  >\r\n                    {folder.name}\r\n                  </button>\r\n                  <button\r\n                    className=\"delete-folder\"\r\n                    onClick={() => openDeleteFolderModal(index)}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                  {activeFolderIndex === index && (\r\n                    <ul className=\"form-list\">\r\n                      {forms.map((form) => (\r\n                        <li key={form._id} onClick={handleFormClick}>\r\n                          <button>{form.name}</button>\r\n                        </li>\r\n                      ))}\r\n                    </ul>\r\n                  )}\r\n                </div>\r\n              ))}\r\n            </div>\r\n\r\n            {isWorkspaceActive && (\r\n              <div className=\"workspace\">\r\n                {/* Workspace content */}\r\n                <h3>Workspace content here...</h3>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {isModalOpen && modalType === \"folder\" && (\r\n            <CreateFolderModal\r\n              closeModal={closeModal}\r\n              createFolder={handleCreateFolder}\r\n            />\r\n          )}\r\n          {isModalOpen && modalType === \"form\" && (\r\n            <CreateFormModal\r\n              closeModal={closeModal}\r\n              createForm={handleCreateForm}\r\n              folders={folders}\r\n            />\r\n          )}\r\n          {isDeleteModalOpen && (\r\n            <DeleteFolder\r\n              closeModal={closeDeleteFolderModal}\r\n              confirmDelete={confirmDeleteFolder}\r\n            />\r\n          )}\r\n          {isDeleteFormModalOpen && (\r\n            <DeleteForm\r\n              closeModal={closeDeleteFormModal}\r\n              confirmDelete={confirmDeleteForm}\r\n            />\r\n          )}\r\n          {isShareModalOpen && <ShareModal closeModal={() => setIsShareModalOpen(false)} />}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}