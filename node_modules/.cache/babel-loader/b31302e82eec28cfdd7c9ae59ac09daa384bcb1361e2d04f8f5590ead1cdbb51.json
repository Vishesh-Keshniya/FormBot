{"ast":null,"code":"var _jsxFileName = \"D:\\\\Cuvette\\\\MERN\\\\Client\\\\form-builder\\\\src\\\\Components\\\\Dashboard\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./Dashboard.css\";\nimport axios from 'axios';\nimport CreateFolderModal from \"./CreateFolderModal\";\nimport CreateFormModal from \"./CreateFormModal\";\nimport DeleteFolder from \"./DeleteFolder\";\nimport DeleteForm from \"./DeleteForm\";\nimport Settings from \"./Settings\";\nimport ShareModal from \"./ShareModal\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  var _folders$activeFolder;\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [modalType, setModalType] = useState(null);\n  const [isLightTheme, setIsLightTheme] = useState(false);\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [folders, setFolders] = useState([]);\n  const [forms, setForms] = useState([]);\n  const [username, setUsername] = useState(\"\"); // State to store the username\n  const [deleteFolderIndex, setDeleteFolderIndex] = useState(null);\n  const [deleteFormIndex, setDeleteFormIndex] = useState(null);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [isDeleteFormModalOpen, setIsDeleteFormModalOpen] = useState(false);\n  const [isSettingsOpen, setIsSettingsOpen] = useState(false);\n  const [isShareModalOpen, setIsShareModalOpen] = useState(false);\n  const [activeFolderIndex, setActiveFolderIndex] = useState(null);\n\n  // Fetch username on component mount\n\n  const token = localStorage.getItem('token');\n  if (token) {\n    console.log('Token:', token);\n  } else {\n    console.log('No token found');\n  }\n  const logout = () => {\n    localStorage.clear(); // Clear everything from localStorage\n    console.log(\"Logged out and localStorage cleared\");\n    // Optionally, redirect the user to the login page\n    window.location.href = '/login'; // or use React Router if you're using that\n  };\n  useEffect(() => {\n    localStorage.clear(); // This will clear localStorage every time the component mounts\n    console.log(\"localStorage cleared on page load\");\n  }, []);\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      const fetchUsername = async () => {\n        try {\n          const response = await axios.get('http://localhost:5000/username', {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          setUsername(response.data.username);\n        } catch (error) {\n          console.error(\"Error fetching username:\", error);\n        }\n      };\n      fetchUsername();\n    } else {\n      console.log(\"No token available\");\n    }\n  }, []);\n  const openModal = type => {\n    setModalType(type);\n    setIsModalOpen(true);\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setModalType(null);\n  };\n  const handleCreateFolder = folderName => {\n    if (folderName.trim()) {\n      const isDuplicate = folders.some(folder => folder.name === folderName.trim());\n      if (isDuplicate) {\n        alert(\"Folder name must be unique.\");\n        return;\n      }\n      setFolders([...folders, {\n        name: folderName.trim(),\n        forms: []\n      }]);\n    }\n    closeModal();\n  };\n  const handleCreateForm = formName => {\n    if (formName.trim()) {\n      if (activeFolderIndex !== null) {\n        const updatedFolders = [...folders];\n        updatedFolders[activeFolderIndex].forms.push(formName.trim());\n        setFolders(updatedFolders);\n      } else {\n        setForms([...forms, formName.trim()]);\n      }\n    }\n    closeModal();\n  };\n  const toggleTheme = () => {\n    setIsLightTheme(prevState => !prevState);\n  };\n  const toggleDropdown = () => {\n    setIsDropdownOpen(prevState => !prevState);\n  };\n  const handleDeleteFolder = index => {\n    const updatedFolders = folders.filter((_, i) => i !== index);\n    setFolders(updatedFolders);\n  };\n  const handleDeleteForm = index => {\n    const updatedForms = forms.filter((_, i) => i !== index);\n    setForms(updatedForms);\n  };\n  const openDeleteFolderModal = index => {\n    setDeleteFolderIndex(index);\n    setIsDeleteModalOpen(true);\n  };\n  const openDeleteFormModal = index => {\n    setDeleteFormIndex(index);\n    setIsDeleteFormModalOpen(true);\n  };\n  const closeDeleteFolderModal = () => {\n    setDeleteFolderIndex(null);\n    setIsDeleteModalOpen(false);\n  };\n  const closeDeleteFormModal = () => {\n    setDeleteFormIndex(null);\n    setIsDeleteFormModalOpen(false);\n  };\n  const confirmDeleteFolder = () => {\n    if (deleteFolderIndex !== null) {\n      handleDeleteFolder(deleteFolderIndex);\n    }\n    closeDeleteFolderModal();\n  };\n  const confirmDeleteForm = () => {\n    if (deleteFormIndex !== null) {\n      handleDeleteForm(deleteFormIndex);\n    }\n    closeDeleteFormModal();\n  };\n  const openSettings = () => {\n    setIsSettingsOpen(true);\n  };\n  const closeSettings = () => {\n    setIsSettingsOpen(false);\n  };\n  const openShareModal = () => {\n    setIsShareModalOpen(true);\n  };\n  const closeShareModal = () => {\n    setIsShareModalOpen(false);\n  };\n  const toggleFolderVisibility = index => {\n    setActiveFolderIndex(activeFolderIndex === index ? null : index);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `dashboard-container ${isLightTheme ? \"light\" : \"dark\"}`,\n    children: isSettingsOpen ? /*#__PURE__*/_jsxDEV(Settings, {\n      closeSettings: closeSettings\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"navbar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"workspace-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"workspace-button\",\n            onClick: toggleDropdown,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: username ? `${username}'s workspace` : \"Loading...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"dropdown-icon\",\n              src: \"drop.png\",\n              alt: \"Dropdown Icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 17\n          }, this), isDropdownOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dropdown-menu\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"dropdown-item\",\n              onClick: openSettings,\n              children: \"Settings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"dropdown-item logout\",\n              children: \"Log Out\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"theme-toggle\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Light\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"switch\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: !isLightTheme,\n              onChange: toggleTheme\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"slider\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Dark\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"share-button\",\n          onClick: openShareModal,\n          children: \"Share\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Dashboard-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"Create-folder-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"create-folder\",\n              onClick: () => openModal(\"folder\"),\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"folder.png\",\n                className: \"folder\",\n                alt: \"Folder\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 21\n              }, this), \"Create a folder\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"create-typebot\",\n              onClick: () => openModal(\"form\"),\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"plus\",\n                  children: \"+\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 23\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 55\n                }, this), \"Create a typebot\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"Create-form-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"folder-list-li\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"folder-list\",\n              children: folders.map((folder, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `folder-item ${activeFolderIndex === index ? \"active-folder\" : \"\"}`,\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  onClick: () => toggleFolderVisibility(index),\n                  children: folder.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"delete-button\",\n                  onClick: () => openDeleteFolderModal(index),\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: \"del.png\",\n                    alt: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 247,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 25\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 19\n            }, this), activeFolderIndex !== null && /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"form-list\",\n              children: (_folders$activeFolder = folders[activeFolderIndex]) === null || _folders$activeFolder === void 0 ? void 0 : _folders$activeFolder.forms.map((form, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: form\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"delete-button-form\",\n                  onClick: () => openDeleteFormModal(idx),\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: \"del.png\",\n                    className: \"del-form\",\n                    alt: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 262,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 27\n                }, this)]\n              }, idx, true, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"form-li\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-list\",\n              children: forms.map((form, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: form\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"delete-button-form\",\n                  onClick: () => openDeleteFormModal(index),\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: \"del.png\",\n                    className: \"del-form\",\n                    alt: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 279,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 25\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 13\n      }, this), isModalOpen && modalType === \"folder\" && /*#__PURE__*/_jsxDEV(CreateFolderModal, {\n        closeModal: closeModal,\n        isLightTheme: isLightTheme,\n        onCreateFolder: handleCreateFolder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 15\n      }, this), isModalOpen && modalType === \"form\" && /*#__PURE__*/_jsxDEV(CreateFormModal, {\n        closeModal: closeModal,\n        isLightTheme: isLightTheme,\n        onCreateForm: formName => handleCreateForm(formName, activeFolderIndex)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 15\n      }, this), isDeleteModalOpen && /*#__PURE__*/_jsxDEV(DeleteFolder, {\n        closeModal: closeDeleteFolderModal,\n        isLightTheme: isLightTheme,\n        onConfirm: confirmDeleteFolder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 15\n      }, this), isDeleteFormModalOpen && /*#__PURE__*/_jsxDEV(DeleteForm, {\n        closeModal: closeDeleteFormModal,\n        isLightTheme: isLightTheme,\n        onConfirm: confirmDeleteForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 15\n      }, this), isShareModalOpen && /*#__PURE__*/_jsxDEV(ShareModal, {\n        isOpen: isShareModalOpen,\n        onClose: closeShareModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 7\n  }, this);\n};\n_s(Dashboard, \"0qz0CtuRIer0lZ7zwGsbKf/vppg=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","CreateFolderModal","CreateFormModal","DeleteFolder","DeleteForm","Settings","ShareModal","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","_folders$activeFolder","isModalOpen","setIsModalOpen","modalType","setModalType","isLightTheme","setIsLightTheme","isDropdownOpen","setIsDropdownOpen","folders","setFolders","forms","setForms","username","setUsername","deleteFolderIndex","setDeleteFolderIndex","deleteFormIndex","setDeleteFormIndex","isDeleteModalOpen","setIsDeleteModalOpen","isDeleteFormModalOpen","setIsDeleteFormModalOpen","isSettingsOpen","setIsSettingsOpen","isShareModalOpen","setIsShareModalOpen","activeFolderIndex","setActiveFolderIndex","token","localStorage","getItem","console","log","logout","clear","window","location","href","fetchUsername","response","get","headers","Authorization","data","error","openModal","type","closeModal","handleCreateFolder","folderName","trim","isDuplicate","some","folder","name","alert","handleCreateForm","formName","updatedFolders","push","toggleTheme","prevState","toggleDropdown","handleDeleteFolder","index","filter","_","i","handleDeleteForm","updatedForms","openDeleteFolderModal","openDeleteFormModal","closeDeleteFolderModal","closeDeleteFormModal","confirmDeleteFolder","confirmDeleteForm","openSettings","closeSettings","openShareModal","closeShareModal","toggleFolderVisibility","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","checked","onChange","map","form","idx","onCreateFolder","onCreateForm","onConfirm","isOpen","onClose","_c","$RefreshReg$"],"sources":["D:/Cuvette/MERN/Client/form-builder/src/Components/Dashboard/Dashboard.js"],"sourcesContent":["  import React, { useState, useEffect } from \"react\";\r\n  import \"./Dashboard.css\";\r\n  import axios from 'axios';\r\n  import CreateFolderModal from \"./CreateFolderModal\";\r\n  import CreateFormModal from \"./CreateFormModal\";\r\n  import DeleteFolder from \"./DeleteFolder\";\r\n  import DeleteForm from \"./DeleteForm\";\r\n  import Settings from \"./Settings\";\r\n  import ShareModal from \"./ShareModal\";\r\n\r\n  const Dashboard = () => {\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n    const [modalType, setModalType] = useState(null);\r\n    const [isLightTheme, setIsLightTheme] = useState(false);\r\n    const [isDropdownOpen, setIsDropdownOpen] = useState(false);\r\n    const [folders, setFolders] = useState([]);\r\n    const [forms, setForms] = useState([]);\r\n    const [username, setUsername] = useState(\"\"); // State to store the username\r\n    const [deleteFolderIndex, setDeleteFolderIndex] = useState(null);\r\n    const [deleteFormIndex, setDeleteFormIndex] = useState(null);\r\n    const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\r\n    const [isDeleteFormModalOpen, setIsDeleteFormModalOpen] = useState(false);\r\n    const [isSettingsOpen, setIsSettingsOpen] = useState(false);\r\n    const [isShareModalOpen, setIsShareModalOpen] = useState(false);\r\n    const [activeFolderIndex, setActiveFolderIndex] = useState(null);\r\n    \r\n\r\n    // Fetch username on component mount\r\n\r\n    const token = localStorage.getItem('token');\r\nif (token) {\r\n  console.log('Token:', token);\r\n} else {\r\n  console.log('No token found');\r\n}\r\n\r\nconst logout = () => {\r\n  localStorage.clear();  // Clear everything from localStorage\r\n  console.log(\"Logged out and localStorage cleared\");\r\n  // Optionally, redirect the user to the login page\r\n  window.location.href = '/login'; // or use React Router if you're using that\r\n};\r\nuseEffect(() => {\r\n  localStorage.clear(); // This will clear localStorage every time the component mounts\r\n  console.log(\"localStorage cleared on page load\");\r\n}, []);\r\n\r\n\r\nuseEffect(() => {\r\n  const token = localStorage.getItem(\"token\");\r\n  if (token) {\r\n    const fetchUsername = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/username', {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n        setUsername(response.data.username);\r\n      } catch (error) {\r\n        console.error(\"Error fetching username:\", error);\r\n      }\r\n    };\r\n\r\n    fetchUsername();\r\n  } else {\r\n    console.log(\"No token available\");\r\n  }\r\n}, []);\r\n\r\n    \r\n\r\n    const openModal = (type) => {\r\n      setModalType(type);\r\n      setIsModalOpen(true);\r\n    };\r\n\r\n    const closeModal = () => {\r\n      setIsModalOpen(false);\r\n      setModalType(null);\r\n    };\r\n\r\n    const handleCreateFolder = (folderName) => {\r\n      if (folderName.trim()) {\r\n        const isDuplicate = folders.some(folder => folder.name === folderName.trim());\r\n        if (isDuplicate) {\r\n          alert(\"Folder name must be unique.\");\r\n          return;\r\n        }\r\n        setFolders([...folders, { name: folderName.trim(), forms: [] }]);\r\n      }\r\n      closeModal();\r\n    };\r\n\r\n    const handleCreateForm = (formName) => {\r\n      if (formName.trim()) {\r\n        if (activeFolderIndex !== null) {\r\n          const updatedFolders = [...folders];\r\n          updatedFolders[activeFolderIndex].forms.push(formName.trim());\r\n          setFolders(updatedFolders);\r\n        } else {\r\n          setForms([...forms, formName.trim()]);\r\n        }\r\n      }\r\n      closeModal();\r\n    };\r\n\r\n    const toggleTheme = () => {\r\n      setIsLightTheme((prevState) => !prevState);\r\n    };\r\n\r\n    const toggleDropdown = () => {\r\n      setIsDropdownOpen((prevState) => !prevState);\r\n    };\r\n\r\n    const handleDeleteFolder = (index) => {\r\n      const updatedFolders = folders.filter((_, i) => i !== index);\r\n      setFolders(updatedFolders);\r\n    };\r\n\r\n    const handleDeleteForm = (index) => {\r\n      const updatedForms = forms.filter((_, i) => i !== index);\r\n      setForms(updatedForms);\r\n    };\r\n\r\n    const openDeleteFolderModal = (index) => {\r\n      setDeleteFolderIndex(index);\r\n      setIsDeleteModalOpen(true);\r\n    };\r\n\r\n    const openDeleteFormModal = (index) => {\r\n      setDeleteFormIndex(index);\r\n      setIsDeleteFormModalOpen(true);\r\n    };\r\n\r\n    const closeDeleteFolderModal = () => {\r\n      setDeleteFolderIndex(null);\r\n      setIsDeleteModalOpen(false);\r\n    };\r\n\r\n    const closeDeleteFormModal = () => {\r\n      setDeleteFormIndex(null);\r\n      setIsDeleteFormModalOpen(false);\r\n    };\r\n\r\n    const confirmDeleteFolder = () => {\r\n      if (deleteFolderIndex !== null) {\r\n        handleDeleteFolder(deleteFolderIndex);\r\n      }\r\n      closeDeleteFolderModal();\r\n    };\r\n\r\n    const confirmDeleteForm = () => {\r\n      if (deleteFormIndex !== null) {\r\n        handleDeleteForm(deleteFormIndex);\r\n      }\r\n      closeDeleteFormModal();\r\n    };\r\n\r\n    const openSettings = () => {\r\n      setIsSettingsOpen(true);\r\n    };\r\n\r\n    const closeSettings = () => {\r\n      setIsSettingsOpen(false);\r\n    };\r\n\r\n    const openShareModal = () => {\r\n      setIsShareModalOpen(true);\r\n    };\r\n\r\n    const closeShareModal = () => {\r\n      setIsShareModalOpen(false);\r\n    };\r\n\r\n    const toggleFolderVisibility = (index) => {\r\n      setActiveFolderIndex(activeFolderIndex === index ? null : index);\r\n    };\r\n\r\n    return (\r\n      <div className={`dashboard-container ${isLightTheme ? \"light\" : \"dark\"}`}>\r\n        {isSettingsOpen ? (\r\n          <Settings closeSettings={closeSettings} />\r\n        ) : (\r\n          <>\r\n            <nav className=\"navbar\">\r\n              <div className=\"logo\"></div>\r\n              <div className=\"workspace-container\">\r\n                <button className=\"workspace-button\" onClick={toggleDropdown}>\r\n                <span>{username ? `${username}'s workspace` : \"Loading...\"}</span>\r\n\r\n                  <img className=\"dropdown-icon\" src=\"drop.png\" alt=\"Dropdown Icon\" />\r\n                </button>\r\n                {isDropdownOpen && (\r\n                  <div className=\"dropdown-menu\">\r\n                    <button className=\"dropdown-item\" onClick={openSettings}>Settings</button>\r\n                    <button className=\"dropdown-item logout\">Log Out</button>\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"theme-toggle\">\r\n                <span>Light</span>\r\n                <label className=\"switch\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={!isLightTheme}\r\n                    onChange={toggleTheme}\r\n                  />\r\n                  <span className=\"slider\"></span>\r\n                </label>\r\n                <span>Dark</span>\r\n              </div>\r\n              <button className=\"share-button\" onClick={openShareModal}>\r\n                Share\r\n              </button>\r\n            </nav>\r\n\r\n            <div className=\"Dashboard-content\">\r\n              <ul className=\"Create-folder-list\">\r\n                <li>\r\n                  <button className=\"create-folder\" onClick={() => openModal(\"folder\")}>\r\n                    <img src=\"folder.png\" className=\"folder\" alt=\"Folder\" />\r\n                    Create a folder\r\n                  </button>\r\n                </li>\r\n                <li>\r\n                  <button className=\"create-typebot\" onClick={() => openModal(\"form\")}>\r\n                    <p>\r\n                      <span className=\"plus\">+</span> <br />\r\n                      Create a typebot\r\n                    </p>\r\n                  </button>\r\n                </li>\r\n              </ul>\r\n\r\n              <ul className=\"Create-form-list\">\r\n                <li className=\"folder-list-li\">\r\n                  <div className=\"folder-list\">\r\n                    {folders.map((folder, index) => (\r\n                      <div key={index} className={`folder-item ${activeFolderIndex === index ? \"active-folder\" : \"\"}`}>\r\n                        <span onClick={() => toggleFolderVisibility(index)}>{folder.name}</span>\r\n                        <button\r\n                          className=\"delete-button\"\r\n                          onClick={() => openDeleteFolderModal(index)}\r\n                        >\r\n                          <img src=\"del.png\" alt=\"Delete\" />\r\n                        </button>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n\r\n                  {activeFolderIndex !== null && (\r\n                    <ul className=\"form-list\">\r\n                      {folders[activeFolderIndex]?.forms.map((form, idx) => (\r\n                        <div key={idx} className=\"form-item\">\r\n                          <span>{form}</span>\r\n                          <button\r\n                            className=\"delete-button-form\"\r\n                            onClick={() => openDeleteFormModal(idx)}\r\n                          >\r\n                            <img src=\"del.png\" className=\"del-form\" alt=\"Delete\" />\r\n                          </button>\r\n                        </div>\r\n                      ))}\r\n                    </ul>\r\n                  )}\r\n                </li>\r\n\r\n                <li className=\"form-li\">\r\n                  <div className=\"form-list\">\r\n                    {forms.map((form, index) => (\r\n                      <div key={index} className=\"form-item\">\r\n                        <span>{form}</span>\r\n                        <button\r\n                          className=\"delete-button-form\"\r\n                          onClick={() => openDeleteFormModal(index)}\r\n                        >\r\n                          <img src=\"del.png\" className=\"del-form\" alt=\"Delete\" />\r\n                        </button>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n\r\n            {isModalOpen && modalType === \"folder\" && (\r\n              <CreateFolderModal\r\n                closeModal={closeModal}\r\n                isLightTheme={isLightTheme}\r\n                onCreateFolder={handleCreateFolder}\r\n              />\r\n            )}\r\n            {isModalOpen && modalType === \"form\" && (\r\n              <CreateFormModal\r\n                closeModal={closeModal}\r\n                isLightTheme={isLightTheme}\r\n                onCreateForm={(formName) => handleCreateForm(formName, activeFolderIndex)}\r\n              />\r\n            )}\r\n\r\n            {isDeleteModalOpen && (\r\n              <DeleteFolder\r\n                closeModal={closeDeleteFolderModal}\r\n                isLightTheme={isLightTheme}\r\n                onConfirm={confirmDeleteFolder}\r\n              />\r\n            )}\r\n            {isDeleteFormModalOpen && (\r\n              <DeleteForm\r\n                closeModal={closeDeleteFormModal}\r\n                isLightTheme={isLightTheme}\r\n                onConfirm={confirmDeleteForm}\r\n              />\r\n            )}\r\n            {isShareModalOpen && (\r\n              <ShareModal isOpen={isShareModalOpen} onClose={closeShareModal} />\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  export default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}