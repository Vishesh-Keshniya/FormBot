{"ast":null,"code":"var _jsxFileName = \"D:\\\\Cuvette\\\\Final evaluation\\\\form-builder\\\\src\\\\Components\\\\Dashboard\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from \"react\";\nimport \"./Dashboard.css\";\nimport CreateFolderModal from \"./CreateFolderModal\";\nimport CreateFormModal from \"./CreateFormModal\";\nimport DeleteFolder from \"./DeleteFolder\";\nimport DeleteForm from \"./DeleteForm\";\nimport Settings from \"./Settings\";\nimport ShareModal from \"./ShareModal\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [modalType, setModalType] = useState(null);\n  const [isLightTheme, setIsLightTheme] = useState(false);\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [folders, setFolders] = useState([]);\n  const [forms, setForms] = useState([]); // Global forms\n  const [selectedFolderIndex, setSelectedFolderIndex] = useState(null);\n  const [deleteFolderIndex, setDeleteFolderIndex] = useState(null);\n  const [deleteFormIndex, setDeleteFormIndex] = useState(null);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [isDeleteFormModalOpen, setIsDeleteFormModalOpen] = useState(false);\n  const [isSettingsOpen, setIsSettingsOpen] = useState(false);\n  const [isShareModalOpen, setIsShareModalOpen] = useState(false);\n\n  // Open and close modals\n  const openModal = useCallback(type => {\n    setModalType(type);\n    setIsModalOpen(true);\n  }, []);\n  const closeModal = useCallback(() => {\n    setIsModalOpen(false);\n    setModalType(null);\n  }, []);\n\n  // Folder actions\n  const handleCreateFolder = useCallback(folderName => {\n    if (folderName.trim()) {\n      setFolders(prev => [...prev, {\n        name: folderName.trim(),\n        forms: []\n      }]);\n    }\n    closeModal();\n  }, [closeModal]);\n  const handleDeleteFolder = useCallback(index => {\n    setFolders(prev => prev.filter((_, i) => i !== index));\n    if (selectedFolderIndex === index) setSelectedFolderIndex(null);\n    closeDeleteFolderModal();\n  }, [selectedFolderIndex]);\n  const openDeleteFolderModal = index => {\n    setDeleteFolderIndex(index);\n    setIsDeleteModalOpen(true);\n  };\n  const closeDeleteFolderModal = () => {\n    setDeleteFolderIndex(null);\n    setIsDeleteModalOpen(false);\n  };\n\n  // Form actions\n  const handleCreateForm = useCallback((formName, folderIndex = null) => {\n    if (formName.trim()) {\n      if (folderIndex !== null) {\n        setFolders(prev => {\n          const updatedFolders = [...prev];\n          updatedFolders[folderIndex].forms.push(formName.trim());\n          return updatedFolders;\n        });\n      } else {\n        setForms(prev => [...prev, formName.trim()]);\n      }\n    }\n    closeModal();\n  }, [closeModal]);\n  const handleDeleteForm = useCallback(index => {\n    setForms(prev => prev.filter((_, i) => i !== index));\n    closeDeleteFormModal();\n  }, []);\n  const openDeleteFormModal = index => {\n    setDeleteFormIndex(index);\n    setIsDeleteFormModalOpen(true);\n  };\n  const closeDeleteFormModal = () => {\n    setDeleteFormIndex(null);\n    setIsDeleteFormModalOpen(false);\n  };\n\n  // Miscellaneous actions\n  const toggleTheme = () => setIsLightTheme(prev => !prev);\n  const toggleDropdown = () => setIsDropdownOpen(prev => !prev);\n  const handleFolderClick = index => {\n    setSelectedFolderIndex(prev => prev === index ? null : index);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `dashboard-container ${isLightTheme ? \"light\" : \"dark\"}`,\n    children: isSettingsOpen ? /*#__PURE__*/_jsxDEV(Settings, {\n      closeSettings: () => setIsSettingsOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"navbar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"workspace-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"workspace-button\",\n            onClick: toggleDropdown,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Dewank Rastogi's workspace\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"dropdown-icon\",\n              src: \"drop.png\",\n              alt: \"Dropdown Icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this), isDropdownOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dropdown-menu\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"dropdown-item\",\n              onClick: () => setIsSettingsOpen(true),\n              children: \"Settings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"dropdown-item logout\",\n              children: \"Log Out\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"theme-toggle\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Light\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"switch\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: !isLightTheme,\n              onChange: toggleTheme\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"slider\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Dark\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"share-button\",\n          onClick: () => setIsShareModalOpen(true),\n          children: \"Share\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Dashboard-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"Create-folder-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"create-folder\",\n              onClick: () => openModal(\"folder\"),\n              children: \"Create a folder\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this), folders.map((folder, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: `folder-item ${selectedFolderIndex === index ? \"selected\" : \"\"}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => handleFolderClick(index),\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: folder.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"delete-button\",\n                onClick: e => {\n                  e.stopPropagation();\n                  openDeleteFolderModal(index);\n                },\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 19\n            }, this), selectedFolderIndex === index && /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"form-list\",\n              children: folder.forms.map((form, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"form-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: form\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"delete-button-form\",\n                  onClick: e => {\n                    e.stopPropagation();\n                    openDeleteFormModal(idx);\n                  },\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 27\n                }, this)]\n              }, idx, true, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 21\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"Create-form-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"create-typebot\",\n              onClick: () => openModal(\"form\"),\n              children: \"Create a typebot\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this), forms.map((form, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"form-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: form\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"delete-button-form\",\n              onClick: () => openDeleteFormModal(index),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this), isModalOpen && modalType === \"folder\" && /*#__PURE__*/_jsxDEV(CreateFolderModal, {\n        closeModal: closeModal,\n        onCreateFolder: handleCreateFolder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 13\n      }, this), isModalOpen && modalType === \"form\" && /*#__PURE__*/_jsxDEV(CreateFormModal, {\n        closeModal: closeModal,\n        onCreateForm: handleCreateForm,\n        folderIndex: selectedFolderIndex\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 13\n      }, this), isDeleteModalOpen && /*#__PURE__*/_jsxDEV(DeleteFolder, {\n        closeModal: closeDeleteFolderModal,\n        onConfirm: () => handleDeleteFolder(deleteFolderIndex)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 13\n      }, this), isDeleteFormModalOpen && /*#__PURE__*/_jsxDEV(DeleteForm, {\n        closeModal: closeDeleteFormModal,\n        onConfirm: () => handleDeleteForm(deleteFormIndex)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 13\n      }, this), isShareModalOpen && /*#__PURE__*/_jsxDEV(ShareModal, {\n        onClose: () => setIsShareModalOpen(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"/419gfUpDMo6hoifyfm2lnPqgvM=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useCallback","CreateFolderModal","CreateFormModal","DeleteFolder","DeleteForm","Settings","ShareModal","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","isModalOpen","setIsModalOpen","modalType","setModalType","isLightTheme","setIsLightTheme","isDropdownOpen","setIsDropdownOpen","folders","setFolders","forms","setForms","selectedFolderIndex","setSelectedFolderIndex","deleteFolderIndex","setDeleteFolderIndex","deleteFormIndex","setDeleteFormIndex","isDeleteModalOpen","setIsDeleteModalOpen","isDeleteFormModalOpen","setIsDeleteFormModalOpen","isSettingsOpen","setIsSettingsOpen","isShareModalOpen","setIsShareModalOpen","openModal","type","closeModal","handleCreateFolder","folderName","trim","prev","name","handleDeleteFolder","index","filter","_","i","closeDeleteFolderModal","openDeleteFolderModal","handleCreateForm","formName","folderIndex","updatedFolders","push","handleDeleteForm","closeDeleteFormModal","openDeleteFormModal","toggleTheme","toggleDropdown","handleFolderClick","className","children","closeSettings","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","checked","onChange","map","folder","e","stopPropagation","form","idx","onCreateFolder","onCreateForm","onConfirm","onClose","_c","$RefreshReg$"],"sources":["D:/Cuvette/Final evaluation/form-builder/src/Components/Dashboard/Dashboard.js"],"sourcesContent":["import React, { useState, useCallback } from \"react\";\r\nimport \"./Dashboard.css\";\r\nimport CreateFolderModal from \"./CreateFolderModal\";\r\nimport CreateFormModal from \"./CreateFormModal\";\r\nimport DeleteFolder from \"./DeleteFolder\";\r\nimport DeleteForm from \"./DeleteForm\";\r\nimport Settings from \"./Settings\";\r\nimport ShareModal from \"./ShareModal\";\r\n\r\nconst Dashboard = () => {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [modalType, setModalType] = useState(null);\r\n  const [isLightTheme, setIsLightTheme] = useState(false);\r\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\r\n  const [folders, setFolders] = useState([]);\r\n  const [forms, setForms] = useState([]); // Global forms\r\n  const [selectedFolderIndex, setSelectedFolderIndex] = useState(null);\r\n  const [deleteFolderIndex, setDeleteFolderIndex] = useState(null);\r\n  const [deleteFormIndex, setDeleteFormIndex] = useState(null);\r\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\r\n  const [isDeleteFormModalOpen, setIsDeleteFormModalOpen] = useState(false);\r\n  const [isSettingsOpen, setIsSettingsOpen] = useState(false);\r\n  const [isShareModalOpen, setIsShareModalOpen] = useState(false);\r\n\r\n  // Open and close modals\r\n  const openModal = useCallback((type) => {\r\n    setModalType(type);\r\n    setIsModalOpen(true);\r\n  }, []);\r\n\r\n  const closeModal = useCallback(() => {\r\n    setIsModalOpen(false);\r\n    setModalType(null);\r\n  }, []);\r\n\r\n  // Folder actions\r\n  const handleCreateFolder = useCallback((folderName) => {\r\n    if (folderName.trim()) {\r\n      setFolders((prev) => [...prev, { name: folderName.trim(), forms: [] }]);\r\n    }\r\n    closeModal();\r\n  }, [closeModal]);\r\n\r\n  const handleDeleteFolder = useCallback((index) => {\r\n    setFolders((prev) => prev.filter((_, i) => i !== index));\r\n    if (selectedFolderIndex === index) setSelectedFolderIndex(null);\r\n    closeDeleteFolderModal();\r\n  }, [selectedFolderIndex]);\r\n\r\n  const openDeleteFolderModal = (index) => {\r\n    setDeleteFolderIndex(index);\r\n    setIsDeleteModalOpen(true);\r\n  };\r\n\r\n  const closeDeleteFolderModal = () => {\r\n    setDeleteFolderIndex(null);\r\n    setIsDeleteModalOpen(false);\r\n  };\r\n\r\n  // Form actions\r\n  const handleCreateForm = useCallback((formName, folderIndex = null) => {\r\n    if (formName.trim()) {\r\n      if (folderIndex !== null) {\r\n        setFolders((prev) => {\r\n          const updatedFolders = [...prev];\r\n          updatedFolders[folderIndex].forms.push(formName.trim());\r\n          return updatedFolders;\r\n        });\r\n      } else {\r\n        setForms((prev) => [...prev, formName.trim()]);\r\n      }\r\n    }\r\n    closeModal();\r\n  }, [closeModal]);\r\n\r\n  const handleDeleteForm = useCallback((index) => {\r\n    setForms((prev) => prev.filter((_, i) => i !== index));\r\n    closeDeleteFormModal();\r\n  }, []);\r\n\r\n  const openDeleteFormModal = (index) => {\r\n    setDeleteFormIndex(index);\r\n    setIsDeleteFormModalOpen(true);\r\n  };\r\n\r\n  const closeDeleteFormModal = () => {\r\n    setDeleteFormIndex(null);\r\n    setIsDeleteFormModalOpen(false);\r\n  };\r\n\r\n  // Miscellaneous actions\r\n  const toggleTheme = () => setIsLightTheme((prev) => !prev);\r\n\r\n  const toggleDropdown = () => setIsDropdownOpen((prev) => !prev);\r\n\r\n  const handleFolderClick = (index) => {\r\n    setSelectedFolderIndex((prev) => (prev === index ? null : index));\r\n  };\r\n\r\n  return (\r\n    <div className={`dashboard-container ${isLightTheme ? \"light\" : \"dark\"}`}>\r\n      {isSettingsOpen ? (\r\n        <Settings closeSettings={() => setIsSettingsOpen(false)} />\r\n      ) : (\r\n        <>\r\n          <nav className=\"navbar\">\r\n            <div className=\"logo\"></div>\r\n            <div className=\"workspace-container\">\r\n              <button className=\"workspace-button\" onClick={toggleDropdown}>\r\n                <span>Dewank Rastogi's workspace</span>\r\n                <img className=\"dropdown-icon\" src=\"drop.png\" alt=\"Dropdown Icon\" />\r\n              </button>\r\n              {isDropdownOpen && (\r\n                <div className=\"dropdown-menu\">\r\n                  <button className=\"dropdown-item\" onClick={() => setIsSettingsOpen(true)}>\r\n                    Settings\r\n                  </button>\r\n                  <button className=\"dropdown-item logout\">Log Out</button>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"theme-toggle\">\r\n              <span>Light</span>\r\n              <label className=\"switch\">\r\n                <input type=\"checkbox\" checked={!isLightTheme} onChange={toggleTheme} />\r\n                <span className=\"slider\"></span>\r\n              </label>\r\n              <span>Dark</span>\r\n            </div>\r\n            <button className=\"share-button\" onClick={() => setIsShareModalOpen(true)}>\r\n              Share\r\n            </button>\r\n          </nav>\r\n\r\n          <div className=\"Dashboard-content\">\r\n            <ul className=\"Create-folder-list\">\r\n              <li>\r\n                <button className=\"create-folder\" onClick={() => openModal(\"folder\")}>Create a folder</button>\r\n              </li>\r\n              {folders.map((folder, index) => (\r\n                <li key={index} className={`folder-item ${selectedFolderIndex === index ? \"selected\" : \"\"}`}>\r\n                  <div onClick={() => handleFolderClick(index)}>\r\n                    <span>{folder.name}</span>\r\n                    <button\r\n                      className=\"delete-button\"\r\n                      onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        openDeleteFolderModal(index);\r\n                      }}\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                  </div>\r\n                  {selectedFolderIndex === index && (\r\n                    <ul className=\"form-list\">\r\n                      {folder.forms.map((form, idx) => (\r\n                        <li key={idx} className=\"form-item\">\r\n                          <span>{form}</span>\r\n                          <button\r\n                            className=\"delete-button-form\"\r\n                            onClick={(e) => {\r\n                              e.stopPropagation();\r\n                              openDeleteFormModal(idx);\r\n                            }}\r\n                          >\r\n                            Delete\r\n                          </button>\r\n                        </li>\r\n                      ))}\r\n                    </ul>\r\n                  )}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n\r\n            <ul className=\"Create-form-list\">\r\n              <li>\r\n                <button className=\"create-typebot\" onClick={() => openModal(\"form\")}>Create a typebot</button>\r\n              </li>\r\n              {forms.map((form, index) => (\r\n                <li key={index} className=\"form-item\">\r\n                  <span>{form}</span>\r\n                  <button className=\"delete-button-form\" onClick={() => openDeleteFormModal(index)}>\r\n                    Delete\r\n                  </button>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n\r\n          {/* Modals */}\r\n          {isModalOpen && modalType === \"folder\" && (\r\n            <CreateFolderModal closeModal={closeModal} onCreateFolder={handleCreateFolder} />\r\n          )}\r\n          {isModalOpen && modalType === \"form\" && (\r\n            <CreateFormModal closeModal={closeModal} onCreateForm={handleCreateForm} folderIndex={selectedFolderIndex} />\r\n          )}\r\n          {isDeleteModalOpen && (\r\n            <DeleteFolder\r\n              closeModal={closeDeleteFolderModal}\r\n              onConfirm={() => handleDeleteFolder(deleteFolderIndex)}\r\n            />\r\n          )}\r\n          {isDeleteFormModalOpen && (\r\n            <DeleteForm\r\n              closeModal={closeDeleteFormModal}\r\n              onConfirm={() => handleDeleteForm(deleteFormIndex)}\r\n            />\r\n          )}\r\n          {isShareModalOpen && <ShareModal onClose={() => setIsShareModalOpen(false)} />}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}