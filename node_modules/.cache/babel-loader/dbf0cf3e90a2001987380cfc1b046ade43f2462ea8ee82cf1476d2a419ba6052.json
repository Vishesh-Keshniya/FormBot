{"ast":null,"code":"var _jsxFileName = \"D:\\\\Cuvette\\\\MERN\\\\Client\\\\form-builder\\\\src\\\\Components\\\\Dashboard\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./Dashboard.css\";\nimport CreateFolderModal from \"./CreateFolderModal\";\nimport CreateFormModal from \"./CreateFormModal\";\nimport DeleteFolder from \"./DeleteFolder\";\nimport DeleteForm from \"./DeleteForm\";\nimport Settings from \"./Settings\";\nimport ShareModal from \"./ShareModal\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [modalType, setModalType] = useState(null);\n  const [isLightTheme, setIsLightTheme] = useState(false);\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [folders, setFolders] = useState([]);\n  const [forms, setForms] = useState([]);\n  const [deleteFolderIndex, setDeleteFolderIndex] = useState(null);\n  const [deleteFormIndex, setDeleteFormIndex] = useState(null);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [isDeleteFormModalOpen, setIsDeleteFormModalOpen] = useState(false);\n  const [isSettingsOpen, setIsSettingsOpen] = useState(false);\n  const [isShareModalOpen, setIsShareModalOpen] = useState(false);\n  const [activeFolderIndex, setActiveFolderIndex] = useState(null);\n\n  // Fetch data from server on component mount\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const folderRes = await fetch(\"/api/folders\");\n        const folderData = await folderRes.json();\n        setFolders(folderData);\n        const formRes = await fetch(\"/api/forms\");\n        const formData = await formRes.json();\n        setForms(formData);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // Open Create Modal\n  const openModal = type => {\n    setModalType(type);\n    setIsModalOpen(true);\n  };\n\n  // Close Create Modal\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setModalType(null);\n  };\n\n  // Create Folder\n  const handleCreateFolder = async folderName => {\n    if (folderName.trim()) {\n      try {\n        const response = await fetch(\"/api/folders\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            name: folderName.trim()\n          })\n        });\n        const newFolder = await response.json();\n        setFolders([...folders, newFolder]);\n      } catch (error) {\n        console.error(\"Error creating folder:\", error);\n      }\n    }\n    closeModal();\n  };\n\n  // Create Form\n  const handleCreateForm = async (formName, folderIndex = null) => {\n    if (formName.trim()) {\n      try {\n        let response;\n        if (folderIndex !== null) {\n          const folderId = folders[folderIndex]._id;\n          response = await fetch(`/api/folders/${folderId}/forms`, {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n              name: formName.trim()\n            })\n          });\n          const updatedFolder = await response.json();\n          const updatedFolders = [...folders];\n          updatedFolders[folderIndex] = updatedFolder;\n          setFolders(updatedFolders);\n        } else {\n          response = await fetch(\"/api/forms\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n              name: formName.trim()\n            })\n          });\n          const newForm = await response.json();\n          setForms([...forms, newForm]);\n        }\n      } catch (error) {\n        console.error(\"Error creating form:\", error);\n      }\n    }\n    closeModal();\n  };\n\n  // Delete Folder\n  const handleDeleteFolder = async index => {\n    const folderId = folders[index]._id;\n    try {\n      await fetch(`/api/folders/${folderId}`, {\n        method: \"DELETE\"\n      });\n      setFolders(folders.filter((_, i) => i !== index));\n    } catch (error) {\n      console.error(\"Error deleting folder:\", error);\n    }\n  };\n\n  // Delete Form\n  const handleDeleteForm = async index => {\n    const formId = forms[index]._id;\n    try {\n      await fetch(`/api/forms/${formId}`, {\n        method: \"DELETE\"\n      });\n      setForms(forms.filter((_, i) => i !== index));\n    } catch (error) {\n      console.error(\"Error deleting form:\", error);\n    }\n  };\n\n  // Open/Delete Modals\n  const openDeleteFolderModal = index => {\n    setDeleteFolderIndex(index);\n    setIsDeleteModalOpen(true);\n  };\n  const openDeleteFormModal = index => {\n    setDeleteFormIndex(index);\n    setIsDeleteFormModalOpen(true);\n  };\n  const closeDeleteFolderModal = () => {\n    setDeleteFolderIndex(null);\n    setIsDeleteModalOpen(false);\n  };\n  const closeDeleteFormModal = () => {\n    setDeleteFormIndex(null);\n    setIsDeleteFormModalOpen(false);\n  };\n\n  // Confirm Delete Folder\n  const confirmDeleteFolder = () => {\n    handleDeleteFolder(deleteFolderIndex);\n    closeDeleteFolderModal();\n  };\n\n  // Confirm Delete Form\n  const confirmDeleteForm = () => {\n    handleDeleteForm(deleteFormIndex);\n    closeDeleteFormModal();\n  };\n\n  // Toggle Settings\n  const openSettings = () => {\n    setIsSettingsOpen(true);\n  };\n  const closeSettings = () => {\n    setIsSettingsOpen(false);\n  };\n\n  // Open Share Modal\n  const openShareModal = () => {\n    setIsShareModalOpen(true);\n  };\n  const closeShareModal = () => {\n    setIsShareModalOpen(false);\n  };\n\n  // Theme Toggle\n  const toggleTheme = () => {\n    setIsLightTheme(prevState => !prevState);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `dashboard-container ${isLightTheme ? \"light\" : \"dark\"}`,\n    children: isSettingsOpen ? /*#__PURE__*/_jsxDEV(Settings, {\n      closeSettings: closeSettings\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"navbar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"workspace-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"workspace-button\",\n            onClick: () => setIsDropdownOpen(!isDropdownOpen),\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Dewank Rastogi's workspace\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"dropdown-icon\",\n              src: \"drop.png\",\n              alt: \"Dropdown Icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this), isDropdownOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dropdown-menu\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"dropdown-item\",\n              onClick: openSettings,\n              children: \"Settings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"dropdown-item logout\",\n              children: \"Log Out\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"theme-toggle\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Light\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"switch\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: !isLightTheme,\n              onChange: toggleTheme\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"slider\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Dark\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"share-button\",\n          onClick: openShareModal,\n          children: \"Share\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Dashboard-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"Create-folder-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"create-folder\",\n              onClick: () => openModal(\"folder\"),\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"folder.png\",\n                className: \"folder\",\n                alt: \"Folder\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 19\n              }, this), \"Create a folder\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"create-typebot\",\n              onClick: () => openModal(\"form\"),\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"plus\",\n                  children: \"+\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 21\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 53\n                }, this), \"Create a typebot\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"Create-form-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"folder-list-li\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"folder-list\",\n              children: folders.map((folder, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"folder-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  onClick: () => setActiveFolderIndex(activeFolderIndex === index ? null : index),\n                  children: folder.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"delete-button\",\n                  onClick: () => openDeleteFolderModal(index),\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: \"del.png\",\n                    alt: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 256,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 23\n                }, this), activeFolderIndex === index && /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: \"form-list\",\n                  children: folder.forms.map((form, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-item\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: form\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 262,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"delete-button-form\",\n                      onClick: () => openDeleteFormModal(idx),\n                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                        src: \"del.png\",\n                        className: \"del-form\",\n                        alt: \"Delete\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 267,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 263,\n                      columnNumber: 31\n                    }, this)]\n                  }, idx, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 261,\n                    columnNumber: 29\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 25\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this), activeFolderIndex === null && /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"form-li\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-list\",\n              children: forms.map((form, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: form\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"delete-button-form\",\n                  onClick: () => openDeleteFormModal(index),\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: \"del.png\",\n                    className: \"del-form\",\n                    alt: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 289,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 25\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }, this), isModalOpen && modalType === \"folder\" && /*#__PURE__*/_jsxDEV(CreateFolderModal, {\n        closeModal: closeModal,\n        isLightTheme: isLightTheme,\n        onCreateFolder: handleCreateFolder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 13\n      }, this), isModalOpen && modalType === \"form\" && /*#__PURE__*/_jsxDEV(CreateFormModal, {\n        closeModal: closeModal,\n        isLightTheme: isLightTheme,\n        onCreateForm: handleCreateForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 13\n      }, this), isDeleteModalOpen && /*#__PURE__*/_jsxDEV(DeleteFolder, {\n        closeModal: closeDeleteFolderModal,\n        isLightTheme: isLightTheme,\n        onConfirm: confirmDeleteFolder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 13\n      }, this), isDeleteFormModalOpen && /*#__PURE__*/_jsxDEV(DeleteForm, {\n        closeModal: closeDeleteFormModal,\n        isLightTheme: isLightTheme,\n        onConfirm: confirmDeleteForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 13\n      }, this), isShareModalOpen && /*#__PURE__*/_jsxDEV(ShareModal, {\n        closeShareModal: closeShareModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"XK75fZZoeXqmU8T79JFSQWJYHXM=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","CreateFolderModal","CreateFormModal","DeleteFolder","DeleteForm","Settings","ShareModal","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","isModalOpen","setIsModalOpen","modalType","setModalType","isLightTheme","setIsLightTheme","isDropdownOpen","setIsDropdownOpen","folders","setFolders","forms","setForms","deleteFolderIndex","setDeleteFolderIndex","deleteFormIndex","setDeleteFormIndex","isDeleteModalOpen","setIsDeleteModalOpen","isDeleteFormModalOpen","setIsDeleteFormModalOpen","isSettingsOpen","setIsSettingsOpen","isShareModalOpen","setIsShareModalOpen","activeFolderIndex","setActiveFolderIndex","fetchData","folderRes","fetch","folderData","json","formRes","formData","error","console","openModal","type","closeModal","handleCreateFolder","folderName","trim","response","method","headers","body","JSON","stringify","name","newFolder","handleCreateForm","formName","folderIndex","folderId","_id","updatedFolder","updatedFolders","newForm","handleDeleteFolder","index","filter","_","i","handleDeleteForm","formId","openDeleteFolderModal","openDeleteFormModal","closeDeleteFolderModal","closeDeleteFormModal","confirmDeleteFolder","confirmDeleteForm","openSettings","closeSettings","openShareModal","closeShareModal","toggleTheme","prevState","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","checked","onChange","map","folder","form","idx","onCreateFolder","onCreateForm","onConfirm","_c","$RefreshReg$"],"sources":["D:/Cuvette/MERN/Client/form-builder/src/Components/Dashboard/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./Dashboard.css\";\r\nimport CreateFolderModal from \"./CreateFolderModal\";\r\nimport CreateFormModal from \"./CreateFormModal\";\r\nimport DeleteFolder from \"./DeleteFolder\";\r\nimport DeleteForm from \"./DeleteForm\";\r\nimport Settings from \"./Settings\";\r\nimport ShareModal from \"./ShareModal\";\r\n\r\nconst Dashboard = () => {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [modalType, setModalType] = useState(null);\r\n  const [isLightTheme, setIsLightTheme] = useState(false);\r\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\r\n  const [folders, setFolders] = useState([]);\r\n  const [forms, setForms] = useState([]);\r\n  const [deleteFolderIndex, setDeleteFolderIndex] = useState(null);\r\n  const [deleteFormIndex, setDeleteFormIndex] = useState(null);\r\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\r\n  const [isDeleteFormModalOpen, setIsDeleteFormModalOpen] = useState(false);\r\n  const [isSettingsOpen, setIsSettingsOpen] = useState(false);\r\n  const [isShareModalOpen, setIsShareModalOpen] = useState(false);\r\n  const [activeFolderIndex, setActiveFolderIndex] = useState(null);\r\n\r\n  // Fetch data from server on component mount\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const folderRes = await fetch(\"/api/folders\");\r\n        const folderData = await folderRes.json();\r\n        setFolders(folderData);\r\n\r\n        const formRes = await fetch(\"/api/forms\");\r\n        const formData = await formRes.json();\r\n        setForms(formData);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  // Open Create Modal\r\n  const openModal = (type) => {\r\n    setModalType(type);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  // Close Create Modal\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n    setModalType(null);\r\n  };\r\n\r\n  // Create Folder\r\n  const handleCreateFolder = async (folderName) => {\r\n    if (folderName.trim()) {\r\n      try {\r\n        const response = await fetch(\"/api/folders\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({ name: folderName.trim() }),\r\n        });\r\n        const newFolder = await response.json();\r\n        setFolders([...folders, newFolder]);\r\n      } catch (error) {\r\n        console.error(\"Error creating folder:\", error);\r\n      }\r\n    }\r\n    closeModal();\r\n  };\r\n\r\n  // Create Form\r\n  const handleCreateForm = async (formName, folderIndex = null) => {\r\n    if (formName.trim()) {\r\n      try {\r\n        let response;\r\n        if (folderIndex !== null) {\r\n          const folderId = folders[folderIndex]._id;\r\n          response = await fetch(`/api/folders/${folderId}/forms`, {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({ name: formName.trim() }),\r\n          });\r\n          const updatedFolder = await response.json();\r\n          const updatedFolders = [...folders];\r\n          updatedFolders[folderIndex] = updatedFolder;\r\n          setFolders(updatedFolders);\r\n        } else {\r\n          response = await fetch(\"/api/forms\", {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({ name: formName.trim() }),\r\n          });\r\n          const newForm = await response.json();\r\n          setForms([...forms, newForm]);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error creating form:\", error);\r\n      }\r\n    }\r\n    closeModal();\r\n  };\r\n\r\n  // Delete Folder\r\n  const handleDeleteFolder = async (index) => {\r\n    const folderId = folders[index]._id;\r\n    try {\r\n      await fetch(`/api/folders/${folderId}`, { method: \"DELETE\" });\r\n      setFolders(folders.filter((_, i) => i !== index));\r\n    } catch (error) {\r\n      console.error(\"Error deleting folder:\", error);\r\n    }\r\n  };\r\n\r\n  // Delete Form\r\n  const handleDeleteForm = async (index) => {\r\n    const formId = forms[index]._id;\r\n    try {\r\n      await fetch(`/api/forms/${formId}`, { method: \"DELETE\" });\r\n      setForms(forms.filter((_, i) => i !== index));\r\n    } catch (error) {\r\n      console.error(\"Error deleting form:\", error);\r\n    }\r\n  };\r\n\r\n  // Open/Delete Modals\r\n  const openDeleteFolderModal = (index) => {\r\n    setDeleteFolderIndex(index);\r\n    setIsDeleteModalOpen(true);\r\n  };\r\n  const openDeleteFormModal = (index) => {\r\n    setDeleteFormIndex(index);\r\n    setIsDeleteFormModalOpen(true);\r\n  };\r\n  const closeDeleteFolderModal = () => {\r\n    setDeleteFolderIndex(null);\r\n    setIsDeleteModalOpen(false);\r\n  };\r\n  const closeDeleteFormModal = () => {\r\n    setDeleteFormIndex(null);\r\n    setIsDeleteFormModalOpen(false);\r\n  };\r\n\r\n  // Confirm Delete Folder\r\n  const confirmDeleteFolder = () => {\r\n    handleDeleteFolder(deleteFolderIndex);\r\n    closeDeleteFolderModal();\r\n  };\r\n\r\n  // Confirm Delete Form\r\n  const confirmDeleteForm = () => {\r\n    handleDeleteForm(deleteFormIndex);\r\n    closeDeleteFormModal();\r\n  };\r\n\r\n  // Toggle Settings\r\n  const openSettings = () => {\r\n    setIsSettingsOpen(true);\r\n  };\r\n  const closeSettings = () => {\r\n    setIsSettingsOpen(false);\r\n  };\r\n\r\n  // Open Share Modal\r\n  const openShareModal = () => {\r\n    setIsShareModalOpen(true);\r\n  };\r\n  const closeShareModal = () => {\r\n    setIsShareModalOpen(false);\r\n  };\r\n\r\n  // Theme Toggle\r\n  const toggleTheme = () => {\r\n    setIsLightTheme((prevState) => !prevState);\r\n  };\r\n\r\n  return (\r\n    <div className={`dashboard-container ${isLightTheme ? \"light\" : \"dark\"}`}>\r\n      {isSettingsOpen ? (\r\n        <Settings closeSettings={closeSettings} />\r\n      ) : (\r\n        <>\r\n          {/* Navbar */}\r\n          <nav className=\"navbar\">\r\n            <div className=\"logo\"></div>\r\n            <div className=\"workspace-container\">\r\n              <button className=\"workspace-button\" onClick={() => setIsDropdownOpen(!isDropdownOpen)}>\r\n                <span>Dewank Rastogi's workspace</span>\r\n                <img className=\"dropdown-icon\" src=\"drop.png\" alt=\"Dropdown Icon\" />\r\n              </button>\r\n              {isDropdownOpen && (\r\n                <div className=\"dropdown-menu\">\r\n                  <button className=\"dropdown-item\" onClick={openSettings}>\r\n                    Settings\r\n                  </button>\r\n                  <button className=\"dropdown-item logout\">Log Out</button>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"theme-toggle\">\r\n              <span>Light</span>\r\n              <label className=\"switch\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={!isLightTheme}\r\n                  onChange={toggleTheme}\r\n                />\r\n                <span className=\"slider\"></span>\r\n              </label>\r\n              <span>Dark</span>\r\n            </div>\r\n            <button className=\"share-button\" onClick={openShareModal}>\r\n              Share\r\n            </button>\r\n          </nav>\r\n\r\n          {/* Dashboard Content */}\r\n          <div className=\"Dashboard-content\">\r\n            {/* Create Section */}\r\n            <ul className=\"Create-folder-list\">\r\n              <li>\r\n                <button className=\"create-folder\" onClick={() => openModal(\"folder\")}>\r\n                  <img src=\"folder.png\" className=\"folder\" alt=\"Folder\" />\r\n                  Create a folder\r\n                </button>\r\n              </li>\r\n              <li>\r\n                <button className=\"create-typebot\" onClick={() => openModal(\"form\")}>\r\n                  <p>\r\n                    <span className=\"plus\">+</span> <br />\r\n                    Create a typebot\r\n                  </p>\r\n                </button>\r\n              </li>\r\n            </ul>\r\n\r\n            {/* Folder and Form Display */}\r\n            <ul className=\"Create-form-list\">\r\n              <li className=\"folder-list-li\">\r\n                <div className=\"folder-list\">\r\n                  {folders.map((folder, index) => (\r\n                    <div key={index} className=\"folder-item\">\r\n                      <span onClick={() => setActiveFolderIndex(activeFolderIndex === index ? null : index)}>\r\n                        {folder.name}\r\n                      </span>\r\n                      <button className=\"delete-button\" onClick={() => openDeleteFolderModal(index)}>\r\n                        <img src=\"del.png\" alt=\"Delete\" />\r\n                      </button>\r\n                      {activeFolderIndex === index && (\r\n                        <ul className=\"form-list\">\r\n                          {folder.forms.map((form, idx) => (\r\n                            <div key={idx} className=\"form-item\">\r\n                              <span>{form}</span>\r\n                              <button\r\n                                className=\"delete-button-form\"\r\n                                onClick={() => openDeleteFormModal(idx)}\r\n                              >\r\n                                <img src=\"del.png\" className=\"del-form\" alt=\"Delete\" />\r\n                              </button>\r\n                            </div>\r\n                          ))}\r\n                        </ul>\r\n                      )}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </li>\r\n\r\n              {/* Display Global Forms */}\r\n              {activeFolderIndex === null && (\r\n                <li className=\"form-li\">\r\n                  <div className=\"form-list\">\r\n                    {forms.map((form, index) => (\r\n                      <div key={index} className=\"form-item\">\r\n                        <span>{form}</span>\r\n                        <button\r\n                          className=\"delete-button-form\"\r\n                          onClick={() => openDeleteFormModal(index)}\r\n                        >\r\n                          <img src=\"del.png\" className=\"del-form\" alt=\"Delete\" />\r\n                        </button>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </li>\r\n              )}\r\n            </ul>\r\n          </div>\r\n\r\n          {/* Modals */}\r\n          {isModalOpen && modalType === \"folder\" && (\r\n            <CreateFolderModal\r\n              closeModal={closeModal}\r\n              isLightTheme={isLightTheme}\r\n              onCreateFolder={handleCreateFolder}\r\n            />\r\n          )}\r\n          {isModalOpen && modalType === \"form\" && (\r\n            <CreateFormModal\r\n              closeModal={closeModal}\r\n              isLightTheme={isLightTheme}\r\n              onCreateForm={handleCreateForm}\r\n            />\r\n          )}\r\n          {isDeleteModalOpen && (\r\n            <DeleteFolder\r\n              closeModal={closeDeleteFolderModal}\r\n              isLightTheme={isLightTheme}\r\n              onConfirm={confirmDeleteFolder}\r\n            />\r\n          )}\r\n          {isDeleteFormModalOpen && (\r\n            <DeleteForm\r\n              closeModal={closeDeleteFormModal}\r\n              isLightTheme={isLightTheme}\r\n              onConfirm={confirmDeleteForm}\r\n            />\r\n          )}\r\n          {isShareModalOpen && (\r\n            <ShareModal\r\n              closeShareModal={closeShareModal}\r\n            />\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}