{"ast":null,"code":"import{useNavigate}from\"react-router-dom\";import React,{useState}from'react';import'./LoginPage.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const LoginPage=_ref=>{let{onBackClick,onNavigateToSignUp,onLoginSuccess}=_ref;const[email,setEmail]=useState('');const[password,setPassword]=useState('');const[error,setError]=useState('');const[loading,setLoading]=useState(false);const navigate=useNavigate();// Handle Back Button Click\nconst handleBackClick=()=>{if(onBackClick)onBackClick();};// Handle Register Button Click\nconst handleRegisterClick=()=>{if(onNavigateToSignUp)onNavigateToSignUp();};// Handle Form Submit\nconst handleLoginSubmit=async e=>{e.preventDefault();setError('');setLoading(true);// Set loading state to true\ntry{const response=await fetch('https://server-txml.onrender.com/login',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email,password})});const data=await response.json();if(response.ok){alert('Login Successful!');localStorage.setItem('jwtToken',data.token);// Store token in localStorage\nconsole.log('JWT Token:',data.token);// Log to ensure token is stored\n// Navigate to dashboard after login success\nnavigate(\"/dashboard\");if(onLoginSuccess)onLoginSuccess();// Optional callback if needed\n}else{setError(data.message||'Invalid email or password.');}}catch(error){setError('An error occurred. Please try again later.');console.error('Login error:',error);// For debugging\n}finally{setLoading(false);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"login-page\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"back-button\",onClick:()=>navigate(\"/\"),children:/*#__PURE__*/_jsx(\"img\",{src:\"arrow_back.png\",alt:\"Back\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"orange-triangle\",children:/*#__PURE__*/_jsx(\"img\",{src:\"taco.png\",alt:\"Triangle Design\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"login-container\",children:[/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleLoginSubmit,children:[/*#__PURE__*/_jsx(\"label\",{children:\"Email\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",placeholder:\"Enter your email\",value:email,onChange:e=>setEmail(e.target.value),required:true}),/*#__PURE__*/_jsx(\"label\",{children:\"Password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"********\",value:password,onChange:e=>setPassword(e.target.value),required:true}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error\",children:error}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn login-btn\",disabled:loading,children:loading?'Logging in...':'Log In'}),/*#__PURE__*/_jsx(\"div\",{className:\"or\",children:\"OR\"}),/*#__PURE__*/_jsxs(\"button\",{type:\"button\",className:\"btn google-btn\",children:[/*#__PURE__*/_jsx(\"img\",{src:\"google.png\",alt:\"Google Icon\"}),\"Sign In with Google\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"register\",children:[\"Don\\u2019t have an account?\",' ',/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate(\"/signup\"),className:\"register-btn\",children:\"Register now\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"pink-ellipse\",children:/*#__PURE__*/_jsx(\"img\",{src:\"pinkelip.png\",alt:\"Pink Ellipse\",className:\"pink\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"bottom-circle\",children:/*#__PURE__*/_jsx(\"img\",{src:\"bottomellip.png\",alt:\"Bottom Circle\",className:\"bottom\"})})]})]});};export default LoginPage;","map":{"version":3,"names":["useNavigate","React","useState","jsx","_jsx","jsxs","_jsxs","LoginPage","_ref","onBackClick","onNavigateToSignUp","onLoginSuccess","email","setEmail","password","setPassword","error","setError","loading","setLoading","navigate","handleBackClick","handleRegisterClick","handleLoginSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","ok","alert","localStorage","setItem","token","console","log","message","className","children","onClick","src","alt","onSubmit","type","placeholder","value","onChange","target","required","disabled"],"sources":["D:/Cuvette/MERN/Client/form-builder/src/Components/Login-page/LoginPage.js"],"sourcesContent":["import { useNavigate } from \"react-router-dom\";\r\nimport React, { useState } from 'react';\r\nimport './LoginPage.css';\r\n\r\nconst LoginPage = ({ onBackClick, onNavigateToSignUp, onLoginSuccess }) => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  // Handle Back Button Click\r\n  const handleBackClick = () => {\r\n    if (onBackClick) onBackClick();\r\n  };\r\n\r\n  // Handle Register Button Click\r\n  const handleRegisterClick = () => {\r\n    if (onNavigateToSignUp) onNavigateToSignUp();\r\n  };\r\n\r\n  // Handle Form Submit\r\n  const handleLoginSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setLoading(true); // Set loading state to true\r\n  \r\n    try {\r\n      const response = await fetch('https://server-txml.onrender.com/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n  \r\n      const data = await response.json();\r\n  \r\n      if (response.ok) {\r\n        alert('Login Successful!');\r\n        localStorage.setItem('jwtToken', data.token); // Store token in localStorage\r\n        console.log('JWT Token:', data.token); // Log to ensure token is stored\r\n        \r\n        // Navigate to dashboard after login success\r\n        navigate(\"/dashboard\");\r\n        \r\n        if (onLoginSuccess) onLoginSuccess(); // Optional callback if needed\r\n      } else {\r\n        setError(data.message || 'Invalid email or password.');\r\n      }\r\n    } catch (error) {\r\n      setError('An error occurred. Please try again later.');\r\n      console.error('Login error:', error); // For debugging\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div className=\"login-page\">\r\n      <button className=\"back-button\" onClick={() => navigate(\"/\")}>\r\n        <img src=\"arrow_back.png\" alt=\"Back\" />\r\n      </button>\r\n\r\n      <div className=\"orange-triangle\">\r\n        <img src=\"taco.png\" alt=\"Triangle Design\" />\r\n      </div>\r\n\r\n      <div className=\"login-container\">\r\n        <form onSubmit={handleLoginSubmit}>\r\n          <label>Email</label>\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Enter your email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          />\r\n\r\n          <label>Password</label>\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"********\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n          />\r\n\r\n          {error && <div className=\"error\">{error}</div>}\r\n\r\n          <button type=\"submit\" className=\"btn login-btn\" disabled={loading}>\r\n            {loading ? 'Logging in...' : 'Log In' }\r\n          </button>\r\n\r\n          <div className=\"or\">OR</div>\r\n\r\n          <button type=\"button\" className=\"btn google-btn\">\r\n            <img src=\"google.png\" alt=\"Google Icon\" />\r\n            Sign In with Google\r\n          </button>\r\n        </form>\r\n\r\n        <div className=\"register\">\r\n          Donâ€™t have an account?{' '}\r\n          <button onClick={() => navigate(\"/signup\")} className=\"register-btn\">\r\n            Register now\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"pink-ellipse\">\r\n          <img src=\"pinkelip.png\" alt=\"Pink Ellipse\" className=\"pink\" />\r\n        </div>\r\n\r\n        <div className=\"bottom-circle\">\r\n          <img src=\"bottomellip.png\" alt=\"Bottom Circle\" className=\"bottom\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}