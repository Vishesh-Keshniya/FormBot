{"ast":null,"code":"var _jsxFileName = \"D:\\\\Cuvette\\\\Final evaluation\\\\form-builder\\\\src\\\\Components\\\\Dashboard\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Dashboard.css\";\nimport CreateFolderModal from \"./CreateFolderModal\";\nimport CreateFormModal from \"./CreateFormModal\";\nimport DeleteFolder from \"./DeleteFolder\";\nimport DeleteForm from \"./DeleteForm\";\nimport Settings from \"./Settings\";\nimport ShareModal from \"./ShareModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [modalType, setModalType] = useState(null);\n  const [isLightTheme, setIsLightTheme] = useState(false);\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [folders, setFolders] = useState([]); // Grouped folders\n  const [forms, setForms] = useState([]); // Global forms\n  const [deleteFolderIndex, setDeleteFolderIndex] = useState(null);\n  const [deleteFormIndices, setDeleteFormIndices] = useState({\n    folderIndex: null,\n    formIndex: null\n  });\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [isDeleteFormModalOpen, setIsDeleteFormModalOpen] = useState(false);\n  const [isSettingsOpen, setIsSettingsOpen] = useState(false);\n  const [isShareModalOpen, setIsShareModalOpen] = useState(false);\n  const openModal = type => {\n    setModalType(type);\n    setIsModalOpen(true);\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setModalType(null);\n  };\n  const handleCreateFolder = folderName => {\n    if (folderName.trim()) {\n      setFolders([...folders, {\n        name: folderName.trim(),\n        forms: []\n      }]);\n    }\n    closeModal();\n  };\n  const handleCreateForm = (formName, folderIndex = null) => {\n    if (formName.trim()) {\n      if (folderIndex !== null) {\n        // Add form to the specific folder\n        const updatedFolders = [...folders];\n        updatedFolders[folderIndex].forms.push(formName.trim());\n        setFolders(updatedFolders);\n      } else {\n        // Global form\n        setForms([...forms, formName.trim()]);\n      }\n    }\n    closeModal();\n  };\n  const handleDeleteFolder = index => {\n    const updatedFolders = folders.filter((_, i) => i !== index);\n    setFolders(updatedFolders);\n  };\n  const handleDeleteForm = (folderIndex, formIndex) => {\n    if (folderIndex !== null) {\n      // Delete form from specific folder\n      const updatedFolders = [...folders];\n      updatedFolders[folderIndex].forms = updatedFolders[folderIndex].forms.filter((_, i) => i !== formIndex);\n      setFolders(updatedFolders);\n    } else {\n      // Delete global form\n      const updatedForms = forms.filter((_, i) => i !== formIndex);\n      setForms(updatedForms);\n    }\n  };\n  const openDeleteFolderModal = index => {\n    setDeleteFolderIndex(index);\n    setIsDeleteModalOpen(true);\n  };\n  const openDeleteFormModal = (folderIndex, formIndex) => {\n    setDeleteFormIndices({\n      folderIndex,\n      formIndex\n    });\n    setIsDeleteFormModalOpen(true);\n  };\n  const closeDeleteFolderModal = () => {\n    setDeleteFolderIndex(null);\n    setIsDeleteModalOpen(false);\n  };\n  const closeDeleteFormModal = () => {\n    setDeleteFormIndices({\n      folderIndex: null,\n      formIndex: null\n    });\n    setIsDeleteFormModalOpen(false);\n  };\n  const confirmDeleteFolder = () => {\n    if (deleteFolderIndex !== null) {\n      handleDeleteFolder(deleteFolderIndex);\n    }\n    closeDeleteFolderModal();\n  };\n  const confirmDeleteForm = () => {\n    const {\n      folderIndex,\n      formIndex\n    } = deleteFormIndices;\n    if (formIndex !== null) {\n      handleDeleteForm(folderIndex, formIndex);\n    }\n    closeDeleteFormModal();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `dashboard-container ${isLightTheme ? \"light\" : \"dark\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"workspace-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"workspace-button\",\n          onClick: () => setIsDropdownOpen(!isDropdownOpen),\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Dewank Rastogi's workspace\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), isDropdownOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-menu\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsSettingsOpen(true),\n            children: \"Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"logout\",\n            children: \"Log Out\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsShareModalOpen(true),\n        children: \"Share\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => openModal(\"folder\"),\n        children: \"+ Create Folder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), folders.map((folder, folderIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: folder.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => openDeleteFolderModal(folderIndex),\n          children: \"Delete Folder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => openModal(\"form\", folderIndex),\n          children: \"+ Add Form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: folder.forms.map((form, formIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [form, /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => openDeleteFormModal(folderIndex, formIndex),\n              children: \"Delete Form\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 19\n            }, this)]\n          }, formIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this)]\n      }, folderIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Global Forms\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => openModal(\"form\", null),\n        children: \"+ Add Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: forms.map((form, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [form, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => openDeleteFormModal(null, index),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), isModalOpen && modalType === \"folder\" && /*#__PURE__*/_jsxDEV(CreateFolderModal, {\n      onCreateFolder: handleCreateFolder,\n      closeModal: closeModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }, this), isModalOpen && modalType === \"form\" && /*#__PURE__*/_jsxDEV(CreateFormModal, {\n      onCreateForm: handleCreateForm,\n      closeModal: closeModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }, this), isDeleteModalOpen && /*#__PURE__*/_jsxDEV(DeleteFolder, {\n      onConfirm: confirmDeleteFolder,\n      closeModal: closeDeleteFolderModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }, this), isDeleteFormModalOpen && /*#__PURE__*/_jsxDEV(DeleteForm, {\n      onConfirm: confirmDeleteForm,\n      closeModal: closeDeleteFormModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"IqCPvllP8D1qKTele/1+en7fxRQ=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","CreateFolderModal","CreateFormModal","DeleteFolder","DeleteForm","Settings","ShareModal","jsxDEV","_jsxDEV","Dashboard","_s","isModalOpen","setIsModalOpen","modalType","setModalType","isLightTheme","setIsLightTheme","isDropdownOpen","setIsDropdownOpen","folders","setFolders","forms","setForms","deleteFolderIndex","setDeleteFolderIndex","deleteFormIndices","setDeleteFormIndices","folderIndex","formIndex","isDeleteModalOpen","setIsDeleteModalOpen","isDeleteFormModalOpen","setIsDeleteFormModalOpen","isSettingsOpen","setIsSettingsOpen","isShareModalOpen","setIsShareModalOpen","openModal","type","closeModal","handleCreateFolder","folderName","trim","name","handleCreateForm","formName","updatedFolders","push","handleDeleteFolder","index","filter","_","i","handleDeleteForm","updatedForms","openDeleteFolderModal","openDeleteFormModal","closeDeleteFolderModal","closeDeleteFormModal","confirmDeleteFolder","confirmDeleteForm","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","folder","form","onCreateFolder","onCreateForm","onConfirm","_c","$RefreshReg$"],"sources":["D:/Cuvette/Final evaluation/form-builder/src/Components/Dashboard/Dashboard.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Dashboard.css\";\r\nimport CreateFolderModal from \"./CreateFolderModal\";\r\nimport CreateFormModal from \"./CreateFormModal\";\r\nimport DeleteFolder from \"./DeleteFolder\";\r\nimport DeleteForm from \"./DeleteForm\";\r\nimport Settings from \"./Settings\";\r\nimport ShareModal from \"./ShareModal\";\r\n\r\nconst Dashboard = () => {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [modalType, setModalType] = useState(null);\r\n  const [isLightTheme, setIsLightTheme] = useState(false);\r\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\r\n  const [folders, setFolders] = useState([]); // Grouped folders\r\n  const [forms, setForms] = useState([]); // Global forms\r\n  const [deleteFolderIndex, setDeleteFolderIndex] = useState(null);\r\n  const [deleteFormIndices, setDeleteFormIndices] = useState({ folderIndex: null, formIndex: null });\r\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\r\n  const [isDeleteFormModalOpen, setIsDeleteFormModalOpen] = useState(false);\r\n  const [isSettingsOpen, setIsSettingsOpen] = useState(false);\r\n  const [isShareModalOpen, setIsShareModalOpen] = useState(false);\r\n\r\n  const openModal = (type) => {\r\n    setModalType(type);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n    setModalType(null);\r\n  };\r\n\r\n  const handleCreateFolder = (folderName) => {\r\n    if (folderName.trim()) {\r\n      setFolders([...folders, { name: folderName.trim(), forms: [] }]);\r\n    }\r\n    closeModal();\r\n  };\r\n\r\n  const handleCreateForm = (formName, folderIndex = null) => {\r\n    if (formName.trim()) {\r\n      if (folderIndex !== null) {\r\n        // Add form to the specific folder\r\n        const updatedFolders = [...folders];\r\n        updatedFolders[folderIndex].forms.push(formName.trim());\r\n        setFolders(updatedFolders);\r\n      } else {\r\n        // Global form\r\n        setForms([...forms, formName.trim()]);\r\n      }\r\n    }\r\n    closeModal();\r\n  };\r\n\r\n  const handleDeleteFolder = (index) => {\r\n    const updatedFolders = folders.filter((_, i) => i !== index);\r\n    setFolders(updatedFolders);\r\n  };\r\n\r\n  const handleDeleteForm = (folderIndex, formIndex) => {\r\n    if (folderIndex !== null) {\r\n      // Delete form from specific folder\r\n      const updatedFolders = [...folders];\r\n      updatedFolders[folderIndex].forms = updatedFolders[folderIndex].forms.filter((_, i) => i !== formIndex);\r\n      setFolders(updatedFolders);\r\n    } else {\r\n      // Delete global form\r\n      const updatedForms = forms.filter((_, i) => i !== formIndex);\r\n      setForms(updatedForms);\r\n    }\r\n  };\r\n\r\n  const openDeleteFolderModal = (index) => {\r\n    setDeleteFolderIndex(index);\r\n    setIsDeleteModalOpen(true);\r\n  };\r\n\r\n  const openDeleteFormModal = (folderIndex, formIndex) => {\r\n    setDeleteFormIndices({ folderIndex, formIndex });\r\n    setIsDeleteFormModalOpen(true);\r\n  };\r\n\r\n  const closeDeleteFolderModal = () => {\r\n    setDeleteFolderIndex(null);\r\n    setIsDeleteModalOpen(false);\r\n  };\r\n\r\n  const closeDeleteFormModal = () => {\r\n    setDeleteFormIndices({ folderIndex: null, formIndex: null });\r\n    setIsDeleteFormModalOpen(false);\r\n  };\r\n\r\n  const confirmDeleteFolder = () => {\r\n    if (deleteFolderIndex !== null) {\r\n      handleDeleteFolder(deleteFolderIndex);\r\n    }\r\n    closeDeleteFolderModal();\r\n  };\r\n\r\n  const confirmDeleteForm = () => {\r\n    const { folderIndex, formIndex } = deleteFormIndices;\r\n    if (formIndex !== null) {\r\n      handleDeleteForm(folderIndex, formIndex);\r\n    }\r\n    closeDeleteFormModal();\r\n  };\r\n\r\n  return (\r\n    <div className={`dashboard-container ${isLightTheme ? \"light\" : \"dark\"}`}>\r\n      {/* Navbar */}\r\n      <nav className=\"navbar\">\r\n        <div className=\"logo\"></div>\r\n        <div className=\"workspace-container\">\r\n          <button className=\"workspace-button\" onClick={() => setIsDropdownOpen(!isDropdownOpen)}>\r\n            <span>Dewank Rastogi's workspace</span>\r\n          </button>\r\n          {isDropdownOpen && (\r\n            <div className=\"dropdown-menu\">\r\n              <button onClick={() => setIsSettingsOpen(true)}>Settings</button>\r\n              <button className=\"logout\">Log Out</button>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <button onClick={() => setIsShareModalOpen(true)}>Share</button>\r\n      </nav>\r\n\r\n      {/* Dashboard Content */}\r\n      <div className=\"dashboard-content\">\r\n        {/* Folders */}\r\n        <button onClick={() => openModal(\"folder\")}>+ Create Folder</button>\r\n        {folders.map((folder, folderIndex) => (\r\n          <div key={folderIndex}>\r\n            <h3>{folder.name}</h3>\r\n            <button onClick={() => openDeleteFolderModal(folderIndex)}>Delete Folder</button>\r\n            <button onClick={() => openModal(\"form\", folderIndex)}>+ Add Form</button>\r\n            <ul>\r\n              {folder.forms.map((form, formIndex) => (\r\n                <li key={formIndex}>\r\n                  {form}\r\n                  <button onClick={() => openDeleteFormModal(folderIndex, formIndex)}>Delete Form</button>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        ))}\r\n\r\n        {/* Global Forms */}\r\n        <h3>Global Forms</h3>\r\n        <button onClick={() => openModal(\"form\", null)}>+ Add Form</button>\r\n        <ul>\r\n          {forms.map((form, index) => (\r\n            <li key={index}>\r\n              {form}\r\n              <button onClick={() => openDeleteFormModal(null, index)}>Delete</button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n\r\n      {/* Modals */}\r\n      {isModalOpen && modalType === \"folder\" && (\r\n        <CreateFolderModal onCreateFolder={handleCreateFolder} closeModal={closeModal} />\r\n      )}\r\n      {isModalOpen && modalType === \"form\" && (\r\n        <CreateFormModal onCreateForm={handleCreateForm} closeModal={closeModal} />\r\n      )}\r\n      {isDeleteModalOpen && (\r\n        <DeleteFolder onConfirm={confirmDeleteFolder} closeModal={closeDeleteFolderModal} />\r\n      )}\r\n      {isDeleteFormModalOpen && (\r\n        <DeleteForm onConfirm={confirmDeleteForm} closeModal={closeDeleteFormModal} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}