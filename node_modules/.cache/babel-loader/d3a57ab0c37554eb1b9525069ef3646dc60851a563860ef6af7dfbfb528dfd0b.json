{"ast":null,"code":"var _jsxFileName = \"D:\\\\Cuvette\\\\Final evaluation\\\\form-builder\\\\src\\\\Components\\\\Workspace\\\\ResponseNavbar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Workspace from \"./Workspace\"; // Import Workspace component\nimport Response from \"./Response\"; // Import Response component\nimport \"./Workspacenavbar.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResponseNavbar = () => {\n  _s();\n  const [isLightTheme, setIsLightTheme] = useState(false); // State for theme toggle\n  const [activeComponent, setActiveComponent] = useState(\"workspace\"); // State for current component\n\n  const toggleTheme = () => {\n    setIsLightTheme(prevState => !prevState);\n  };\n\n  // Handlers to set active component\n  const showWorkspace = () => {\n    setActiveComponent(\"workspace\");\n  };\n  const showResponse = () => {\n    setActiveComponent(\"response\");\n  };\n\n  // Conditional rendering of components\n  let ComponentToRender;\n  if (activeComponent === \"workspace\") {\n    ComponentToRender = /*#__PURE__*/_jsxDEV(Workspace, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 25\n    }, this);\n  } else if (activeComponent === \"response\") {\n    ComponentToRender = /*#__PURE__*/_jsxDEV(Response, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 25\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"workspace-nav\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mid-button\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"flow-button active\",\n          onClick: showWorkspace,\n          children: \"Flow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"response-button\",\n          onClick: showResponse,\n          children: \"Response\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rest-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"theme-toggle\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Light\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"switch\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: isLightTheme,\n              onChange: toggleTheme\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"slider\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Dark\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"share-from-button\",\n          children: \"Share\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"save-button\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"close.png\",\n            alt: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), ComponentToRender]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(ResponseNavbar, \"sR9XSW9SlqxJ2hWggh5fwv8MYXM=\");\n_c = ResponseNavbar;\nexport default ResponseNavbar;\nvar _c;\n$RefreshReg$(_c, \"ResponseNavbar\");","map":{"version":3,"names":["React","useState","Workspace","Response","jsxDEV","_jsxDEV","ResponseNavbar","_s","isLightTheme","setIsLightTheme","activeComponent","setActiveComponent","toggleTheme","prevState","showWorkspace","showResponse","ComponentToRender","fileName","_jsxFileName","lineNumber","columnNumber","children","className","onClick","type","checked","onChange","src","alt","_c","$RefreshReg$"],"sources":["D:/Cuvette/Final evaluation/form-builder/src/Components/Workspace/ResponseNavbar.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Workspace from \"./Workspace\"; // Import Workspace component\r\nimport Response from \"./Response\"; // Import Response component\r\nimport \"./Workspacenavbar.css\";\r\n\r\nconst ResponseNavbar = () => {\r\n  const [isLightTheme, setIsLightTheme] = useState(false); // State for theme toggle\r\n  const [activeComponent, setActiveComponent] = useState(\"workspace\"); // State for current component\r\n\r\n  const toggleTheme = () => {\r\n    setIsLightTheme((prevState) => !prevState);\r\n  };\r\n\r\n  // Handlers to set active component\r\n  const showWorkspace = () => {\r\n    setActiveComponent(\"workspace\");\r\n  };\r\n\r\n  const showResponse = () => {\r\n    setActiveComponent(\"response\");\r\n  };\r\n\r\n  // Conditional rendering of components\r\n  let ComponentToRender;\r\n  if (activeComponent === \"workspace\") {\r\n    ComponentToRender = <Workspace />;\r\n  } else if (activeComponent === \"response\") {\r\n    ComponentToRender = <Response />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <nav className=\"workspace-nav\">\r\n        {/* Mid Section Buttons */}\r\n        <div className=\"mid-button\">\r\n          <button className=\"flow-button active\" onClick={showWorkspace}>\r\n            Flow\r\n          </button>\r\n          <button className=\"response-button\" onClick={showResponse}>\r\n            Response\r\n          </button>\r\n        </div>\r\n\r\n        {/* Right Side Buttons */}\r\n        <div className=\"rest-buttons\">\r\n          <div className=\"theme-toggle\">\r\n            <span>Light</span>\r\n            <label className=\"switch\">\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={isLightTheme}\r\n                onChange={toggleTheme}\r\n              />\r\n              <span className=\"slider\"></span>\r\n            </label>\r\n            <span>Dark</span>\r\n          </div>\r\n          <button className=\"share-from-button\">Share</button>\r\n          <button className=\"save-button\">Save</button>\r\n          <button className=\"close-button\">\r\n            <img src=\"close.png\" alt=\"Close\" />\r\n          </button>\r\n        </div>\r\n      </nav>\r\n      {/* Render the active component */}\r\n      {ComponentToRender}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResponseNavbar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}