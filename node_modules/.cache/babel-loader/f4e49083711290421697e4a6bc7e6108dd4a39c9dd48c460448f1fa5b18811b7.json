{"ast":null,"code":"var _jsxFileName = \"D:\\\\Cuvette\\\\MERN\\\\Client\\\\form-builder\\\\src\\\\Components\\\\Dashboard\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./Dashboard.css\";\nimport CreateFolderModal from \"./CreateFolderModal\";\nimport CreateFormModal from \"./CreateFormModal\";\nimport DeleteFolder from \"./DeleteFolder\";\nimport DeleteForm from \"./DeleteForm\";\nimport Settings from \"./Settings\";\nimport ShareModal from \"./ShareModal\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [modalType, setModalType] = useState(null);\n  const [isLightTheme, setIsLightTheme] = useState(false);\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [folders, setFolders] = useState([]);\n  const [forms, setForms] = useState([]); // Global forms\n  const [deleteFolderIndex, setDeleteFolderIndex] = useState(null);\n  const [deleteFormIndex, setDeleteFormIndex] = useState(null);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [isDeleteFormModalOpen, setIsDeleteFormModal] = useState(false);\n  const [isSettingsOpen, setIsSettingsOpen] = useState(false);\n  const [isShareModalOpen, setIsShareModalOpen] = useState(false);\n  const [activeFolderIndex, setActiveFolderIndex] = useState(null); // State for active folder\n  const [username, setUsername] = useState(\"\"); // State for storing username\n  const [authToken, setAuthToken] = useState(localStorage.getItem(\"authToken\") || \"\"); // JWT Token\n\n  // Fetch username from the backend\n  useEffect(() => {\n    const fetchUsername = async () => {\n      try {\n        const response = await fetch(\"/api/user\", {\n          headers: {\n            Authorization: `Bearer ${authToken}`\n          }\n        });\n        const data = await response.json();\n        if (data.username) {\n          setUsername(data.username); // Assuming the backend response is { username: \"User's name\" }\n        } else {\n          // If username is not found, you can handle error or redirect\n          console.error(\"User not authenticated\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching username:\", error);\n      }\n    };\n    if (authToken) {\n      fetchUsername();\n    }\n  }, [authToken]);\n  const openModal = type => {\n    setModalType(type);\n    setIsModalOpen(true);\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setModalType(null);\n  };\n  const handleCreateFolder = folderName => {\n    if (folderName.trim()) {\n      const isDuplicate = folders.some(folder => folder.name === folderName.trim());\n      if (isDuplicate) {\n        alert(\"Folder name must be unique.\");\n        return;\n      }\n      setFolders([...folders, {\n        name: folderName.trim(),\n        forms: []\n      }]);\n    }\n    closeModal();\n  };\n  const handleCreateForm = (formName, folderIndex = null) => {\n    if (formName.trim()) {\n      if (folderIndex !== null) {\n        const updatedFolders = [...folders];\n        updatedFolders[folderIndex].forms.push(formName.trim());\n        setFolders(updatedFolders);\n      } else {\n        setForms([...forms, formName.trim()]);\n      }\n    }\n    closeModal();\n  };\n  const toggleTheme = () => {\n    setIsLightTheme(prevState => !prevState);\n  };\n  const toggleDropdown = () => {\n    setIsDropdownOpen(prevState => !prevState);\n  };\n  const handleDeleteFolder = index => {\n    const updatedFolders = folders.filter((_, i) => i !== index);\n    setFolders(updatedFolders);\n  };\n  const handleDeleteForm = index => {\n    const updatedForms = forms.filter((_, i) => i !== index);\n    setForms(updatedForms);\n  };\n  const openDeleteFolderModal = index => {\n    setDeleteFolderIndex(index);\n    setIsDeleteModalOpen(true);\n  };\n  const openDeleteFormModal = index => {\n    setDeleteFormIndex(index);\n    setIsDeleteFormModal(true);\n  };\n  const closeDeleteFolderModal = () => {\n    setDeleteFolderIndex(null);\n    setIsDeleteModalOpen(false);\n  };\n  const closeDeleteFormModal = () => {\n    setDeleteFormIndex(null);\n    setIsDeleteFormModal(false);\n  };\n  const confirmDeleteFolder = () => {\n    if (deleteFolderIndex !== null) {\n      handleDeleteFolder(deleteFolderIndex);\n    }\n    closeDeleteFolderModal();\n  };\n  const confirmDeleteForm = () => {\n    if (deleteFormIndex !== null) {\n      handleDeleteForm(deleteFormIndex);\n    }\n    closeDeleteFormModal();\n  };\n  const openSettings = () => {\n    setIsSettingsOpen(true);\n  };\n  const closeSettings = () => {\n    setIsSettingsOpen(false);\n  };\n  const openShareModal = () => {\n    setIsShareModalOpen(true);\n  };\n  const closeShareModal = () => {\n    setIsShareModalOpen(false);\n  };\n\n  // Toggle the active folder index\n  const toggleFolderVisibility = index => {\n    setActiveFolderIndex(activeFolderIndex === index ? null : index);\n  };\n  const logout = () => {\n    localStorage.removeItem(\"authToken\");\n    setAuthToken(\"\");\n    setUsername(\"\");\n    // Redirect to login page if necessary\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `dashboard-container ${isLightTheme ? \"light\" : \"dark\"}`,\n    children: isSettingsOpen ? /*#__PURE__*/_jsxDEV(Settings, {\n      closeSettings: closeSettings\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"navbar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"workspace-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"workspace-button\",\n            onClick: toggleDropdown,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: username ? `${username}'s workspace` : \"Loading...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"dropdown-icon\",\n              src: \"drop.png\",\n              alt: \"Dropdown Icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this), isDropdownOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dropdown-menu\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"dropdown-item\",\n              onClick: openSettings,\n              children: \"Settings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"dropdown-item logout\",\n              onClick: logout,\n              children: \"Log Out\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"theme-toggle\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Light\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"switch\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: !isLightTheme,\n              onChange: toggleTheme\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"slider\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Dark\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"share-button\",\n          onClick: openShareModal,\n          children: \"Share\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Dashboard-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Create-folder-section\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"Create-folder-list\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"create-folder\",\n                onClick: () => openModal(\"folder\"),\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: \"folder.png\",\n                  className: \"folder\",\n                  alt: \"Folder\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 21\n                }, this), \"Create a folder\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"folder-list\",\n                children: folders.map((folder, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"folder-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    onClick: () => toggleFolderVisibility(index),\n                    children: folder.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 219,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"delete-button\",\n                    onClick: () => openDeleteFolderModal(index),\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: \"del.png\",\n                      alt: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 224,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 220,\n                    columnNumber: 25\n                  }, this), activeFolderIndex === index && /*#__PURE__*/_jsxDEV(\"ul\", {\n                    className: \"form-list\",\n                    children: folder.forms.map((form, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"form-item\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        children: form\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 230,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"delete-button-form\",\n                        onClick: () => openDeleteFormModal(idx),\n                        children: /*#__PURE__*/_jsxDEV(\"img\", {\n                          src: \"del.png\",\n                          className: \"del-form\",\n                          alt: \"Delete\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 235,\n                          columnNumber: 35\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 231,\n                        columnNumber: 33\n                      }, this)]\n                    }, idx, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 229,\n                      columnNumber: 31\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 227,\n                    columnNumber: 27\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Create-form-section\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"Create-form-list\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"create-typebot\",\n                onClick: () => openModal(\"form\"),\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"plus\",\n                    children: \"+\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 253,\n                    columnNumber: 23\n                  }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 253,\n                    columnNumber: 55\n                  }, this), \"Create a typebot\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"form-li\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-list\",\n                children: forms.map((form, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: form\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 262,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"delete-button-form\",\n                    onClick: () => openDeleteFormModal(index),\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: \"del.png\",\n                      className: \"del-form\",\n                      alt: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 267,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 263,\n                    columnNumber: 25\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }, this), isModalOpen && modalType === \"folder\" && /*#__PURE__*/_jsxDEV(CreateFolderModal, {\n        closeModal: closeModal,\n        isLightTheme: isLightTheme,\n        onCreateFolder: handleCreateFolder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 13\n      }, this), isModalOpen && modalType === \"form\" && /*#__PURE__*/_jsxDEV(CreateFormModal, {\n        closeModal: closeModal,\n        isLightTheme: isLightTheme,\n        onCreateForm: handleCreateForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 13\n      }, this), isDeleteModalOpen && /*#__PURE__*/_jsxDEV(DeleteFolder, {\n        closeModal: closeDeleteFolderModal,\n        isLightTheme: isLightTheme,\n        onConfirm: confirmDeleteFolder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 13\n      }, this), isDeleteFormModalOpen && /*#__PURE__*/_jsxDEV(DeleteForm, {\n        closeModal: closeDeleteFormModal,\n        isLightTheme: isLightTheme,\n        onConfirm: confirmDeleteForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 13\n      }, this), isShareModalOpen && /*#__PURE__*/_jsxDEV(ShareModal, {\n        isOpen: isShareModalOpen,\n        onClose: closeShareModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"v0Sm54OoBPfkECvzWcISTPZuDdE=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","CreateFolderModal","CreateFormModal","DeleteFolder","DeleteForm","Settings","ShareModal","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","isModalOpen","setIsModalOpen","modalType","setModalType","isLightTheme","setIsLightTheme","isDropdownOpen","setIsDropdownOpen","folders","setFolders","forms","setForms","deleteFolderIndex","setDeleteFolderIndex","deleteFormIndex","setDeleteFormIndex","isDeleteModalOpen","setIsDeleteModalOpen","isDeleteFormModalOpen","setIsDeleteFormModal","isSettingsOpen","setIsSettingsOpen","isShareModalOpen","setIsShareModalOpen","activeFolderIndex","setActiveFolderIndex","username","setUsername","authToken","setAuthToken","localStorage","getItem","fetchUsername","response","fetch","headers","Authorization","data","json","console","error","openModal","type","closeModal","handleCreateFolder","folderName","trim","isDuplicate","some","folder","name","alert","handleCreateForm","formName","folderIndex","updatedFolders","push","toggleTheme","prevState","toggleDropdown","handleDeleteFolder","index","filter","_","i","handleDeleteForm","updatedForms","openDeleteFolderModal","openDeleteFormModal","closeDeleteFolderModal","closeDeleteFormModal","confirmDeleteFolder","confirmDeleteForm","openSettings","closeSettings","openShareModal","closeShareModal","toggleFolderVisibility","logout","removeItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","checked","onChange","map","form","idx","onCreateFolder","onCreateForm","onConfirm","isOpen","onClose","_c","$RefreshReg$"],"sources":["D:/Cuvette/MERN/Client/form-builder/src/Components/Dashboard/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./Dashboard.css\";\r\nimport CreateFolderModal from \"./CreateFolderModal\";\r\nimport CreateFormModal from \"./CreateFormModal\";\r\nimport DeleteFolder from \"./DeleteFolder\";\r\nimport DeleteForm from \"./DeleteForm\";\r\nimport Settings from \"./Settings\";\r\nimport ShareModal from \"./ShareModal\";\r\n\r\nconst Dashboard = () => {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [modalType, setModalType] = useState(null);\r\n  const [isLightTheme, setIsLightTheme] = useState(false);\r\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\r\n  const [folders, setFolders] = useState([]);\r\n  const [forms, setForms] = useState([]); // Global forms\r\n  const [deleteFolderIndex, setDeleteFolderIndex] = useState(null);\r\n  const [deleteFormIndex, setDeleteFormIndex] = useState(null);\r\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\r\n  const [isDeleteFormModalOpen, setIsDeleteFormModal] = useState(false);\r\n  const [isSettingsOpen, setIsSettingsOpen] = useState(false);\r\n  const [isShareModalOpen, setIsShareModalOpen] = useState(false);\r\n  const [activeFolderIndex, setActiveFolderIndex] = useState(null); // State for active folder\r\n  const [username, setUsername] = useState(\"\"); // State for storing username\r\n  const [authToken, setAuthToken] = useState(localStorage.getItem(\"authToken\") || \"\"); // JWT Token\r\n\r\n  // Fetch username from the backend\r\n  useEffect(() => {\r\n    const fetchUsername = async () => {\r\n      try {\r\n        const response = await fetch(\"/api/user\", {\r\n          headers: {\r\n            Authorization: `Bearer ${authToken}`,\r\n          },\r\n        });\r\n        const data = await response.json();\r\n        if (data.username) {\r\n          setUsername(data.username); // Assuming the backend response is { username: \"User's name\" }\r\n        } else {\r\n          // If username is not found, you can handle error or redirect\r\n          console.error(\"User not authenticated\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching username:\", error);\r\n      }\r\n    };\r\n\r\n    if (authToken) {\r\n      fetchUsername();\r\n    }\r\n  }, [authToken]);\r\n\r\n  const openModal = (type) => {\r\n    setModalType(type);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n    setModalType(null);\r\n  };\r\n\r\n  const handleCreateFolder = (folderName) => {\r\n    if (folderName.trim()) {\r\n      const isDuplicate = folders.some(folder => folder.name === folderName.trim());\r\n      if (isDuplicate) {\r\n        alert(\"Folder name must be unique.\");\r\n        return;\r\n      }\r\n      setFolders([...folders, { name: folderName.trim(), forms: [] }]);\r\n    }\r\n    closeModal();\r\n  };\r\n\r\n  const handleCreateForm = (formName, folderIndex = null) => {\r\n    if (formName.trim()) {\r\n      if (folderIndex !== null) {\r\n        const updatedFolders = [...folders];\r\n        updatedFolders[folderIndex].forms.push(formName.trim());\r\n        setFolders(updatedFolders);\r\n      } else {\r\n        setForms([...forms, formName.trim()]);\r\n      }\r\n    }\r\n    closeModal();\r\n  };\r\n\r\n  const toggleTheme = () => {\r\n    setIsLightTheme((prevState) => !prevState);\r\n  };\r\n\r\n  const toggleDropdown = () => {\r\n    setIsDropdownOpen((prevState) => !prevState);\r\n  };\r\n\r\n  const handleDeleteFolder = (index) => {\r\n    const updatedFolders = folders.filter((_, i) => i !== index);\r\n    setFolders(updatedFolders);\r\n  };\r\n\r\n  const handleDeleteForm = (index) => {\r\n    const updatedForms = forms.filter((_, i) => i !== index);\r\n    setForms(updatedForms);\r\n  };\r\n\r\n  const openDeleteFolderModal = (index) => {\r\n    setDeleteFolderIndex(index);\r\n    setIsDeleteModalOpen(true);\r\n  };\r\n\r\n  const openDeleteFormModal = (index) => {\r\n    setDeleteFormIndex(index);\r\n    setIsDeleteFormModal(true);\r\n  };\r\n\r\n  const closeDeleteFolderModal = () => {\r\n    setDeleteFolderIndex(null);\r\n    setIsDeleteModalOpen(false);\r\n  };\r\n\r\n  const closeDeleteFormModal = () => {\r\n    setDeleteFormIndex(null);\r\n    setIsDeleteFormModal(false);\r\n  };\r\n\r\n  const confirmDeleteFolder = () => {\r\n    if (deleteFolderIndex !== null) {\r\n      handleDeleteFolder(deleteFolderIndex);\r\n    }\r\n    closeDeleteFolderModal();\r\n  };\r\n\r\n  const confirmDeleteForm = () => {\r\n    if (deleteFormIndex !== null) {\r\n      handleDeleteForm(deleteFormIndex);\r\n    }\r\n    closeDeleteFormModal();\r\n  };\r\n\r\n  const openSettings = () => {\r\n    setIsSettingsOpen(true);\r\n  };\r\n\r\n  const closeSettings = () => {\r\n    setIsSettingsOpen(false);\r\n  };\r\n\r\n  const openShareModal = () => {\r\n    setIsShareModalOpen(true);\r\n  };\r\n\r\n  const closeShareModal = () => {\r\n    setIsShareModalOpen(false);\r\n  };\r\n\r\n  // Toggle the active folder index\r\n  const toggleFolderVisibility = (index) => {\r\n    setActiveFolderIndex(activeFolderIndex === index ? null : index);\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem(\"authToken\");\r\n    setAuthToken(\"\");\r\n    setUsername(\"\");\r\n    // Redirect to login page if necessary\r\n  };\r\n\r\n  return (\r\n    <div className={`dashboard-container ${isLightTheme ? \"light\" : \"dark\"}`}>\r\n      {isSettingsOpen ? (\r\n        <Settings closeSettings={closeSettings} />\r\n      ) : (\r\n        <>\r\n          <nav className=\"navbar\">\r\n            <div className=\"logo\"></div>\r\n            <div className=\"workspace-container\">\r\n              <button className=\"workspace-button\" onClick={toggleDropdown}>\r\n                <span>{username ? `${username}'s workspace` : \"Loading...\"}</span>\r\n                <img className=\"dropdown-icon\" src=\"drop.png\" alt=\"Dropdown Icon\" />\r\n              </button>\r\n              {isDropdownOpen && (\r\n                <div className=\"dropdown-menu\">\r\n                  <button className=\"dropdown-item\" onClick={openSettings}>Settings</button>\r\n                  <button className=\"dropdown-item logout\" onClick={logout}>Log Out</button>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"theme-toggle\">\r\n              <span>Light</span>\r\n              <label className=\"switch\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={!isLightTheme}\r\n                  onChange={toggleTheme}\r\n                />\r\n                <span className=\"slider\"></span>\r\n              </label>\r\n              <span>Dark</span>\r\n            </div>\r\n            <button className=\"share-button\" onClick={openShareModal}>\r\n              Share\r\n            </button>\r\n          </nav>\r\n\r\n          <div className=\"Dashboard-content\">\r\n            <div className=\"Create-folder-section\">\r\n              <ul className=\"Create-folder-list\">\r\n                <li>\r\n                  <button className=\"create-folder\" onClick={() => openModal(\"folder\")}>\r\n                    <img src=\"folder.png\" className=\"folder\" alt=\"Folder\" />\r\n                    Create a folder\r\n                  </button>\r\n                </li>\r\n                <li>\r\n                  <div className=\"folder-list\">\r\n                    {folders.map((folder, index) => (\r\n                      <div key={index} className=\"folder-item\">\r\n                        <span onClick={() => toggleFolderVisibility(index)}>{folder.name}</span>\r\n                        <button\r\n                          className=\"delete-button\"\r\n                          onClick={() => openDeleteFolderModal(index)}\r\n                        >\r\n                          <img src=\"del.png\" alt=\"Delete\" />\r\n                        </button>\r\n                        {activeFolderIndex === index && (\r\n                          <ul className=\"form-list\">\r\n                            {folder.forms.map((form, idx) => (\r\n                              <div key={idx} className=\"form-item\">\r\n                                <span>{form}</span>\r\n                                <button\r\n                                  className=\"delete-button-form\"\r\n                                  onClick={() => openDeleteFormModal(idx)}\r\n                                >\r\n                                  <img src=\"del.png\" className=\"del-form\" alt=\"Delete\" />\r\n                                </button>\r\n                              </div>\r\n                            ))}\r\n                          </ul>\r\n                        )}\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n\r\n            <div className=\"Create-form-section\">\r\n              <ul className=\"Create-form-list\">\r\n                <li>\r\n                  <button className=\"create-typebot\" onClick={() => openModal(\"form\")}>\r\n                    <p>\r\n                      <span className=\"plus\">+</span> <br />\r\n                      Create a typebot\r\n                    </p>\r\n                  </button>\r\n                </li>\r\n                <li className=\"form-li\">\r\n                  <div className=\"form-list\">\r\n                    {forms.map((form, index) => (\r\n                      <div key={index} className=\"form-item\">\r\n                        <span>{form}</span>\r\n                        <button\r\n                          className=\"delete-button-form\"\r\n                          onClick={() => openDeleteFormModal(index)}\r\n                        >\r\n                          <img src=\"del.png\" className=\"del-form\" alt=\"Delete\" />\r\n                        </button>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n\r\n          {isModalOpen && modalType === \"folder\" && (\r\n            <CreateFolderModal\r\n              closeModal={closeModal}\r\n              isLightTheme={isLightTheme}\r\n              onCreateFolder={handleCreateFolder}\r\n            />\r\n          )}\r\n          {isModalOpen && modalType === \"form\" && (\r\n            <CreateFormModal\r\n              closeModal={closeModal}\r\n              isLightTheme={isLightTheme}\r\n              onCreateForm={handleCreateForm}\r\n            />\r\n          )}\r\n          {isDeleteModalOpen && (\r\n            <DeleteFolder\r\n              closeModal={closeDeleteFolderModal}\r\n              isLightTheme={isLightTheme}\r\n              onConfirm={confirmDeleteFolder}\r\n            />\r\n          )}\r\n          {isDeleteFormModalOpen && (\r\n            <DeleteForm\r\n              closeModal={closeDeleteFormModal}\r\n              isLightTheme={isLightTheme}\r\n              onConfirm={confirmDeleteForm}\r\n            />\r\n          )}\r\n          {isShareModalOpen && (\r\n            <ShareModal isOpen={isShareModalOpen} onClose={closeShareModal} />\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}