{"ast":null,"code":"var _jsxFileName = \"D:\\\\Cuvette\\\\MERN\\\\Client\\\\form-builder\\\\src\\\\Components\\\\Dashboard\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n\n// Folder Component\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FolderComponent = () => {\n  _s();\n  const [folders, setFolders] = useState([{\n    name: \"Folder 1\",\n    forms: []\n  }, {\n    name: \"Folder 2\",\n    forms: []\n  }]);\n  const [forms, setForms] = useState([]);\n  const [activeFolderIndex, setActiveFolderIndex] = useState(null);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [formName, setFormName] = useState('');\n  const toggleFolderVisibility = index => {\n    if (activeFolderIndex === index) {\n      setActiveFolderIndex(null);\n    } else {\n      setActiveFolderIndex(index);\n    }\n  };\n  const openModal = type => {\n    setModalOpen(true);\n  };\n  const closeModal = () => {\n    setModalOpen(false);\n    setFormName('');\n  };\n  const handleCreateForm = (formName, folderIndex = null) => {\n    if (formName.trim()) {\n      if (folderIndex !== null) {\n        const updatedFolders = [...folders];\n        updatedFolders[folderIndex].forms.push(formName.trim());\n        setFolders(updatedFolders);\n      } else {\n        setForms([...forms, formName.trim()]);\n      }\n    }\n    closeModal();\n  };\n  const openDeleteFolderModal = index => {\n    // Delete folder logic\n    const updatedFolders = folders.filter((_, i) => i !== index);\n    setFolders(updatedFolders);\n    if (activeFolderIndex === index) setActiveFolderIndex(null);\n  };\n  const openDeleteFormModal = (index, folderIndex = null) => {\n    // Delete form logic\n    if (folderIndex !== null) {\n      const updatedFolders = [...folders];\n      updatedFolders[folderIndex].forms.splice(index, 1);\n      setFolders(updatedFolders);\n    } else {\n      const updatedForms = [...forms];\n      updatedForms.splice(index, 1);\n      setForms(updatedForms);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"Create-form-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"folder-list-li\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"folder-list\",\n          children: folders.map((folder, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"folder-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: () => toggleFolderVisibility(index),\n              children: folder.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"delete-button\",\n              onClick: () => openDeleteFolderModal(index),\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"del.png\",\n                alt: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this), activeFolderIndex === index && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"form-list\",\n                children: folder.forms.map((form, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: form\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 85,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"delete-button-form\",\n                    onClick: () => openDeleteFormModal(idx, index),\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: \"del.png\",\n                      className: \"del-form\",\n                      alt: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 90,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 27\n                  }, this)]\n                }, idx, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"create-typebot\",\n                onClick: () => openModal(\"form\"),\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"plus\",\n                    children: \"+\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 101,\n                    columnNumber: 25\n                  }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 101,\n                    columnNumber: 57\n                  }, this), \"Create a typebot\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), activeFolderIndex === null && /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"form-li\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-list\",\n          children: forms.map((form, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: form\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"delete-button-form\",\n              onClick: () => openDeleteFormModal(index),\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"del.png\",\n                className: \"del-form\",\n                alt: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), modalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: formName,\n        onChange: e => setFormName(e.target.value),\n        placeholder: \"Enter form name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleCreateForm(formName, activeFolderIndex),\n        children: \"Create Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: closeModal,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(FolderComponent, \"kxi/jf8cvJqyQynPRKKyBD74foM=\");\n_c = FolderComponent;\nexport default FolderComponent;\nvar _c;\n$RefreshReg$(_c, \"FolderComponent\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","FolderComponent","_s","folders","setFolders","name","forms","setForms","activeFolderIndex","setActiveFolderIndex","modalOpen","setModalOpen","formName","setFormName","toggleFolderVisibility","index","openModal","type","closeModal","handleCreateForm","folderIndex","trim","updatedFolders","push","openDeleteFolderModal","filter","_","i","openDeleteFormModal","splice","updatedForms","children","className","map","folder","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","form","idx","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["D:/Cuvette/MERN/Client/form-builder/src/Components/Dashboard/Dashboard.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\n// Folder Component\r\nconst FolderComponent = () => {\r\n  const [folders, setFolders] = useState([\r\n    { name: \"Folder 1\", forms: [] },\r\n    { name: \"Folder 2\", forms: [] },\r\n  ]);\r\n  const [forms, setForms] = useState([]);\r\n  const [activeFolderIndex, setActiveFolderIndex] = useState(null);\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [formName, setFormName] = useState('');\r\n\r\n  const toggleFolderVisibility = (index) => {\r\n    if (activeFolderIndex === index) {\r\n      setActiveFolderIndex(null);\r\n    } else {\r\n      setActiveFolderIndex(index);\r\n    }\r\n  };\r\n\r\n  const openModal = (type) => {\r\n    setModalOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setModalOpen(false);\r\n    setFormName('');\r\n  };\r\n\r\n  const handleCreateForm = (formName, folderIndex = null) => {\r\n    if (formName.trim()) {\r\n      if (folderIndex !== null) {\r\n        const updatedFolders = [...folders];\r\n        updatedFolders[folderIndex].forms.push(formName.trim());\r\n        setFolders(updatedFolders);\r\n      } else {\r\n        setForms([...forms, formName.trim()]);\r\n      }\r\n    }\r\n    closeModal();\r\n  };\r\n\r\n  const openDeleteFolderModal = (index) => {\r\n    // Delete folder logic\r\n    const updatedFolders = folders.filter((_, i) => i !== index);\r\n    setFolders(updatedFolders);\r\n    if (activeFolderIndex === index) setActiveFolderIndex(null);\r\n  };\r\n\r\n  const openDeleteFormModal = (index, folderIndex = null) => {\r\n    // Delete form logic\r\n    if (folderIndex !== null) {\r\n      const updatedFolders = [...folders];\r\n      updatedFolders[folderIndex].forms.splice(index, 1);\r\n      setFolders(updatedFolders);\r\n    } else {\r\n      const updatedForms = [...forms];\r\n      updatedForms.splice(index, 1);\r\n      setForms(updatedForms);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* Folder List with Forms */}\r\n      <ul className=\"Create-form-list\">\r\n        <li className=\"folder-list-li\">\r\n          <div className=\"folder-list\">\r\n            {folders.map((folder, index) => (\r\n              <div key={index} className=\"folder-item\">\r\n                <span onClick={() => toggleFolderVisibility(index)}>{folder.name}</span>\r\n                <button\r\n                  className=\"delete-button\"\r\n                  onClick={() => openDeleteFolderModal(index)}\r\n                >\r\n                  <img src=\"del.png\" alt=\"Delete\" />\r\n                </button>\r\n                {/* Show form list only for the active folder */}\r\n                {activeFolderIndex === index && (\r\n                  <>\r\n                    <ul className=\"form-list\">\r\n                      {folder.forms.map((form, idx) => (\r\n                        <div key={idx} className=\"form-item\">\r\n                          <span>{form}</span>\r\n                          <button\r\n                            className=\"delete-button-form\"\r\n                            onClick={() => openDeleteFormModal(idx, index)}\r\n                          >\r\n                            <img src=\"del.png\" className=\"del-form\" alt=\"Delete\" />\r\n                          </button>\r\n                        </div>\r\n                      ))}\r\n                    </ul>\r\n                    {/* Only show form creation button for active folder */}\r\n                    <button\r\n                      className=\"create-typebot\"\r\n                      onClick={() => openModal(\"form\")}\r\n                    >\r\n                      <p>\r\n                        <span className=\"plus\">+</span> <br />\r\n                        Create a typebot\r\n                      </p>\r\n                    </button>\r\n                  </>\r\n                )}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </li>\r\n\r\n        {/* Show global forms if no folder is active */}\r\n        {activeFolderIndex === null && (\r\n          <li className=\"form-li\">\r\n            <div className=\"form-list\">\r\n              {forms.map((form, index) => (\r\n                <div key={index} className=\"form-item\">\r\n                  <span>{form}</span>\r\n                  <button\r\n                    className=\"delete-button-form\"\r\n                    onClick={() => openDeleteFormModal(index)}\r\n                  >\r\n                    <img src=\"del.png\" className=\"del-form\" alt=\"Delete\" />\r\n                  </button>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </li>\r\n        )}\r\n      </ul>\r\n\r\n      {/* Modal for creating new forms */}\r\n      {modalOpen && (\r\n        <div className=\"modal\">\r\n          <input\r\n            type=\"text\"\r\n            value={formName}\r\n            onChange={(e) => setFormName(e.target.value)}\r\n            placeholder=\"Enter form name\"\r\n          />\r\n          <button onClick={() => handleCreateForm(formName, activeFolderIndex)}>\r\n            Create Form\r\n          </button>\r\n          <button onClick={closeModal}>Cancel</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FolderComponent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}