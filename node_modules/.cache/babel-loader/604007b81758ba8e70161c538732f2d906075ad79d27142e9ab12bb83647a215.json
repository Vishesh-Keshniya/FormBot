{"ast":null,"code":"var _jsxFileName = \"D:\\\\Cuvette\\\\MERN\\\\Client\\\\form-builder\\\\src\\\\Components\\\\Dashboard\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./Dashboard.css\";\nimport axios from \"axios\";\nimport CreateFolderModal from \"./CreateFolderModal\";\nimport CreateFormModal from \"./CreateFormModal\";\nimport DeleteFolder from \"./DeleteFolder\";\nimport DeleteForm from \"./DeleteForm\";\nimport Settings from \"./Settings\";\nimport ShareModal from \"./ShareModal\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  var _folders$activeFolder2, _folders$activeFolder3;\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [modalType, setModalType] = useState(null);\n  const [isLightTheme, setIsLightTheme] = useState(false);\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [folders, setFolders] = useState([]);\n  const [forms, setForms] = useState([]);\n  const [username, setUsername] = useState(\"\");\n  const [deleteFolderIndex, setDeleteFolderIndex] = useState(null);\n  const [deleteFormIndex, setDeleteFormIndex] = useState(null);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [isDeleteFormModalOpen, setIsDeleteFormModalOpen] = useState(false);\n  const [isSettingsOpen, setIsSettingsOpen] = useState(false);\n  const [isShareModalOpen, setIsShareModalOpen] = useState(false);\n  const [activeFolderIndex, setActiveFolderIndex] = useState(null);\n  useEffect(() => {\n    const fetchUsername = async () => {\n      try {\n        const token = localStorage.getItem(\"jwtToken\");\n        if (token) {\n          var _response$data;\n          const response = await axios.get(\"http://localhost:8000/username\", {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          if ((_response$data = response.data) !== null && _response$data !== void 0 && _response$data.username) {\n            setUsername(response.data.username);\n          }\n        }\n      } catch (error) {\n        console.error(\"Error fetching username:\", error);\n      }\n    };\n    fetchUsername();\n  }, []);\n  const openModal = type => {\n    setModalType(type);\n    setIsModalOpen(true);\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setModalType(null);\n  };\n  const handleCreateFolder = async folderName => {\n    if (folderName.trim()) {\n      try {\n        const response = await axios.post('http://localhost:8000/api/folders', {\n          name: folderName.trim()\n        });\n        setFolders([...folders, response.data]);\n      } catch (error) {\n        var _error$response;\n        if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 409) {\n          alert('Folder name must be unique.');\n        } else {\n          console.error('Error creating folder:', error);\n          alert('Failed to create folder. Please try again.');\n        }\n      }\n    }\n    closeModal();\n  };\n  useEffect(() => {\n    const fetchFolders = async () => {\n      try {\n        const response = await axios.get('http://localhost:8000/api/folders');\n        setFolders(response.data);\n      } catch (error) {\n        console.error('Error fetching folders:', error);\n      }\n    };\n    fetchFolders();\n  }, []);\n  useEffect(() => {\n    const fetchForms = async () => {\n      try {\n        const response = await axios.get('http://localhost:8000/api/forms');\n        setForms(response.data);\n      } catch (error) {\n        console.error('Error fetching forms:', error);\n      }\n    };\n    fetchForms();\n  }, []);\n  const handleCreateForm = async formName => {\n    if (formName.trim() && activeFolderIndex !== null) {\n      try {\n        const folderId = folders[activeFolderIndex]._id;\n        const response = await axios.post('http://localhost:8000/api/forms', {\n          name: formName.trim(),\n          folderId\n        });\n        const updatedFolders = [...folders];\n        updatedFolders[activeFolderIndex].forms.push(response.data);\n        setFolders(updatedFolders);\n      } catch (error) {\n        console.error('Error creating form:', error);\n        alert('Failed to create form. Please try again.');\n      }\n    }\n    closeModal();\n  };\n  const toggleTheme = () => {\n    setIsLightTheme(prev => !prev);\n  };\n  const toggleDropdown = () => {\n    setIsDropdownOpen(prev => !prev);\n  };\n  const handleDeleteFolder = index => {\n    setFolders(folders.filter((_, i) => i !== index));\n  };\n  const handleDeleteForm = index => {\n    setForms(forms.filter((_, i) => i !== index));\n  };\n  const openDeleteFolderModal = index => {\n    setDeleteFolderIndex(index);\n    setIsDeleteModalOpen(true);\n  };\n  const openDeleteFormModal = index => {\n    setDeleteFormIndex(index);\n    setIsDeleteFormModalOpen(true);\n  };\n  const closeDeleteFolderModal = () => {\n    setDeleteFolderIndex(null);\n    setIsDeleteModalOpen(false);\n  };\n  const closeDeleteFormModal = () => {\n    setDeleteFormIndex(null);\n    setIsDeleteFormModalOpen(false);\n  };\n  const confirmDeleteFolder = () => {\n    if (deleteFolderIndex !== null) handleDeleteFolder(deleteFolderIndex);\n    closeDeleteFolderModal();\n  };\n  const confirmDeleteForm = async () => {\n    if (deleteFormIndex !== null) {\n      try {\n        var _folders$activeFolder;\n        const formId = (_folders$activeFolder = folders[activeFolderIndex]) === null || _folders$activeFolder === void 0 ? void 0 : _folders$activeFolder.forms[deleteFormIndex]._id;\n        await axios.delete(`http://localhost:8000/api/forms/${formId}`);\n        const updatedFolders = [...folders];\n        updatedFolders[activeFolderIndex].forms.splice(deleteFormIndex, 1);\n        setFolders(updatedFolders);\n      } catch (error) {\n        console.error('Error deleting form:', error);\n      }\n      closeDeleteFormModal();\n    }\n  };\n  const openSettings = () => setIsSettingsOpen(true);\n  const closeSettings = () => setIsSettingsOpen(false);\n  const openShareModal = () => setIsShareModalOpen(true);\n  const closeShareModal = () => setIsShareModalOpen(false);\n  const toggleFolderVisibility = async index => {\n    setActiveFolderIndex(activeFolderIndex === index ? null : index);\n    if (activeFolderIndex !== index) {\n      try {\n        const folderId = folders[index]._id;\n        const response = await axios.get(`http://localhost:8000/api/forms/${folderId}`);\n        const updatedFolders = [...folders];\n        updatedFolders[index].forms = response.data;\n        setFolders(updatedFolders);\n      } catch (error) {\n        console.error('Error fetching forms:', error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `dashboard-container ${isLightTheme ? \"light\" : \"dark\"}`,\n    children: isSettingsOpen ? /*#__PURE__*/_jsxDEV(Settings, {\n      closeSettings: closeSettings\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"navbar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"workspace-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"workspace-button\",\n            onClick: toggleDropdown,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: username ? `${username}'s workspace` : \"Loading...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"dropdown-icon\",\n              src: \"drop.png\",\n              alt: \"Dropdown Icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this), isDropdownOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dropdown-menu\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"dropdown-item\",\n              onClick: openSettings,\n              children: \"Settings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"dropdown-item logout\",\n              children: \"Log Out\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"theme-toggle\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Light\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"switch\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: !isLightTheme,\n              onChange: toggleTheme\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"slider\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Dark\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"share-button\",\n          onClick: openShareModal,\n          children: \"Share\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Dashboard-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"Create-folder-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `create-folder ${activeFolderIndex !== null ? \"hidden\" : \"\"}`,\n              onClick: () => openModal(\"folder\"),\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"folder.png\",\n                className: \"folder\",\n                alt: \"Folder\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 19\n              }, this), \"Create a folder\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `create-typebot ${activeFolderIndex !== null ? \"\" : \"hidden\"}`,\n              onClick: () => openModal(\"form\"),\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"plus\",\n                  children: \"+\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 21\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 53\n                }, this), \"Create a typebot\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"Create-form-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"folder-list-li\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"folder-list\",\n              children: folders.map((folder, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `folder-item ${activeFolderIndex === index ? \"active-folder\" : \"\"}`,\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  onClick: () => toggleFolderVisibility(index),\n                  children: folder.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"delete-button\",\n                  onClick: () => openDeleteFolderModal(index),\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: \"del.png\",\n                    alt: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 277,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 17\n            }, this), activeFolderIndex !== null && /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"form-list\",\n              children: (_folders$activeFolder2 = folders[activeFolderIndex]) === null || _folders$activeFolder2 === void 0 ? void 0 : _folders$activeFolder2.forms.map((form, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: form.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 22\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"delete-button-form\",\n                  onClick: () => openDeleteFormModal(form._id),\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: \"del.png\",\n                    className: \"del-form\",\n                    alt: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 291,\n                    columnNumber: 24\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 22\n                }, this)]\n              }, idx, true, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 20\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 18\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"form-li\",\n            children: (_folders$activeFolder3 = folders[activeFolderIndex]) === null || _folders$activeFolder3 === void 0 ? void 0 : _folders$activeFolder3.forms.map((form, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: form.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 22\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"delete-button-form\",\n                onClick: () => openDeleteFormModal(form._id),\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: \"del.png\",\n                  className: \"del-form\",\n                  alt: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 308,\n                  columnNumber: 24\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 22\n              }, this)]\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 20\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }, this), isModalOpen && modalType === \"folder\" && /*#__PURE__*/_jsxDEV(CreateFolderModal, {\n        closeModal: closeModal,\n        isLightTheme: isLightTheme,\n        onCreateFolder: handleCreateFolder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 13\n      }, this), isModalOpen && modalType === \"form\" && /*#__PURE__*/_jsxDEV(CreateFormModal, {\n        closeModal: closeModal,\n        isLightTheme: isLightTheme,\n        onCreateForm: handleCreateForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 13\n      }, this), isDeleteModalOpen && /*#__PURE__*/_jsxDEV(DeleteFolder, {\n        closeModal: closeDeleteFolderModal,\n        isLightTheme: isLightTheme,\n        confirmDeleteFolder: confirmDeleteFolder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 13\n      }, this), isDeleteFormModalOpen && /*#__PURE__*/_jsxDEV(DeleteForm, {\n        closeModal: closeDeleteFormModal,\n        isLightTheme: isLightTheme,\n        confirmDeleteForm: confirmDeleteForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 13\n      }, this), isShareModalOpen && /*#__PURE__*/_jsxDEV(ShareModal, {\n        closeShareModal: closeShareModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"V3zNL0rKxkOLcqgC0cGOxsc5ojk=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","CreateFolderModal","CreateFormModal","DeleteFolder","DeleteForm","Settings","ShareModal","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","_folders$activeFolder2","_folders$activeFolder3","isModalOpen","setIsModalOpen","modalType","setModalType","isLightTheme","setIsLightTheme","isDropdownOpen","setIsDropdownOpen","folders","setFolders","forms","setForms","username","setUsername","deleteFolderIndex","setDeleteFolderIndex","deleteFormIndex","setDeleteFormIndex","isDeleteModalOpen","setIsDeleteModalOpen","isDeleteFormModalOpen","setIsDeleteFormModalOpen","isSettingsOpen","setIsSettingsOpen","isShareModalOpen","setIsShareModalOpen","activeFolderIndex","setActiveFolderIndex","fetchUsername","token","localStorage","getItem","_response$data","response","get","headers","Authorization","data","error","console","openModal","type","closeModal","handleCreateFolder","folderName","trim","post","name","_error$response","status","alert","fetchFolders","fetchForms","handleCreateForm","formName","folderId","_id","updatedFolders","push","toggleTheme","prev","toggleDropdown","handleDeleteFolder","index","filter","_","i","handleDeleteForm","openDeleteFolderModal","openDeleteFormModal","closeDeleteFolderModal","closeDeleteFormModal","confirmDeleteFolder","confirmDeleteForm","_folders$activeFolder","formId","delete","splice","openSettings","closeSettings","openShareModal","closeShareModal","toggleFolderVisibility","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","checked","onChange","map","folder","form","idx","onCreateFolder","onCreateForm","_c","$RefreshReg$"],"sources":["D:/Cuvette/MERN/Client/form-builder/src/Components/Dashboard/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./Dashboard.css\";\r\nimport axios from \"axios\";\r\nimport CreateFolderModal from \"./CreateFolderModal\";\r\nimport CreateFormModal from \"./CreateFormModal\";\r\nimport DeleteFolder from \"./DeleteFolder\";\r\nimport DeleteForm from \"./DeleteForm\";\r\nimport Settings from \"./Settings\";\r\nimport ShareModal from \"./ShareModal\";\r\n\r\nconst Dashboard = () => {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [modalType, setModalType] = useState(null);\r\n  const [isLightTheme, setIsLightTheme] = useState(false);\r\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\r\n  const [folders, setFolders] = useState([]);\r\n  const [forms, setForms] = useState([]);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [deleteFolderIndex, setDeleteFolderIndex] = useState(null);\r\n  const [deleteFormIndex, setDeleteFormIndex] = useState(null);\r\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\r\n  const [isDeleteFormModalOpen, setIsDeleteFormModalOpen] = useState(false);\r\n  const [isSettingsOpen, setIsSettingsOpen] = useState(false);\r\n  const [isShareModalOpen, setIsShareModalOpen] = useState(false);\r\n  const [activeFolderIndex, setActiveFolderIndex] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchUsername = async () => {\r\n      try {\r\n        const token = localStorage.getItem(\"jwtToken\");\r\n        if (token) {\r\n          const response = await axios.get(\"http://localhost:8000/username\", {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          });\r\n          if (response.data?.username) {\r\n            setUsername(response.data.username);\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching username:\", error);\r\n      }\r\n    };\r\n    fetchUsername();\r\n  }, []);\r\n\r\n  const openModal = (type) => {\r\n    setModalType(type);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n    setModalType(null);\r\n  };\r\n\r\n  const handleCreateFolder = async (folderName) => {\r\n    if (folderName.trim()) {\r\n      try {\r\n        const response = await axios.post('http://localhost:8000/api/folders', { name: folderName.trim() });\r\n        setFolders([...folders, response.data]);\r\n      } catch (error) {\r\n        if (error.response?.status === 409) {\r\n          alert('Folder name must be unique.');\r\n        } else {\r\n          console.error('Error creating folder:', error);\r\n          alert('Failed to create folder. Please try again.');\r\n        }\r\n      }\r\n    }\r\n    closeModal();\r\n  };\r\n  \r\n  useEffect(() => {\r\n    const fetchFolders = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:8000/api/folders');\r\n        setFolders(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching folders:', error);\r\n      }\r\n    };\r\n    fetchFolders();\r\n  }, []);\r\n  \r\nuseEffect(() => {\r\n  const fetchForms = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:8000/api/forms');\r\n      setForms(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching forms:', error);\r\n    }\r\n  };\r\n\r\n  fetchForms();\r\n}, []);\r\n\r\n\r\nconst handleCreateForm = async (formName) => {\r\n  if (formName.trim() && activeFolderIndex !== null) {\r\n    try {\r\n      const folderId = folders[activeFolderIndex]._id;\r\n      const response = await axios.post('http://localhost:8000/api/forms', {\r\n        name: formName.trim(),\r\n        folderId,\r\n      });\r\n      const updatedFolders = [...folders];\r\n      updatedFolders[activeFolderIndex].forms.push(response.data);\r\n      setFolders(updatedFolders);\r\n    } catch (error) {\r\n      console.error('Error creating form:', error);\r\n      alert('Failed to create form. Please try again.');\r\n    }\r\n  }\r\n  closeModal();\r\n};\r\n\r\n\r\n\r\n\r\n  const toggleTheme = () => {\r\n    setIsLightTheme((prev) => !prev);\r\n  };\r\n\r\n  const toggleDropdown = () => {\r\n    setIsDropdownOpen((prev) => !prev);\r\n  };\r\n\r\n  const handleDeleteFolder = (index) => {\r\n    setFolders(folders.filter((_, i) => i !== index));\r\n  };\r\n\r\n  const handleDeleteForm = (index) => {\r\n    setForms(forms.filter((_, i) => i !== index));\r\n  };\r\n\r\n  const openDeleteFolderModal = (index) => {\r\n    setDeleteFolderIndex(index);\r\n    setIsDeleteModalOpen(true);\r\n  };\r\n\r\n  const openDeleteFormModal = (index) => {\r\n    setDeleteFormIndex(index);\r\n    setIsDeleteFormModalOpen(true);\r\n  };\r\n\r\n  const closeDeleteFolderModal = () => {\r\n    setDeleteFolderIndex(null);\r\n    setIsDeleteModalOpen(false);\r\n  };\r\n\r\n  const closeDeleteFormModal = () => {\r\n    setDeleteFormIndex(null);\r\n    setIsDeleteFormModalOpen(false);\r\n  };\r\n\r\n  const confirmDeleteFolder = () => {\r\n    if (deleteFolderIndex !== null) handleDeleteFolder(deleteFolderIndex);\r\n    closeDeleteFolderModal();\r\n  };\r\n\r\n  const confirmDeleteForm = async () => {\r\n    if (deleteFormIndex !== null) {\r\n      try {\r\n        const formId = folders[activeFolderIndex]?.forms[deleteFormIndex]._id;\r\n        await axios.delete(`http://localhost:8000/api/forms/${formId}`);\r\n        const updatedFolders = [...folders];\r\n        updatedFolders[activeFolderIndex].forms.splice(deleteFormIndex, 1);\r\n        setFolders(updatedFolders);\r\n      } catch (error) {\r\n        console.error('Error deleting form:', error);\r\n      }\r\n      closeDeleteFormModal();\r\n    }\r\n  };\r\n  \r\n\r\n  const openSettings = () => setIsSettingsOpen(true);\r\n\r\n  const closeSettings = () => setIsSettingsOpen(false);\r\n\r\n  const openShareModal = () => setIsShareModalOpen(true);\r\n\r\n  const closeShareModal = () => setIsShareModalOpen(false);\r\n\r\n  const toggleFolderVisibility = async (index) => {\r\n    setActiveFolderIndex(activeFolderIndex === index ? null : index);\r\n  \r\n    if (activeFolderIndex !== index) {\r\n      try {\r\n        const folderId = folders[index]._id;\r\n        const response = await axios.get(`http://localhost:8000/api/forms/${folderId}`);\r\n        const updatedFolders = [...folders];\r\n        updatedFolders[index].forms = response.data;\r\n        setFolders(updatedFolders);\r\n      } catch (error) {\r\n        console.error('Error fetching forms:', error);\r\n      }\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <div className={`dashboard-container ${isLightTheme ? \"light\" : \"dark\"}`}>\r\n      {isSettingsOpen ? (\r\n        <Settings closeSettings={closeSettings} />\r\n      ) : (\r\n        <>\r\n          <nav className=\"navbar\">\r\n            <div className=\"logo\"></div>\r\n            <div className=\"workspace-container\">\r\n              <button className=\"workspace-button\" onClick={toggleDropdown}>\r\n                <span>{username ? `${username}'s workspace` : \"Loading...\"}</span>\r\n                <img className=\"dropdown-icon\" src=\"drop.png\" alt=\"Dropdown Icon\" />\r\n              </button>\r\n              {isDropdownOpen && (\r\n                <div className=\"dropdown-menu\">\r\n                  <button className=\"dropdown-item\" onClick={openSettings}>\r\n                    Settings\r\n                  </button>\r\n                  <button className=\"dropdown-item logout\">Log Out</button>\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div className=\"theme-toggle\">\r\n              <span>Light</span>\r\n              <label className=\"switch\">\r\n                <input type=\"checkbox\" checked={!isLightTheme} onChange={toggleTheme} />\r\n                <span className=\"slider\"></span>\r\n              </label>\r\n              <span>Dark</span>\r\n            </div>\r\n            <button className=\"share-button\" onClick={openShareModal}>\r\n              Share\r\n            </button>\r\n          </nav>\r\n\r\n          <div className=\"Dashboard-content\">\r\n            <ul className=\"Create-folder-list\">\r\n              <li>\r\n                <button\r\n                  className={`create-folder ${activeFolderIndex !== null ? \"hidden\" : \"\"}`}\r\n                  onClick={() => openModal(\"folder\")}\r\n                >\r\n                  <img src=\"folder.png\" className=\"folder\" alt=\"Folder\" />\r\n                  Create a folder\r\n                </button>\r\n              </li>\r\n              <li>\r\n                <button\r\n                  className={`create-typebot ${activeFolderIndex !== null ? \"\" : \"hidden\"}`}\r\n                  onClick={() => openModal(\"form\")}\r\n                >\r\n                  <p>\r\n                    <span className=\"plus\">+</span> <br />\r\n                    Create a typebot\r\n                  </p>\r\n                </button>\r\n              </li>\r\n            </ul>\r\n\r\n            <ul className=\"Create-form-list\">\r\n              <li className=\"folder-list-li\">\r\n                <div className=\"folder-list\">\r\n                  {folders.map((folder, index) => (\r\n                    <div\r\n                      key={index}\r\n                      className={`folder-item ${activeFolderIndex === index ? \"active-folder\" : \"\"}`}\r\n                    >\r\n                      <span onClick={() => toggleFolderVisibility(index)}>\r\n                        {folder.name}\r\n                      </span>\r\n                      <button\r\n                        className=\"delete-button\"\r\n                        onClick={() => openDeleteFolderModal(index)}\r\n                      >\r\n                        <img src=\"del.png\" alt=\"Delete\" />\r\n                      </button>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n                {activeFolderIndex !== null && (\r\n                 <ul className=\"form-list\">\r\n                 {folders[activeFolderIndex]?.forms.map((form, idx) => (\r\n                   <div key={idx} className=\"form-item\">\r\n                     <span>{form.name}</span>\r\n                     <button\r\n                       className=\"delete-button-form\"\r\n                       onClick={() => openDeleteFormModal(form._id)}\r\n                     >\r\n                       <img src=\"del.png\" className=\"del-form\" alt=\"Delete\" />\r\n                     </button>\r\n                   </div>\r\n                 ))}\r\n               </ul>\r\n               \r\n                )}\r\n              </li>\r\n              <li className=\"form-li\">\r\n                \r\n                {folders[activeFolderIndex]?.forms.map((form, idx) => (\r\n                   <div key={idx} className=\"form-item\">\r\n                     <span>{form.name}</span>\r\n                     <button\r\n                       className=\"delete-button-form\"\r\n                       onClick={() => openDeleteFormModal(form._id)}\r\n                     >\r\n                       <img src=\"del.png\" className=\"del-form\" alt=\"Delete\" />\r\n                     </button>\r\n                   </div>\r\n                 ))}\r\n               \r\n              </li>\r\n            </ul>\r\n          </div>\r\n\r\n          {isModalOpen && modalType === \"folder\" && (\r\n            <CreateFolderModal\r\n              closeModal={closeModal}\r\n              isLightTheme={isLightTheme}\r\n              onCreateFolder={handleCreateFolder}\r\n            />\r\n          )}\r\n          {isModalOpen && modalType === \"form\" && (\r\n            <CreateFormModal\r\n              closeModal={closeModal}\r\n              isLightTheme={isLightTheme}\r\n              onCreateForm={handleCreateForm}\r\n            />\r\n          )}\r\n\r\n          {isDeleteModalOpen && (\r\n            <DeleteFolder\r\n              closeModal={closeDeleteFolderModal}\r\n              isLightTheme={isLightTheme}\r\n              confirmDeleteFolder={confirmDeleteFolder}\r\n            />\r\n          )}\r\n\r\n          {isDeleteFormModalOpen && (\r\n            <DeleteForm\r\n              closeModal={closeDeleteFormModal}\r\n              isLightTheme={isLightTheme}\r\n              confirmDeleteForm={confirmDeleteForm}\r\n            />\r\n          )}\r\n\r\n          {isShareModalOpen && <ShareModal closeShareModal={closeShareModal} />}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}