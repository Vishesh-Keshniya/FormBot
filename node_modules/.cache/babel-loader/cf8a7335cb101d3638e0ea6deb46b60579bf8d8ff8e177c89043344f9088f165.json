{"ast":null,"code":"var _jsxFileName = \"D:\\\\Cuvette\\\\MERN\\\\Client\\\\form-builder\\\\src\\\\Components\\\\Dashboard\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./Dashboard.css\";\nimport CreateFolderModal from \"./CreateFolderModal\";\nimport CreateFormModal from \"./CreateFormModal\";\nimport DeleteFolder from \"./DeleteFolder\";\nimport DeleteForm from \"./DeleteForm\";\nimport Settings from \"./Settings\";\nimport ShareModal from \"./ShareModal\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [modalType, setModalType] = useState(null);\n  const [isLightTheme, setIsLightTheme] = useState(false);\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [folders, setFolders] = useState([]);\n  const [forms, setForms] = useState([]);\n  const [deleteFolderIndex, setDeleteFolderIndex] = useState(null);\n  const [deleteFormIndex, setDeleteFormIndex] = useState(null);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [isDeleteFormModalOpen, setIsDeleteFormModalOpen] = useState(false);\n  const [isSettingsOpen, setIsSettingsOpen] = useState(false);\n  const [isShareModalOpen, setIsShareModalOpen] = useState(false);\n  const [activeFolderIndex, setActiveFolderIndex] = useState(null);\n  const [username, setUsername] = useState(\"\"); // State to store username\n\n  // Fetch user data when the component mounts\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\"); // Get the token from localStorage\n\n    if (token) {\n      fetchUserProfile(token);\n    }\n  }, []);\n  const fetchUserProfile = async token => {\n    try {\n      const response = await fetch(\"http://localhost:5000/profile\", {\n        method: \"GET\",\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setUsername(data.username); // Set the username from the response\n      } else {\n        console.error(\"Failed to fetch user profile\", data.message);\n      }\n    } catch (error) {\n      console.error(\"Error fetching user profile\", error);\n    }\n  };\n  const openModal = type => {\n    setModalType(type);\n    setIsModalOpen(true);\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setModalType(null);\n  };\n  const handleCreateFolder = folderName => {\n    if (folderName.trim()) {\n      const isDuplicate = folders.some(folder => folder.name === folderName.trim());\n      if (isDuplicate) {\n        alert(\"Folder name must be unique.\");\n        return;\n      }\n      setFolders([...folders, {\n        name: folderName.trim(),\n        forms: []\n      }]);\n    }\n    closeModal();\n  };\n  const handleCreateForm = (formName, folderIndex = null) => {\n    if (formName.trim()) {\n      if (folderIndex !== null) {\n        const updatedFolders = [...folders];\n        updatedFolders[folderIndex].forms.push(formName.trim());\n        setFolders(updatedFolders);\n      } else {\n        setForms([...forms, formName.trim()]);\n      }\n    }\n    closeModal();\n  };\n  const toggleTheme = () => {\n    setIsLightTheme(prevState => !prevState);\n  };\n  const toggleDropdown = () => {\n    setIsDropdownOpen(prevState => !prevState);\n  };\n  const handleDeleteFolder = index => {\n    const updatedFolders = folders.filter((_, i) => i !== index);\n    setFolders(updatedFolders);\n  };\n  const handleDeleteForm = index => {\n    const updatedForms = forms.filter((_, i) => i !== index);\n    setForms(updatedForms);\n  };\n  const openDeleteFolderModal = index => {\n    setDeleteFolderIndex(index);\n    setIsDeleteModalOpen(true);\n  };\n  const openDeleteFormModal = index => {\n    setDeleteFormIndex(index);\n    setIsDeleteFormModalOpen(true);\n  };\n  const closeDeleteFolderModal = () => {\n    setDeleteFolderIndex(null);\n    setIsDeleteModalOpen(false);\n  };\n  const closeDeleteFormModal = () => {\n    setDeleteFormIndex(null);\n    setIsDeleteFormModalOpen(false);\n  };\n  const confirmDeleteFolder = () => {\n    if (deleteFolderIndex !== null) {\n      handleDeleteFolder(deleteFolderIndex);\n    }\n    closeDeleteFolderModal();\n  };\n  const confirmDeleteForm = () => {\n    if (deleteFormIndex !== null) {\n      handleDeleteForm(deleteFormIndex);\n    }\n    closeDeleteFormModal();\n  };\n  const openSettings = () => {\n    setIsSettingsOpen(true);\n  };\n  const closeSettings = () => {\n    setIsSettingsOpen(false);\n  };\n  const openShareModal = () => {\n    setIsShareModalOpen(true);\n  };\n  const closeShareModal = () => {\n    setIsShareModalOpen(false);\n  };\n\n  // Toggle the active folder index\n  const toggleFolderVisibility = index => {\n    setActiveFolderIndex(activeFolderIndex === index ? null : index);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `dashboard-container ${isLightTheme ? \"light\" : \"dark\"}`,\n    children: isSettingsOpen ? /*#__PURE__*/_jsxDEV(Settings, {\n      closeSettings: closeSettings\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"navbar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"workspace-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"workspace-button\",\n            onClick: toggleDropdown,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: username ? `${username}'s workspace` : \"Loading...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"dropdown-icon\",\n              src: \"drop.png\",\n              alt: \"Dropdown Icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 15\n          }, this), isDropdownOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dropdown-menu\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"dropdown-item\",\n              onClick: openSettings,\n              children: \"Settings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"dropdown-item logout\",\n              children: \"Log Out\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"theme-toggle\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Light\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"switch\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: !isLightTheme,\n              onChange: toggleTheme\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"slider\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Dark\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"share-button\",\n          onClick: openShareModal,\n          children: \"Share\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Dashboard-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"Create-folder-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"create-folder\",\n              onClick: () => openModal(\"folder\"),\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"folder.png\",\n                className: \"folder\",\n                alt: \"Folder\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 19\n              }, this), \"Create a folder\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"folder-list\",\n              children: folders.map((folder, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"folder-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  onClick: () => toggleFolderVisibility(index),\n                  children: folder.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"delete-button\",\n                  onClick: () => openDeleteFolderModal(index),\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: \"del.png\",\n                    alt: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 219,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 23\n                }, this), activeFolderIndex === index && /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: \"form-list\",\n                  children: folder.forms.map((form, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-item\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: form\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 226,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"delete-button-form\",\n                      onClick: () => openDeleteFormModal(idx),\n                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                        src: \"del.png\",\n                        className: \"del-form\",\n                        alt: \"Delete\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 231,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 227,\n                      columnNumber: 31\n                    }, this)]\n                  }, idx, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 225,\n                    columnNumber: 29\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 25\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"Create-form-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"create-typebot\",\n              onClick: () => openModal(\"form\"),\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"plus\",\n                  children: \"+\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 21\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 53\n                }, this), \"Create a typebot\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"form-li\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-list\",\n              children: forms.map((form, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: form\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"delete-button-form\",\n                  onClick: () => openDeleteFormModal(index),\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: \"del.png\",\n                    className: \"del-form\",\n                    alt: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 262,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }, this), isModalOpen && (modalType === \"folder\" ? /*#__PURE__*/_jsxDEV(CreateFolderModal, {\n        closeModal: closeModal,\n        handleCreateFolder: handleCreateFolder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(CreateFormModal, {\n        closeModal: closeModal,\n        handleCreateForm: handleCreateForm,\n        folders: folders\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 15\n      }, this)), isDeleteModalOpen && /*#__PURE__*/_jsxDEV(DeleteFolder, {\n        closeDeleteFolderModal: closeDeleteFolderModal,\n        confirmDeleteFolder: confirmDeleteFolder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 13\n      }, this), isDeleteFormModalOpen && /*#__PURE__*/_jsxDEV(DeleteForm, {\n        closeDeleteFormModal: closeDeleteFormModal,\n        confirmDeleteForm: confirmDeleteForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 13\n      }, this), isShareModalOpen && /*#__PURE__*/_jsxDEV(ShareModal, {\n        closeShareModal: closeShareModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"ahrYuLg/BBvkOs+D0YdpWV6CxBs=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","CreateFolderModal","CreateFormModal","DeleteFolder","DeleteForm","Settings","ShareModal","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","isModalOpen","setIsModalOpen","modalType","setModalType","isLightTheme","setIsLightTheme","isDropdownOpen","setIsDropdownOpen","folders","setFolders","forms","setForms","deleteFolderIndex","setDeleteFolderIndex","deleteFormIndex","setDeleteFormIndex","isDeleteModalOpen","setIsDeleteModalOpen","isDeleteFormModalOpen","setIsDeleteFormModalOpen","isSettingsOpen","setIsSettingsOpen","isShareModalOpen","setIsShareModalOpen","activeFolderIndex","setActiveFolderIndex","username","setUsername","token","localStorage","getItem","fetchUserProfile","response","fetch","method","headers","Authorization","data","json","ok","console","error","message","openModal","type","closeModal","handleCreateFolder","folderName","trim","isDuplicate","some","folder","name","alert","handleCreateForm","formName","folderIndex","updatedFolders","push","toggleTheme","prevState","toggleDropdown","handleDeleteFolder","index","filter","_","i","handleDeleteForm","updatedForms","openDeleteFolderModal","openDeleteFormModal","closeDeleteFolderModal","closeDeleteFormModal","confirmDeleteFolder","confirmDeleteForm","openSettings","closeSettings","openShareModal","closeShareModal","toggleFolderVisibility","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","checked","onChange","map","form","idx","_c","$RefreshReg$"],"sources":["D:/Cuvette/MERN/Client/form-builder/src/Components/Dashboard/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./Dashboard.css\";\r\nimport CreateFolderModal from \"./CreateFolderModal\";\r\nimport CreateFormModal from \"./CreateFormModal\";\r\nimport DeleteFolder from \"./DeleteFolder\";\r\nimport DeleteForm from \"./DeleteForm\";\r\nimport Settings from \"./Settings\";\r\nimport ShareModal from \"./ShareModal\";\r\n\r\nconst Dashboard = () => {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [modalType, setModalType] = useState(null);\r\n  const [isLightTheme, setIsLightTheme] = useState(false);\r\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\r\n  const [folders, setFolders] = useState([]);\r\n  const [forms, setForms] = useState([]);\r\n  const [deleteFolderIndex, setDeleteFolderIndex] = useState(null);\r\n  const [deleteFormIndex, setDeleteFormIndex] = useState(null);\r\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\r\n  const [isDeleteFormModalOpen, setIsDeleteFormModalOpen] = useState(false);\r\n  const [isSettingsOpen, setIsSettingsOpen] = useState(false);\r\n  const [isShareModalOpen, setIsShareModalOpen] = useState(false);\r\n  const [activeFolderIndex, setActiveFolderIndex] = useState(null); \r\n  const [username, setUsername] = useState(\"\"); // State to store username\r\n\r\n  // Fetch user data when the component mounts\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\"); // Get the token from localStorage\r\n\r\n    if (token) {\r\n      fetchUserProfile(token);\r\n    }\r\n  }, []);\r\n\r\n  const fetchUserProfile = async (token) => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/profile\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        setUsername(data.username); // Set the username from the response\r\n      } else {\r\n        console.error(\"Failed to fetch user profile\", data.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching user profile\", error);\r\n    }\r\n  };\r\n\r\n  const openModal = (type) => {\r\n    setModalType(type);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n    setModalType(null);\r\n  };\r\n\r\n  const handleCreateFolder = (folderName) => {\r\n    if (folderName.trim()) {\r\n      const isDuplicate = folders.some(folder => folder.name === folderName.trim());\r\n      if (isDuplicate) {\r\n        alert(\"Folder name must be unique.\");\r\n        return;\r\n      }\r\n      setFolders([...folders, { name: folderName.trim(), forms: [] }]);\r\n    }\r\n    closeModal();\r\n  };\r\n\r\n  const handleCreateForm = (formName, folderIndex = null) => {\r\n    if (formName.trim()) {\r\n      if (folderIndex !== null) {\r\n        const updatedFolders = [...folders];\r\n        updatedFolders[folderIndex].forms.push(formName.trim());\r\n        setFolders(updatedFolders);\r\n      } else {\r\n        setForms([...forms, formName.trim()]);\r\n      }\r\n    }\r\n    closeModal();\r\n  };\r\n\r\n  const toggleTheme = () => {\r\n    setIsLightTheme((prevState) => !prevState);\r\n  };\r\n\r\n  const toggleDropdown = () => {\r\n    setIsDropdownOpen((prevState) => !prevState);\r\n  };\r\n\r\n  const handleDeleteFolder = (index) => {\r\n    const updatedFolders = folders.filter((_, i) => i !== index);\r\n    setFolders(updatedFolders);\r\n  };\r\n\r\n  const handleDeleteForm = (index) => {\r\n    const updatedForms = forms.filter((_, i) => i !== index);\r\n    setForms(updatedForms);\r\n  };\r\n\r\n  const openDeleteFolderModal = (index) => {\r\n    setDeleteFolderIndex(index);\r\n    setIsDeleteModalOpen(true);\r\n  };\r\n\r\n  const openDeleteFormModal = (index) => {\r\n    setDeleteFormIndex(index);\r\n    setIsDeleteFormModalOpen(true);\r\n  };\r\n\r\n  const closeDeleteFolderModal = () => {\r\n    setDeleteFolderIndex(null);\r\n    setIsDeleteModalOpen(false);\r\n  };\r\n\r\n  const closeDeleteFormModal = () => {\r\n    setDeleteFormIndex(null);\r\n    setIsDeleteFormModalOpen(false);\r\n  };\r\n\r\n  const confirmDeleteFolder = () => {\r\n    if (deleteFolderIndex !== null) {\r\n      handleDeleteFolder(deleteFolderIndex);\r\n    }\r\n    closeDeleteFolderModal();\r\n  };\r\n\r\n  const confirmDeleteForm = () => {\r\n    if (deleteFormIndex !== null) {\r\n      handleDeleteForm(deleteFormIndex);\r\n    }\r\n    closeDeleteFormModal();\r\n  };\r\n\r\n  const openSettings = () => {\r\n    setIsSettingsOpen(true);\r\n  };\r\n\r\n  const closeSettings = () => {\r\n    setIsSettingsOpen(false);\r\n  };\r\n\r\n  const openShareModal = () => {\r\n    setIsShareModalOpen(true);\r\n  };\r\n\r\n  const closeShareModal = () => {\r\n    setIsShareModalOpen(false);\r\n  };\r\n\r\n  // Toggle the active folder index\r\n  const toggleFolderVisibility = (index) => {\r\n    setActiveFolderIndex(activeFolderIndex === index ? null : index);\r\n  };\r\n\r\n  return (\r\n    <div className={`dashboard-container ${isLightTheme ? \"light\" : \"dark\"}`}>\r\n      {isSettingsOpen ? (\r\n        <Settings closeSettings={closeSettings} />\r\n      ) : (\r\n        <>\r\n          <nav className=\"navbar\">\r\n            <div className=\"logo\"></div>\r\n            <div className=\"workspace-container\">\r\n              <button className=\"workspace-button\" onClick={toggleDropdown}>\r\n                <span>{username ? `${username}'s workspace` : \"Loading...\"}</span>\r\n                <img className=\"dropdown-icon\" src=\"drop.png\" alt=\"Dropdown Icon\" />\r\n              </button>\r\n              {isDropdownOpen && (\r\n                <div className=\"dropdown-menu\">\r\n                  <button className=\"dropdown-item\" onClick={openSettings}>Settings</button>\r\n                  <button className=\"dropdown-item logout\">Log Out</button>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"theme-toggle\">\r\n              <span>Light</span>\r\n              <label className=\"switch\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={!isLightTheme}\r\n                  onChange={toggleTheme}\r\n                />\r\n                <span className=\"slider\"></span>\r\n              </label>\r\n              <span>Dark</span>\r\n            </div>\r\n            <button className=\"share-button\" onClick={openShareModal}>\r\n              Share\r\n            </button>\r\n          </nav>\r\n\r\n          <div className=\"Dashboard-content\">\r\n            {/* Create Folder Section */}\r\n            <ul className=\"Create-folder-list\">\r\n              <li>\r\n                <button className=\"create-folder\" onClick={() => openModal(\"folder\")}>\r\n                  <img src=\"folder.png\" className=\"folder\" alt=\"Folder\" />\r\n                  Create a folder\r\n                </button>\r\n              </li>\r\n              <li>\r\n                <div className=\"folder-list\">\r\n                  {folders.map((folder, index) => (\r\n                    <div key={index} className=\"folder-item\">\r\n                      <span onClick={() => toggleFolderVisibility(index)}>{folder.name}</span>\r\n                      <button\r\n                        className=\"delete-button\"\r\n                        onClick={() => openDeleteFolderModal(index)}\r\n                      >\r\n                        <img src=\"del.png\" alt=\"Delete\" />\r\n                      </button>\r\n                      {/* Show form list only for the active folder */}\r\n                      {activeFolderIndex === index && (\r\n                        <ul className=\"form-list\">\r\n                          {folder.forms.map((form, idx) => (\r\n                            <div key={idx} className=\"form-item\">\r\n                              <span>{form}</span>\r\n                              <button\r\n                                className=\"delete-button-form\"\r\n                                onClick={() => openDeleteFormModal(idx)}\r\n                              >\r\n                                <img src=\"del.png\" className=\"del-form\" alt=\"Delete\" />\r\n                              </button>\r\n                            </div>\r\n                          ))}\r\n                        </ul>\r\n                      )}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </li>\r\n            </ul>\r\n\r\n            {/* Create Typebot Section */}\r\n            <ul className=\"Create-form-list\">\r\n              <li>\r\n                <button className=\"create-typebot\" onClick={() => openModal(\"form\")}>\r\n                  <p>\r\n                    <span className=\"plus\">+</span> <br />\r\n                    Create a typebot\r\n                  </p>\r\n                </button>\r\n              </li>\r\n              <li className=\"form-li\">\r\n                <div className=\"form-list\">\r\n                  {forms.map((form, index) => (\r\n                    <div key={index} className=\"form-item\">\r\n                      <span>{form}</span>\r\n                      <button\r\n                        className=\"delete-button-form\"\r\n                        onClick={() => openDeleteFormModal(index)}\r\n                      >\r\n                        <img src=\"del.png\" className=\"del-form\" alt=\"Delete\" />\r\n                      </button>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n\r\n          {/* Modal Components */}\r\n          {isModalOpen && (\r\n            modalType === \"folder\" ? (\r\n              <CreateFolderModal\r\n                closeModal={closeModal}\r\n                handleCreateFolder={handleCreateFolder}\r\n              />\r\n            ) : (\r\n              <CreateFormModal\r\n                closeModal={closeModal}\r\n                handleCreateForm={handleCreateForm}\r\n                folders={folders}\r\n              />\r\n            )\r\n          )}\r\n          \r\n          {/* Delete Folder Modal */}\r\n          {isDeleteModalOpen && (\r\n            <DeleteFolder\r\n              closeDeleteFolderModal={closeDeleteFolderModal}\r\n              confirmDeleteFolder={confirmDeleteFolder}\r\n            />\r\n          )}\r\n          \r\n          {/* Delete Form Modal */}\r\n          {isDeleteFormModalOpen && (\r\n            <DeleteForm\r\n              closeDeleteFormModal={closeDeleteFormModal}\r\n              confirmDeleteForm={confirmDeleteForm}\r\n            />\r\n          )}\r\n\r\n          {/* Share Modal */}\r\n          {isShareModalOpen && <ShareModal closeShareModal={closeShareModal} />}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}