{"ast":null,"code":"var _jsxFileName = \"D:\\\\Cuvette\\\\MERN\\\\Client\\\\form-builder\\\\src\\\\Components\\\\Dashboard\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./Dashboard.css\";\nimport axios from \"axios\";\nimport CreateFolderModal from \"./CreateFolderModal\";\nimport CreateFormModal from \"./CreateFormModal\";\nimport DeleteFolder from \"./DeleteFolder\";\nimport DeleteForm from \"./DeleteForm\";\nimport Settings from \"./Settings\";\nimport ShareModal from \"./ShareModal\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [modalType, setModalType] = useState(null);\n  const [isLightTheme, setIsLightTheme] = useState(false);\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [folders, setFolders] = useState([]);\n  const [forms, setForms] = useState([]);\n  const [username, setUsername] = useState(\"\");\n  const [deleteFolderIndex, setDeleteFolderIndex] = useState(null);\n  const [deleteFormIndex, setDeleteFormIndex] = useState(null);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [isDeleteFormModalOpen, setIsDeleteFormModalOpen] = useState(false);\n  const [isSettingsOpen, setIsSettingsOpen] = useState(false);\n  const [isShareModalOpen, setIsShareModalOpen] = useState(false);\n  const [activeFolderIndex, setActiveFolderIndex] = useState(null);\n\n  // Fetch username on component mount\n  useEffect(() => {\n    const fetchUsername = async () => {\n      try {\n        const token = localStorage.getItem(\"jwtToken\");\n        if (token) {\n          const response = await axios.get(\"http://localhost:8000/username\", {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          setUsername(response.data.username || \"Guest\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching username:\", error);\n      }\n    };\n    fetchUsername();\n  }, []);\n\n  // Fetch folders from the backend\n  useEffect(() => {\n    const fetchFolders = async () => {\n      try {\n        const token = localStorage.getItem(\"jwtToken\");\n        if (token) {\n          const response = await axios.get(\"http://localhost:8000/folders\", {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          setFolders(response.data || []);\n        }\n      } catch (error) {\n        console.error(\"Error fetching folders:\", error);\n      }\n    };\n    fetchFolders();\n  }, []);\n  const openModal = type => {\n    setModalType(type);\n    setIsModalOpen(true);\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setModalType(null);\n  };\n  const handleCreateFolder = async folderName => {\n    if (folderName.trim()) {\n      try {\n        const token = localStorage.getItem(\"jwtToken\");\n        const response = await axios.post(\"http://localhost:8000/api/folders\", {\n          name: folderName.trim()\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setFolders([...folders, response.data]);\n        closeModal();\n      } catch (error) {\n        console.error(\"Error creating folder:\", error);\n      }\n    }\n  };\n  const handleCreateForm = async formName => {\n    if (formName.trim()) {\n      try {\n        const token = localStorage.getItem(\"jwtToken\");\n        const folderId = activeFolderIndex !== null ? folders[activeFolderIndex]._id : null;\n        const response = await axios.post(\"http://localhost:8000/api/forms\", {\n          name: formName.trim(),\n          folderId\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (folderId) {\n          const updatedFolders = [...folders];\n          updatedFolders[activeFolderIndex].forms.push(response.data);\n          setFolders(updatedFolders);\n        } else {\n          setForms([...forms, response.data]);\n        }\n        closeModal();\n      } catch (error) {\n        console.error(\"Error creating form:\", error);\n      }\n    }\n  };\n  const toggleTheme = () => {\n    setIsLightTheme(prev => {\n      const newTheme = !prev;\n      localStorage.setItem(\"theme\", newTheme ? \"light\" : \"dark\");\n      return newTheme;\n    });\n  };\n  useEffect(() => {\n    const savedTheme = localStorage.getItem(\"theme\");\n    setIsLightTheme(savedTheme === \"light\");\n  }, []);\n  const handleDeleteFolder = async index => {\n    try {\n      const folderId = folders[index]._id;\n      const token = localStorage.getItem(\"jwtToken\");\n      await axios.delete(`http://localhost:8000/api/folders/${folderId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setFolders(folders.filter((_, i) => i !== index));\n    } catch (error) {\n      console.error(\"Error deleting folder:\", error);\n    }\n  };\n  const handleDeleteForm = async index => {\n    try {\n      const formId = forms[index]._id;\n      const token = localStorage.getItem(\"jwtToken\");\n      await axios.delete(`http://localhost:8000/api/forms/${formId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setForms(forms.filter((_, i) => i !== index));\n    } catch (error) {\n      console.error(\"Error deleting form:\", error);\n    }\n  };\n  const toggleFolderVisibility = index => {\n    setActiveFolderIndex(activeFolderIndex === index ? null : index);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `dashboard-container ${isLightTheme ? \"light\" : \"dark\"}`,\n    children: [isSettingsOpen ? /*#__PURE__*/_jsxDEV(Settings, {\n      closeSettings: () => setIsSettingsOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"navbar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"workspace-container\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [username, \"'s Workspace\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"theme-toggle\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Light\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"switch\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: !isLightTheme,\n              onChange: toggleTheme\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"slider\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Dark\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsShareModalOpen(true),\n          children: \"Share\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => openModal(\"folder\"),\n          children: \"Create Folder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => openModal(\"form\"),\n          children: \"Create Form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: folders.map((folder, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: () => toggleFolderVisibility(index),\n              children: folder.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteFolder(index),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this), activeFolderIndex !== null && /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: folders[activeFolderIndex].forms.map((form, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [form.name, /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteForm(index),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 21\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), isModalOpen && modalType === \"folder\" && /*#__PURE__*/_jsxDEV(CreateFolderModal, {\n      closeModal: closeModal,\n      onCreateFolder: handleCreateFolder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 9\n    }, this), isModalOpen && modalType === \"form\" && /*#__PURE__*/_jsxDEV(CreateFormModal, {\n      closeModal: closeModal,\n      onCreateForm: handleCreateForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"V3zNL0rKxkOLcqgC0cGOxsc5ojk=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","CreateFolderModal","CreateFormModal","DeleteFolder","DeleteForm","Settings","ShareModal","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","isModalOpen","setIsModalOpen","modalType","setModalType","isLightTheme","setIsLightTheme","isDropdownOpen","setIsDropdownOpen","folders","setFolders","forms","setForms","username","setUsername","deleteFolderIndex","setDeleteFolderIndex","deleteFormIndex","setDeleteFormIndex","isDeleteModalOpen","setIsDeleteModalOpen","isDeleteFormModalOpen","setIsDeleteFormModalOpen","isSettingsOpen","setIsSettingsOpen","isShareModalOpen","setIsShareModalOpen","activeFolderIndex","setActiveFolderIndex","fetchUsername","token","localStorage","getItem","response","get","headers","Authorization","data","error","console","fetchFolders","openModal","type","closeModal","handleCreateFolder","folderName","trim","post","name","handleCreateForm","formName","folderId","_id","updatedFolders","push","toggleTheme","prev","newTheme","setItem","savedTheme","handleDeleteFolder","index","delete","filter","_","i","handleDeleteForm","formId","toggleFolderVisibility","className","children","closeSettings","fileName","_jsxFileName","lineNumber","columnNumber","checked","onChange","onClick","map","folder","form","onCreateFolder","onCreateForm","_c","$RefreshReg$"],"sources":["D:/Cuvette/MERN/Client/form-builder/src/Components/Dashboard/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./Dashboard.css\";\r\nimport axios from \"axios\";\r\nimport CreateFolderModal from \"./CreateFolderModal\";\r\nimport CreateFormModal from \"./CreateFormModal\";\r\nimport DeleteFolder from \"./DeleteFolder\";\r\nimport DeleteForm from \"./DeleteForm\";\r\nimport Settings from \"./Settings\";\r\nimport ShareModal from \"./ShareModal\";\r\n\r\nconst Dashboard = () => {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [modalType, setModalType] = useState(null);\r\n  const [isLightTheme, setIsLightTheme] = useState(false);\r\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\r\n  const [folders, setFolders] = useState([]);\r\n  const [forms, setForms] = useState([]);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [deleteFolderIndex, setDeleteFolderIndex] = useState(null);\r\n  const [deleteFormIndex, setDeleteFormIndex] = useState(null);\r\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\r\n  const [isDeleteFormModalOpen, setIsDeleteFormModalOpen] = useState(false);\r\n  const [isSettingsOpen, setIsSettingsOpen] = useState(false);\r\n  const [isShareModalOpen, setIsShareModalOpen] = useState(false);\r\n  const [activeFolderIndex, setActiveFolderIndex] = useState(null);\r\n\r\n  // Fetch username on component mount\r\n  useEffect(() => {\r\n    const fetchUsername = async () => {\r\n      try {\r\n        const token = localStorage.getItem(\"jwtToken\");\r\n        if (token) {\r\n          const response = await axios.get(\"http://localhost:8000/username\", {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          });\r\n          setUsername(response.data.username || \"Guest\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching username:\", error);\r\n      }\r\n    };\r\n    fetchUsername();\r\n  }, []);\r\n\r\n  // Fetch folders from the backend\r\n  useEffect(() => {\r\n    const fetchFolders = async () => {\r\n      try {\r\n        const token = localStorage.getItem(\"jwtToken\");\r\n        if (token) {\r\n          const response = await axios.get(\"http://localhost:8000/folders\", {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          });\r\n          setFolders(response.data || []);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching folders:\", error);\r\n      }\r\n    };\r\n    fetchFolders();\r\n  }, []);\r\n\r\n  const openModal = (type) => {\r\n    setModalType(type);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n    setModalType(null);\r\n  };\r\n\r\n  const handleCreateFolder = async (folderName) => {\r\n    if (folderName.trim()) {\r\n      try {\r\n        const token = localStorage.getItem(\"jwtToken\");\r\n        const response = await axios.post(\r\n          \"http://localhost:8000/api/folders\",\r\n          { name: folderName.trim() },\r\n          { headers: { Authorization: `Bearer ${token}` } }\r\n        );\r\n        setFolders([...folders, response.data]);\r\n        closeModal();\r\n      } catch (error) {\r\n        console.error(\"Error creating folder:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleCreateForm = async (formName) => {\r\n    if (formName.trim()) {\r\n      try {\r\n        const token = localStorage.getItem(\"jwtToken\");\r\n        const folderId =\r\n          activeFolderIndex !== null ? folders[activeFolderIndex]._id : null;\r\n        const response = await axios.post(\r\n          \"http://localhost:8000/api/forms\",\r\n          { name: formName.trim(), folderId },\r\n          { headers: { Authorization: `Bearer ${token}` } }\r\n        );\r\n        if (folderId) {\r\n          const updatedFolders = [...folders];\r\n          updatedFolders[activeFolderIndex].forms.push(response.data);\r\n          setFolders(updatedFolders);\r\n        } else {\r\n          setForms([...forms, response.data]);\r\n        }\r\n        closeModal();\r\n      } catch (error) {\r\n        console.error(\"Error creating form:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const toggleTheme = () => {\r\n    setIsLightTheme((prev) => {\r\n      const newTheme = !prev;\r\n      localStorage.setItem(\"theme\", newTheme ? \"light\" : \"dark\");\r\n      return newTheme;\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const savedTheme = localStorage.getItem(\"theme\");\r\n    setIsLightTheme(savedTheme === \"light\");\r\n  }, []);\r\n\r\n  const handleDeleteFolder = async (index) => {\r\n    try {\r\n      const folderId = folders[index]._id;\r\n      const token = localStorage.getItem(\"jwtToken\");\r\n      await axios.delete(`http://localhost:8000/api/folders/${folderId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      setFolders(folders.filter((_, i) => i !== index));\r\n    } catch (error) {\r\n      console.error(\"Error deleting folder:\", error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteForm = async (index) => {\r\n    try {\r\n      const formId = forms[index]._id;\r\n      const token = localStorage.getItem(\"jwtToken\");\r\n      await axios.delete(`http://localhost:8000/api/forms/${formId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      setForms(forms.filter((_, i) => i !== index));\r\n    } catch (error) {\r\n      console.error(\"Error deleting form:\", error);\r\n    }\r\n  };\r\n\r\n  const toggleFolderVisibility = (index) => {\r\n    setActiveFolderIndex(activeFolderIndex === index ? null : index);\r\n  };\r\n\r\n  return (\r\n    <div className={`dashboard-container ${isLightTheme ? \"light\" : \"dark\"}`}>\r\n      {isSettingsOpen ? (\r\n        <Settings closeSettings={() => setIsSettingsOpen(false)} />\r\n      ) : (\r\n        <>\r\n          <nav className=\"navbar\">\r\n            <div className=\"workspace-container\">\r\n              <span>{username}'s Workspace</span>\r\n            </div>\r\n            <div className=\"theme-toggle\">\r\n              <span>Light</span>\r\n              <label className=\"switch\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={!isLightTheme}\r\n                  onChange={toggleTheme}\r\n                />\r\n                <span className=\"slider\"></span>\r\n              </label>\r\n              <span>Dark</span>\r\n            </div>\r\n            <button onClick={() => setIsShareModalOpen(true)}>Share</button>\r\n          </nav>\r\n          <div className=\"dashboard-content\">\r\n            <button onClick={() => openModal(\"folder\")}>Create Folder</button>\r\n            <button onClick={() => openModal(\"form\")}>Create Form</button>\r\n            <ul>\r\n              {folders.map((folder, index) => (\r\n                <li key={index}>\r\n                  <span onClick={() => toggleFolderVisibility(index)}>\r\n                    {folder.name}\r\n                  </span>\r\n                  <button onClick={() => handleDeleteFolder(index)}>Delete</button>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n            {activeFolderIndex !== null && (\r\n              <ul>\r\n                {folders[activeFolderIndex].forms.map((form, index) => (\r\n                  <li key={index}>\r\n                    {form.name}\r\n                    <button onClick={() => handleDeleteForm(index)}>Delete</button>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n      {isModalOpen && modalType === \"folder\" && (\r\n        <CreateFolderModal\r\n          closeModal={closeModal}\r\n          onCreateFolder={handleCreateFolder}\r\n        />\r\n      )}\r\n      {isModalOpen && modalType === \"form\" && (\r\n        <CreateFormModal closeModal={closeModal} onCreateForm={handleCreateForm} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}