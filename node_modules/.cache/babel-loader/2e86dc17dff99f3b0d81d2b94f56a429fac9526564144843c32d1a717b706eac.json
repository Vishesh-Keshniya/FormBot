{"ast":null,"code":"var _jsxFileName = \"D:\\\\Cuvette\\\\MERN\\\\Client\\\\form-builder\\\\src\\\\Components\\\\Dashboard\\\\ShareModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./ShareModal.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ShareModal = ({\n  isOpen,\n  onClose\n}) => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  const [dropdownText, setDropdownText] = useState(\"Edit\"); // Track dropdown state (Edit or View)\n\n  const handleEmailChange = e => setEmail(e.target.value);\n  const toggleDropdown = () => setDropdownOpen(!dropdownOpen);\n  const handleSendInvite = () => {\n    if (email) {\n      alert(`Invite sent to ${email}`);\n    } else {\n      alert(\"Please enter a valid email.\");\n    }\n  };\n  const handleCopyLink = () => {\n    navigator.clipboard.writeText(\"https://example.com/invite\");\n    alert(\"Link copied to clipboard!\");\n  };\n  const handleDropdownItemClick = mode => {\n    setDropdownText(mode); // Change dropdown text to \"Edit\" or \"View\"\n    setDropdownOpen(false); // Close the dropdown after selection\n  };\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"share-modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"share-modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"share-modal-header\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          onClick: onClose,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"close.png\",\n            alt: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"share-modal-title\",\n        children: \"Invite by Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"email-input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown\",\n          onClick: toggleDropdown,\n          children: [dropdownText, \" \\u25BC \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), dropdownOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-menu-share\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dropdown-item-share-edit\",\n            onClick: () => handleDropdownItemClick(\"Edit\") // Set dropdown to \"Edit\"\n            ,\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dropdown-item-share-view\",\n            onClick: () => handleDropdownItemClick(\"View\") // Set dropdown to \"View\"\n            ,\n            children: \"View\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Enter email id\",\n        value: email,\n        onChange: handleEmailChange,\n        className: \"email-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"send-invite-button\",\n        onClick: handleSendInvite,\n        children: \"Send Invite\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"share-modal-title\",\n        children: \"Invite by link\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"copy-link-button\",\n        onClick: handleCopyLink,\n        children: \"Copy link\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(ShareModal, \"QYy2k9VDHu64jykIuuQbcohn3XI=\");\n_c = ShareModal;\nexport default ShareModal;\nvar _c;\n$RefreshReg$(_c, \"ShareModal\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ShareModal","isOpen","onClose","_s","email","setEmail","dropdownOpen","setDropdownOpen","dropdownText","setDropdownText","handleEmailChange","e","target","value","toggleDropdown","handleSendInvite","alert","handleCopyLink","navigator","clipboard","writeText","handleDropdownItemClick","mode","className","children","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","_c","$RefreshReg$"],"sources":["D:/Cuvette/MERN/Client/form-builder/src/Components/Dashboard/ShareModal.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./ShareModal.css\";\r\n\r\nconst ShareModal = ({ isOpen, onClose }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n  const [dropdownText, setDropdownText] = useState(\"Edit\"); // Track dropdown state (Edit or View)\r\n\r\n  const handleEmailChange = (e) => setEmail(e.target.value);\r\n\r\n  const toggleDropdown = () => setDropdownOpen(!dropdownOpen);\r\n\r\n  const handleSendInvite = () => {\r\n    if (email) {\r\n      alert(`Invite sent to ${email}`);\r\n    } else {\r\n      alert(\"Please enter a valid email.\");\r\n    }\r\n  };\r\n\r\n  const handleCopyLink = () => {\r\n    navigator.clipboard.writeText(\"https://example.com/invite\");\r\n    alert(\"Link copied to clipboard!\");\r\n  };\r\n\r\n  const handleDropdownItemClick = (mode) => {\r\n    setDropdownText(mode); // Change dropdown text to \"Edit\" or \"View\"\r\n    setDropdownOpen(false); // Close the dropdown after selection\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"share-modal-overlay\">\r\n      <div className=\"share-modal\">\r\n        <div className=\"share-modal-header\">\r\n          <button className=\"close-button\" onClick={onClose}>\r\n            <img src=\"close.png\" alt=\"Close\" />\r\n          </button>\r\n        </div>\r\n        <h3 className=\"share-modal-title\">Invite by Email</h3>\r\n        <div className=\"email-input-container\">\r\n          <div className=\"dropdown\" onClick={toggleDropdown}>\r\n            {dropdownText} â–¼ {/* Show current dropdown text */}\r\n          </div>\r\n          {dropdownOpen && (\r\n            <div className=\"dropdown-menu-share\">\r\n              <div\r\n                className=\"dropdown-item-share-edit\"\r\n                onClick={() => handleDropdownItemClick(\"Edit\")} // Set dropdown to \"Edit\"\r\n              >\r\n                Edit\r\n              </div>\r\n              <div\r\n                className=\"dropdown-item-share-view\"\r\n                onClick={() => handleDropdownItemClick(\"View\")} // Set dropdown to \"View\"\r\n              >\r\n                View\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Always show the email input field */}\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Enter email id\"\r\n          value={email}\r\n          onChange={handleEmailChange}\r\n          className=\"email-input\"\r\n        />\r\n\r\n        <button className=\"send-invite-button\" onClick={handleSendInvite}>\r\n          Send Invite\r\n        </button>\r\n\r\n        <h3 className=\"share-modal-title\">Invite by link</h3>\r\n        <button className=\"copy-link-button\" onClick={handleCopyLink}>\r\n          Copy link\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShareModal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}