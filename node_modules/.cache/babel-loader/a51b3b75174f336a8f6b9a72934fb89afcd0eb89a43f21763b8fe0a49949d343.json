{"ast":null,"code":"import React,{useState}from\"react\";import\"./ShareModal.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ShareModal=_ref=>{let{isOpen,onClose}=_ref;const[email,setEmail]=useState(\"\");const[dropdownOpen,setDropdownOpen]=useState(false);const[dropdownText,setDropdownText]=useState(\"Edit\");// Track dropdown state (Edit or View)\nconst handleEmailChange=e=>setEmail(e.target.value);const toggleDropdown=()=>setDropdownOpen(!dropdownOpen);const handleSendInvite=()=>{if(email){alert(\"Invite sent to \".concat(email));}else{alert(\"Please enter a valid email.\");}};const handleCopyLink=()=>{navigator.clipboard.writeText(\"https://example.com/invite\");alert(\"Link copied to clipboard!\");};const handleDropdownItemClick=mode=>{setDropdownText(mode);// Change dropdown text to \"Edit\" or \"View\"\nsetDropdownOpen(false);// Close the dropdown after selection\n};if(!isOpen)return null;return/*#__PURE__*/_jsx(\"div\",{className:\"share-modal-overlay\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"share-modal\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"share-modal-header\",children:/*#__PURE__*/_jsx(\"button\",{className:\"close-button\",onClick:onClose,children:/*#__PURE__*/_jsx(\"img\",{src:\"close.png\",alt:\"Close\"})})}),/*#__PURE__*/_jsx(\"h3\",{className:\"share-modal-title\",children:\"Invite by Email\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"email-input-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"dropdown\",onClick:toggleDropdown,children:[dropdownText,\" \\u25BC \"]}),dropdownOpen&&/*#__PURE__*/_jsxs(\"div\",{className:\"dropdown-menu-share\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"dropdown-item-share-edit\",onClick:()=>handleDropdownItemClick(\"Edit\")// Set dropdown to \"Edit\"\n,children:\"Edit\"}),/*#__PURE__*/_jsx(\"div\",{className:\"dropdown-item-share-view\",onClick:()=>handleDropdownItemClick(\"View\")// Set dropdown to \"View\"\n,children:\"View\"})]})]}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",placeholder:\"Enter email id\",value:email,onChange:handleEmailChange,className:\"email-input\"}),/*#__PURE__*/_jsx(\"button\",{className:\"send-invite-button\",onClick:handleSendInvite,children:\"Send Invite\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"share-modal-title\",children:\"Invite by link\"}),/*#__PURE__*/_jsx(\"button\",{className:\"copy-link-button\",onClick:handleCopyLink,children:\"Copy link\"})]})});};export default ShareModal;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","ShareModal","_ref","isOpen","onClose","email","setEmail","dropdownOpen","setDropdownOpen","dropdownText","setDropdownText","handleEmailChange","e","target","value","toggleDropdown","handleSendInvite","alert","concat","handleCopyLink","navigator","clipboard","writeText","handleDropdownItemClick","mode","className","children","onClick","src","alt","type","placeholder","onChange"],"sources":["D:/Cuvette/MERN/Client/form-builder/src/Components/Dashboard/ShareModal.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./ShareModal.css\";\r\n\r\nconst ShareModal = ({ isOpen, onClose }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n  const [dropdownText, setDropdownText] = useState(\"Edit\"); // Track dropdown state (Edit or View)\r\n\r\n  const handleEmailChange = (e) => setEmail(e.target.value);\r\n\r\n  const toggleDropdown = () => setDropdownOpen(!dropdownOpen);\r\n\r\n  const handleSendInvite = () => {\r\n    if (email) {\r\n      alert(`Invite sent to ${email}`);\r\n    } else {\r\n      alert(\"Please enter a valid email.\");\r\n    }\r\n  };\r\n\r\n  const handleCopyLink = () => {\r\n    navigator.clipboard.writeText(\"https://example.com/invite\");\r\n    alert(\"Link copied to clipboard!\");\r\n  };\r\n\r\n  const handleDropdownItemClick = (mode) => {\r\n    setDropdownText(mode); // Change dropdown text to \"Edit\" or \"View\"\r\n    setDropdownOpen(false); // Close the dropdown after selection\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"share-modal-overlay\">\r\n      <div className=\"share-modal\">\r\n        <div className=\"share-modal-header\">\r\n          <button className=\"close-button\" onClick={onClose}>\r\n            <img src=\"close.png\" alt=\"Close\" />\r\n          </button>\r\n        </div>\r\n        <h3 className=\"share-modal-title\">Invite by Email</h3>\r\n        <div className=\"email-input-container\">\r\n          <div className=\"dropdown\" onClick={toggleDropdown}>\r\n            {dropdownText} â–¼ {/* Show current dropdown text */}\r\n          </div>\r\n          {dropdownOpen && (\r\n            <div className=\"dropdown-menu-share\">\r\n              <div\r\n                className=\"dropdown-item-share-edit\"\r\n                onClick={() => handleDropdownItemClick(\"Edit\")} // Set dropdown to \"Edit\"\r\n              >\r\n                Edit\r\n              </div>\r\n              <div\r\n                className=\"dropdown-item-share-view\"\r\n                onClick={() => handleDropdownItemClick(\"View\")} // Set dropdown to \"View\"\r\n              >\r\n                View\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Always show the email input field */}\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Enter email id\"\r\n          value={email}\r\n          onChange={handleEmailChange}\r\n          className=\"email-input\"\r\n        />\r\n\r\n        <button className=\"send-invite-button\" onClick={handleSendInvite}>\r\n          Send Invite\r\n        </button>\r\n\r\n        <h3 className=\"share-modal-title\">Invite by link</h3>\r\n        <button className=\"copy-link-button\" onClick={handleCopyLink}>\r\n          Copy link\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShareModal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}