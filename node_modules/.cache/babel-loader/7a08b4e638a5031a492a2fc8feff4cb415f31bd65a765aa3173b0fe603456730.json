{"ast":null,"code":"import\"./Dashboard.css\";import axios from\"axios\";import CreateFolderModal from\"./CreateFolderModal\";import CreateFormModal from\"./CreateFormModal\";import DeleteFolder from\"./DeleteFolder\";import DeleteForm from\"./DeleteForm\";import Settings from\"./Settings\";import ShareModal from\"./ShareModal\";import{useState,useEffect}from\"react\";import{useNavigate}from\"react-router-dom\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const Dashboard=_ref=>{var _folders$activeFolder3;let{onFormListClick}=_ref;const[isModalOpen,setIsModalOpen]=useState(false);const[modalType,setModalType]=useState(null);const[isLightTheme,setIsLightTheme]=useState(false);const[isDropdownOpen,setIsDropdownOpen]=useState(false);const[folders,setFolders]=useState([]);const[forms,setForms]=useState([]);const[username,setUsername]=useState(\"\");const[activeFolderIndex,setActiveFolderIndex]=useState(null);const[isDeleteModalOpen,setIsDeleteModalOpen]=useState(false);const[isDeleteFormModalOpen,setIsDeleteFormModalOpen]=useState(false);const[isSettingsOpen,setIsSettingsOpen]=useState(false);const[isShareModalOpen,setIsShareModalOpen]=useState(false);const navigate=useNavigate();useEffect(()=>{const fetchUsername=async()=>{try{const token=localStorage.getItem(\"jwtToken\");if(token){var _response$data;const response=await axios.get(\"https://server-txml.onrender.com/username\",{headers:{Authorization:\"Bearer \".concat(token)}});setUsername(((_response$data=response.data)===null||_response$data===void 0?void 0:_response$data.username)||\"\");}}catch(error){console.error(\"Error fetching username:\",error);}};fetchUsername();},[]);useEffect(()=>{const fetchFolders=async()=>{try{const response=await axios.get(\"https://server-txml.onrender.com/api/folders\");setFolders(response.data);}catch(error){console.error(\"Error fetching folders:\",error);}};fetchFolders();},[]);useEffect(()=>{const fetchForms=async()=>{if(activeFolderIndex!==null){const folderId=folders[activeFolderIndex]._id;try{const response=await axios.get(\"https://server-txml.onrender.com/api/forms/\".concat(folderId));setForms(response.data);}catch(error){console.error(\"Error fetching forms:\",error);}}};fetchForms();},[activeFolderIndex,folders]);const openModal=type=>{setModalType(type);setIsModalOpen(true);};const closeModal=()=>{setIsModalOpen(false);setModalType(null);};const handleCreateFolder=async folderName=>{if(folderName.trim()){try{const response=await axios.post(\"https://server-txml.onrender.com/api/folders\",{name:folderName.trim()});setFolders(prevFolders=>[...prevFolders,response.data]);}catch(error){var _error$response;if(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===409){alert(\"Folder name must be unique.\");}else{console.error(\"Error creating folder:\",error);alert(\"Failed to create folder. Please try again.\");}}}closeModal();};const handleCreateForm=async formName=>{if(formName.trim()){try{let response;if(activeFolderIndex!==null){const folderId=folders[activeFolderIndex]._id;response=await axios.post(\"https://server-txml.onrender.com/api/forms\",{name:formName.trim(),folderId});setFolders(prevFolders=>{const updatedFolders=[...prevFolders];updatedFolders[activeFolderIndex].forms.push(response.data);return updatedFolders;});}else{// Create the form globally if no folder is selected\nresponse=await axios.post(\"https://server-txml.onrender.com/api/forms\",{name:formName.trim()});// Add it to global form list\nsetForms(prevForms=>[...prevForms,response.data]);}}catch(error){console.error(\"Error creating form:\",error);alert(\"Failed to create form. Please try again.\");}}closeModal();};const toggleTheme=()=>setIsLightTheme(prev=>!prev);const toggleDropdown=()=>setIsDropdownOpen(prev=>!prev);const openDeleteFolderModal=index=>{setActiveFolderIndex(index);// Store the folder index to delete\nsetIsDeleteModalOpen(true);// Open the delete confirmation modal\n};const openDeleteFormModal=index=>{setActiveFolderIndex(index);// Store the form index to delete\nsetIsDeleteFormModalOpen(true);// Open the delete confirmation modal\n};const closeDeleteFolderModal=()=>setIsDeleteModalOpen(false);const closeDeleteFormModal=()=>setIsDeleteFormModalOpen(false);const confirmDeleteFolder=async()=>{if(activeFolderIndex!==null){try{await axios.delete(\"https://server-txml.onrender.com/api/folders/\".concat(folders[activeFolderIndex]._id));// Make API call to delete the folder\nsetFolders(prevFolders=>prevFolders.filter((_,i)=>i!==activeFolderIndex));// Update the front-end state\n}catch(error){console.error(\"Error deleting folder:\",error);}}closeDeleteFolderModal();// Close the modal after deletion\n};const confirmDeleteForm=async()=>{if(activeFolderIndex!==null){try{var _folders$activeFolder,_folders$activeFolder2;const formId=(_folders$activeFolder=folders[activeFolderIndex])===null||_folders$activeFolder===void 0?void 0:(_folders$activeFolder2=_folders$activeFolder.forms[activeFolderIndex])===null||_folders$activeFolder2===void 0?void 0:_folders$activeFolder2._id;// Get the form ID\nawait axios.delete(\"https://server-txml.onrender.com/api/forms/\".concat(formId));// Make API call to delete the form\nsetFolders(prevFolders=>{const updatedFolders=[...prevFolders];updatedFolders[activeFolderIndex].forms=updatedFolders[activeFolderIndex].forms.filter(form=>form._id!==formId);// Remove the form from the front-end state\nreturn updatedFolders;});}catch(error){console.error(\"Error deleting form:\",error);}}closeDeleteFormModal();// Close the modal after deletion\n};const toggleFolderVisibility=async index=>{setActiveFolderIndex(activeFolderIndex===index?null:index);if(activeFolderIndex!==index){try{const folderId=folders[index]._id;const response=await axios.get(\"https://server-txml.onrender.com/api/forms/\".concat(folderId));setFolders(prevFolders=>{const updatedFolders=[...prevFolders];updatedFolders[index].forms=response.data;return updatedFolders;});}catch(error){console.error(\"Error fetching forms:\",error);}}};return/*#__PURE__*/_jsx(\"div\",{className:\"dashboard-container \".concat(isLightTheme?\"light\":\"dark\"),children:isSettingsOpen?/*#__PURE__*/_jsx(Settings,{closeSettings:()=>setIsSettingsOpen(false)}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"nav\",{className:\"navbar\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"logo\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"workspace-container\",children:[/*#__PURE__*/_jsxs(\"button\",{className:\"workspace-button\",onClick:toggleDropdown,children:[/*#__PURE__*/_jsx(\"span\",{children:username?\"\".concat(username,\"'s workspace\"):\"Loading...\"}),/*#__PURE__*/_jsx(\"img\",{className:\"dropdown-icon\",src:\"drop.png\",alt:\"Dropdown Icon\"})]}),isDropdownOpen&&/*#__PURE__*/_jsxs(\"div\",{className:\"dropdown-menu\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"dropdown-item\",onClick:()=>navigate(\"/settings\"),children:\"Settings\"}),/*#__PURE__*/_jsx(\"button\",{className:\"dropdown-item logout\",onClick:()=>navigate(\"/\"),children:\"Log Out\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"theme-toggle\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Light\"}),/*#__PURE__*/_jsxs(\"label\",{className:\"switch\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:!isLightTheme,onChange:toggleTheme}),/*#__PURE__*/_jsx(\"span\",{className:\"slider\"})]}),/*#__PURE__*/_jsx(\"span\",{children:\"Dark\"})]}),/*#__PURE__*/_jsx(\"button\",{className:\"share-button\",onClick:()=>setIsShareModalOpen(true),children:\"Share\"}),isShareModalOpen&&/*#__PURE__*/_jsx(ShareModal,{isOpen:isShareModalOpen,onClose:()=>setIsShareModalOpen(false)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"Dashboard-content\",children:[/*#__PURE__*/_jsxs(\"ul\",{className:\"Create-folder-list\",children:[/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsxs(\"button\",{className:\"create-folder \".concat(activeFolderIndex!==null?\"hidden\":\"\"),onClick:()=>openModal(\"folder\"),children:[/*#__PURE__*/_jsx(\"img\",{src:\"folder.png\",className:\"folder\",alt:\"Folder\"}),\"Create a folder\"]})}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"button\",{className:\"create-typebot \".concat(activeFolderIndex!==null?\"\":\"hidden\"),onClick:()=>openModal(\"form\"),children:/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"plus\",children:\"+\"}),\" \",/*#__PURE__*/_jsx(\"br\",{}),\"Create a typebot\"]})})})]}),/*#__PURE__*/_jsxs(\"ul\",{className:\"Create-form-list\",children:[/*#__PURE__*/_jsx(\"li\",{className:\"folder-list-li\",children:/*#__PURE__*/_jsx(\"div\",{className:\"folder-list\",children:folders.map((folder,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"folder-item \".concat(activeFolderIndex===index?\"active-folder\":\"\"),children:[/*#__PURE__*/_jsx(\"span\",{onClick:()=>toggleFolderVisibility(index),children:folder.name}),/*#__PURE__*/_jsx(\"button\",{className:\"delete-button\",onClick:()=>openDeleteFolderModal(index),children:/*#__PURE__*/_jsx(\"img\",{src:\"del.png\",alt:\"Delete\"})})]},folder._id))})}),activeFolderIndex===null?/*#__PURE__*/_jsx(\"li\",{className:\"form-li\",children:/*#__PURE__*/_jsx(\"div\",{className:\"form-list\",children:forms.length===0?/*#__PURE__*/_jsx(\"span\",{}):forms.map((form,index)=>/*#__PURE__*/_jsxs(\"button\",{className:\"form-item\",onClick:()=>navigate(\"/workspace\"),children:[/*#__PURE__*/_jsx(\"span\",{children:form.name}),/*#__PURE__*/_jsx(\"button\",{className:\"delete-button-form\",onClick:()=>openDeleteFormModal(index),children:/*#__PURE__*/_jsx(\"img\",{src:\"del.png\",className:\"del-form\",alt:\"Delete\"})})]},index))})}):/*#__PURE__*/_jsx(\"li\",{className:\"folder-forms-li\",children:/*#__PURE__*/_jsx(\"div\",{className:\"folder-forms-list\",children:(_folders$activeFolder3=folders[activeFolderIndex])===null||_folders$activeFolder3===void 0?void 0:_folders$activeFolder3.forms.map((form,index)=>/*#__PURE__*/_jsxs(\"button\",{className:\"form-item\",onClick:()=>navigate(\"/workspace\"),children:[/*#__PURE__*/_jsx(\"span\",{children:form.name}),/*#__PURE__*/_jsx(\"button\",{className:\"delete-button-form\",onClick:()=>openDeleteFormModal(index),children:/*#__PURE__*/_jsx(\"img\",{src:\"del.png\",className:\"del-form\",alt:\"Delete\"})})]},index))})})]})]}),isModalOpen&&modalType===\"folder\"&&/*#__PURE__*/_jsx(CreateFolderModal,{closeModal:closeModal,onCreateFolder:handleCreateFolder}),isModalOpen&&modalType===\"form\"&&/*#__PURE__*/_jsx(CreateFormModal,{closeModal:closeModal,onCreateForm:handleCreateForm}),isDeleteModalOpen&&/*#__PURE__*/_jsx(DeleteFolder,{closeModal:closeDeleteFolderModal,confirmDeleteFolder:confirmDeleteFolder}),isDeleteFormModalOpen&&/*#__PURE__*/_jsx(DeleteForm,{closeModal:closeDeleteFormModal,confirmDeleteForm:confirmDeleteForm}),isShareModalOpen&&/*#__PURE__*/_jsx(ShareModal,{closeShareModal:()=>setIsShareModalOpen(false)})]})});};export default Dashboard;","map":{"version":3,"names":["axios","CreateFolderModal","CreateFormModal","DeleteFolder","DeleteForm","Settings","ShareModal","useState","useEffect","useNavigate","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Dashboard","_ref","_folders$activeFolder3","onFormListClick","isModalOpen","setIsModalOpen","modalType","setModalType","isLightTheme","setIsLightTheme","isDropdownOpen","setIsDropdownOpen","folders","setFolders","forms","setForms","username","setUsername","activeFolderIndex","setActiveFolderIndex","isDeleteModalOpen","setIsDeleteModalOpen","isDeleteFormModalOpen","setIsDeleteFormModalOpen","isSettingsOpen","setIsSettingsOpen","isShareModalOpen","setIsShareModalOpen","navigate","fetchUsername","token","localStorage","getItem","_response$data","response","get","headers","Authorization","concat","data","error","console","fetchFolders","fetchForms","folderId","_id","openModal","type","closeModal","handleCreateFolder","folderName","trim","post","name","prevFolders","_error$response","status","alert","handleCreateForm","formName","updatedFolders","push","prevForms","toggleTheme","prev","toggleDropdown","openDeleteFolderModal","index","openDeleteFormModal","closeDeleteFolderModal","closeDeleteFormModal","confirmDeleteFolder","delete","filter","_","i","confirmDeleteForm","_folders$activeFolder","_folders$activeFolder2","formId","form","toggleFolderVisibility","className","children","closeSettings","onClick","src","alt","checked","onChange","isOpen","onClose","map","folder","length","onCreateFolder","onCreateForm","closeShareModal"],"sources":["D:/Cuvette/MERN/Client/form-builder/src/Components/Dashboard/Dashboard.js"],"sourcesContent":["import \"./Dashboard.css\";\r\nimport axios from \"axios\";\r\nimport CreateFolderModal from \"./CreateFolderModal\";\r\nimport CreateFormModal from \"./CreateFormModal\";\r\nimport DeleteFolder from \"./DeleteFolder\";\r\nimport DeleteForm from \"./DeleteForm\";\r\nimport Settings from \"./Settings\";\r\nimport ShareModal from \"./ShareModal\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\nconst Dashboard =  ( { onFormListClick }) => {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [modalType, setModalType] = useState(null);\r\n  const [isLightTheme, setIsLightTheme] = useState(false);\r\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\r\n  const [folders, setFolders] = useState([]);\r\n  const [forms, setForms] = useState([]);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [activeFolderIndex, setActiveFolderIndex] = useState(null);\r\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\r\n  const [isDeleteFormModalOpen, setIsDeleteFormModalOpen] = useState(false);\r\n  const [isSettingsOpen, setIsSettingsOpen] = useState(false);\r\n  const [isShareModalOpen, setIsShareModalOpen] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n\r\n  \r\n  useEffect(() => {\r\n    const fetchUsername = async () => {\r\n      try {\r\n        const token = localStorage.getItem(\"jwtToken\");\r\n        if (token) {\r\n          const response = await axios.get(\"https://server-txml.onrender.com/username\", {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          });\r\n          setUsername(response.data?.username || \"\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching username:\", error);\r\n      }\r\n    };\r\n    fetchUsername();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchFolders = async () => {\r\n      try {\r\n        const response = await axios.get(\"https://server-txml.onrender.com/api/folders\");\r\n        setFolders(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching folders:\", error);\r\n      }\r\n    };\r\n    fetchFolders();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchForms = async () => {\r\n      if (activeFolderIndex !== null) {\r\n        const folderId = folders[activeFolderIndex]._id;\r\n        try {\r\n          const response = await axios.get(`https://server-txml.onrender.com/api/forms/${folderId}`);\r\n          setForms(response.data);\r\n        } catch (error) {\r\n          console.error(\"Error fetching forms:\", error);\r\n        }\r\n      }\r\n    };\r\n    fetchForms();\r\n  }, [activeFolderIndex, folders]);\r\n\r\n  const openModal = (type) => {\r\n    setModalType(type);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n    setModalType(null);\r\n  };\r\n\r\n  const handleCreateFolder = async (folderName) => {\r\n    if (folderName.trim()) {\r\n      try {\r\n        const response = await axios.post(\"https://server-txml.onrender.com/api/folders\", { name: folderName.trim() });\r\n        setFolders((prevFolders) => [...prevFolders, response.data]);\r\n      } catch (error) {\r\n        if (error.response?.status === 409) {\r\n          alert(\"Folder name must be unique.\");\r\n        } else {\r\n          console.error(\"Error creating folder:\", error);\r\n          alert(\"Failed to create folder. Please try again.\");\r\n        }\r\n      }\r\n    }\r\n    closeModal();\r\n  };\r\n\r\n  const handleCreateForm = async (formName) => {\r\n    if (formName.trim()) {\r\n      try {\r\n        let response;\r\n        if (activeFolderIndex !== null) {\r\n          const folderId = folders[activeFolderIndex]._id;\r\n          response = await axios.post(\"https://server-txml.onrender.com/api/forms\", {\r\n            name: formName.trim(),\r\n            folderId,\r\n          });\r\n  \r\n          setFolders((prevFolders) => {\r\n            const updatedFolders = [...prevFolders];\r\n            updatedFolders[activeFolderIndex].forms.push(response.data);\r\n            return updatedFolders;\r\n          });\r\n        } else {\r\n          // Create the form globally if no folder is selected\r\n          response = await axios.post(\"https://server-txml.onrender.com/api/forms\", {\r\n            name: formName.trim(),\r\n          });\r\n  \r\n          // Add it to global form list\r\n          setForms((prevForms) => [...prevForms, response.data]);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error creating form:\", error);\r\n        alert(\"Failed to create form. Please try again.\");\r\n      }\r\n    }\r\n    closeModal();\r\n  };\r\n  \r\n\r\n  const toggleTheme = () => setIsLightTheme((prev) => !prev);\r\n  const toggleDropdown = () => setIsDropdownOpen((prev) => !prev);\r\n\r\n  const openDeleteFolderModal = (index) => {\r\n    setActiveFolderIndex(index); // Store the folder index to delete\r\n    setIsDeleteModalOpen(true); // Open the delete confirmation modal\r\n  };\r\n\r\n  const openDeleteFormModal = (index) => {\r\n    setActiveFolderIndex(index); // Store the form index to delete\r\n    setIsDeleteFormModalOpen(true); // Open the delete confirmation modal\r\n  };\r\n\r\n  const closeDeleteFolderModal = () => setIsDeleteModalOpen(false);\r\n  const closeDeleteFormModal = () => setIsDeleteFormModalOpen(false);\r\n\r\n  const confirmDeleteFolder = async () => {\r\n    if (activeFolderIndex !== null) {\r\n      try {\r\n        await axios.delete(`https://server-txml.onrender.com/api/folders/${folders[activeFolderIndex]._id}`); // Make API call to delete the folder\r\n        setFolders((prevFolders) => prevFolders.filter((_, i) => i !== activeFolderIndex)); // Update the front-end state\r\n      } catch (error) {\r\n        console.error(\"Error deleting folder:\", error);\r\n      }\r\n    }\r\n    closeDeleteFolderModal(); // Close the modal after deletion\r\n  };\r\n\r\n  const confirmDeleteForm = async () => {\r\n    if (activeFolderIndex !== null) {\r\n      try {\r\n        const formId = folders[activeFolderIndex]?.forms[activeFolderIndex]?._id; // Get the form ID\r\n        await axios.delete(`https://server-txml.onrender.com/api/forms/${formId}`); // Make API call to delete the form\r\n        setFolders((prevFolders) => {\r\n          const updatedFolders = [...prevFolders];\r\n          updatedFolders[activeFolderIndex].forms = updatedFolders[activeFolderIndex].forms.filter(\r\n            (form) => form._id !== formId\r\n          ); // Remove the form from the front-end state\r\n          return updatedFolders;\r\n        });\r\n      } catch (error) {\r\n        console.error(\"Error deleting form:\", error);\r\n      }\r\n    }\r\n    closeDeleteFormModal(); // Close the modal after deletion\r\n  };\r\n\r\n  const toggleFolderVisibility = async (index) => {\r\n    setActiveFolderIndex(activeFolderIndex === index ? null : index);\r\n    if (activeFolderIndex !== index) {\r\n      try {\r\n        const folderId = folders[index]._id;\r\n        const response = await axios.get(`https://server-txml.onrender.com/api/forms/${folderId}`);\r\n        setFolders((prevFolders) => {\r\n          const updatedFolders = [...prevFolders];\r\n          updatedFolders[index].forms = response.data;\r\n          return updatedFolders;\r\n        });\r\n      } catch (error) {\r\n        console.error(\"Error fetching forms:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`dashboard-container ${isLightTheme ? \"light\" : \"dark\"}`}>\r\n      {isSettingsOpen ? (\r\n        <Settings closeSettings={() => setIsSettingsOpen(false)} />\r\n      ) : (\r\n        <>\r\n          <nav className=\"navbar\">\r\n            <div className=\"logo\"></div>\r\n            <div className=\"workspace-container\">\r\n              <button className=\"workspace-button\" onClick={toggleDropdown}>\r\n                <span>{username ? `${username}'s workspace` : \"Loading...\"}</span>\r\n                <img className=\"dropdown-icon\" src=\"drop.png\" alt=\"Dropdown Icon\" />\r\n              </button>\r\n              {isDropdownOpen && (\r\n                <div className=\"dropdown-menu\">\r\n                  <button className=\"dropdown-item\" onClick={() => navigate(\"/settings\")}>\r\n                    Settings\r\n                  </button>\r\n                  <button className=\"dropdown-item logout\" onClick={() => navigate(\"/\")}>Log Out</button>\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div className=\"theme-toggle\">\r\n              <span>Light</span>\r\n              <label className=\"switch\">\r\n                <input type=\"checkbox\" checked={!isLightTheme} onChange={toggleTheme} />\r\n                <span className=\"slider\"></span>\r\n              </label>\r\n              <span>Dark</span>\r\n            </div>\r\n            <button className=\"share-button\" onClick={() => setIsShareModalOpen(true)}>\r\n  Share\r\n</button>\r\n\r\n{isShareModalOpen && <ShareModal isOpen={isShareModalOpen} onClose={() => setIsShareModalOpen(false)} />}\r\n          </nav>\r\n\r\n          <div className=\"Dashboard-content\">\r\n            <ul className=\"Create-folder-list\">\r\n              <li>\r\n                <button\r\n                  className={`create-folder ${activeFolderIndex !== null ? \"hidden\" : \"\"}`}\r\n                  onClick={() => openModal(\"folder\")}\r\n                >\r\n                  <img src=\"folder.png\" className=\"folder\" alt=\"Folder\" />\r\n                  Create a folder\r\n                </button>\r\n              </li>\r\n              <li>\r\n                <button\r\n                  className={`create-typebot ${activeFolderIndex !== null ? \"\" : \"hidden\"}`}\r\n                  onClick={() => openModal(\"form\")}\r\n                >\r\n                  <p>\r\n                    <span className=\"plus\">+</span> <br />\r\n                    Create a typebot\r\n                  </p>\r\n                </button>\r\n              </li>\r\n            </ul>\r\n\r\n            <ul className=\"Create-form-list\">\r\n              <li className=\"folder-list-li\">\r\n                <div className=\"folder-list\">\r\n                  {folders.map((folder, index) => (\r\n                    <div\r\n                      key={folder._id}\r\n                      className={`folder-item ${activeFolderIndex === index ? \"active-folder\" : \"\"}`}\r\n                    >\r\n                      <span onClick={() => toggleFolderVisibility(index)}>{folder.name}</span>\r\n                      <button\r\n                        className=\"delete-button\"\r\n                        onClick={() => openDeleteFolderModal(index)}\r\n                      >\r\n                        <img src=\"del.png\" alt=\"Delete\" />\r\n                      </button>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n                {/* {activeFolderIndex !== null && (\r\n                  <ul className=\"form-list\">\r\n                    {folders[activeFolderIndex]?.forms.map((form, idx) => (\r\n                      <div key={form._id} className=\"form-item\">\r\n                        <span>{form.name}</span>\r\n                        <button\r\n                          className=\"delete-button-form\"\r\n                          onClick={() => openDeleteFormModal(idx)}\r\n                        >\r\n                          <img src=\"del.png\" className=\"del-form\" alt=\"Delete\" />\r\n                        </button>\r\n                      </div>\r\n                    ))}\r\n                  </ul>\r\n                  \r\n                )} */}\r\n              </li>\r\n              {activeFolderIndex === null ? (\r\n  <li className=\"form-li\">\r\n    <div className=\"form-list\">\r\n      {forms.length === 0 ? (\r\n        <span></span>\r\n      ) : (\r\n        forms.map((form, index) => (\r\n          <button key={index} className=\"form-item\" onClick={() => navigate(\"/workspace\")}>\r\n            <span>{form.name}</span>\r\n            <button\r\n              className=\"delete-button-form\"\r\n              onClick={() => openDeleteFormModal(index)}\r\n            >\r\n              <img src=\"del.png\" className=\"del-form\" alt=\"Delete\" />\r\n            </button>\r\n          </button>\r\n        ))\r\n      )}\r\n    </div>\r\n  </li>\r\n) : (\r\n  <li className=\"folder-forms-li\">\r\n    <div className=\"folder-forms-list\">\r\n      {folders[activeFolderIndex]?.forms.map((form, index) => (\r\n        <button key={index} className=\"form-item\" onClick={() => navigate(\"/workspace\")}>\r\n          <span>{form.name}</span>\r\n          <button\r\n            className=\"delete-button-form\"\r\n            onClick={() => openDeleteFormModal(index)}\r\n          >\r\n            <img src=\"del.png\" className=\"del-form\" alt=\"Delete\" />\r\n          </button>\r\n        </button>\r\n      ))}\r\n    </div>\r\n  </li>\r\n)}\r\n\r\n            </ul>\r\n          </div>\r\n\r\n          {isModalOpen && modalType === \"folder\" && (\r\n            <CreateFolderModal closeModal={closeModal} onCreateFolder={handleCreateFolder} />\r\n          )}\r\n          {isModalOpen && modalType === \"form\" && (\r\n            <CreateFormModal closeModal={closeModal} onCreateForm={handleCreateForm} />\r\n          )}\r\n\r\n          {isDeleteModalOpen && (\r\n            <DeleteFolder closeModal={closeDeleteFolderModal} confirmDeleteFolder={confirmDeleteFolder} />\r\n          )}\r\n\r\n          {isDeleteFormModalOpen && (\r\n            <DeleteForm closeModal={closeDeleteFormModal} confirmDeleteForm={confirmDeleteForm} />\r\n          )}\r\n\r\n          {isShareModalOpen && <ShareModal closeShareModal={() => setIsShareModalOpen(false)} />}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}