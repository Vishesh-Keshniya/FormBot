{"ast":null,"code":"var _jsxFileName = \"D:\\\\Cuvette\\\\MERN\\\\Client\\\\form-builder\\\\src\\\\Components\\\\Dashboard\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Dashboard.css\";\nimport CreateFolderModal from \"./CreateFolderModal\";\nimport CreateFormModal from \"./CreateFormModal\";\nimport DeleteFolder from \"./DeleteFolder\";\nimport DeleteForm from \"./DeleteForm\";\nimport Settings from \"./Settings\";\nimport ShareModal from \"./ShareModal\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [modalType, setModalType] = useState(null);\n  const [isLightTheme, setIsLightTheme] = useState(false);\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [folders, setFolders] = useState([]); // Store folders and their respective forms\n  const [deleteFolderIndex, setDeleteFolderIndex] = useState(null);\n  const [deleteFormIndex, setDeleteFormIndex] = useState(null);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [isDeleteFormModalOpen, setIsDeleteFormModalOpen] = useState(false);\n  const [isSettingsOpen, setIsSettingsOpen] = useState(false);\n  const [isShareModalOpen, setIsShareModalOpen] = useState(false);\n  const [activeFolderIndex, setActiveFolderIndex] = useState(null); // Track active folder\n\n  const openModal = type => {\n    setModalType(type);\n    setIsModalOpen(true);\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setModalType(null);\n  };\n  const handleCreateFolder = folderName => {\n    if (folderName.trim()) {\n      const isDuplicate = folders.some(folder => folder.name === folderName.trim());\n      if (isDuplicate) {\n        alert(\"Folder name must be unique.\");\n        return;\n      }\n      setFolders([...folders, {\n        name: folderName.trim(),\n        forms: []\n      }]);\n    }\n    closeModal();\n  };\n  const handleCreateForm = (formName, folderIndex = null) => {\n    if (formName.trim() && folderIndex !== null) {\n      const updatedFolders = [...folders];\n      updatedFolders[folderIndex].forms.push({\n        name: formName.trim(),\n        fields: [] // New form with no fields by default\n      });\n      setFolders(updatedFolders);\n    }\n    closeModal();\n  };\n  const toggleTheme = () => {\n    setIsLightTheme(prevState => !prevState);\n  };\n  const toggleDropdown = () => {\n    setIsDropdownOpen(prevState => !prevState);\n  };\n  const handleDeleteFolder = index => {\n    const updatedFolders = folders.filter((_, i) => i !== index);\n    setFolders(updatedFolders);\n  };\n  const handleDeleteForm = (folderIndex, formIndex) => {\n    const updatedFolders = [...folders];\n    updatedFolders[folderIndex].forms.splice(formIndex, 1);\n    setFolders(updatedFolders);\n  };\n  const openDeleteFolderModal = index => {\n    setDeleteFolderIndex(index);\n    setIsDeleteModalOpen(true);\n  };\n  const openDeleteFormModal = (folderIndex, formIndex) => {\n    setDeleteFormIndex({\n      folderIndex,\n      formIndex\n    });\n    setIsDeleteFormModalOpen(true);\n  };\n  const closeDeleteFolderModal = () => {\n    setDeleteFolderIndex(null);\n    setIsDeleteModalOpen(false);\n  };\n  const closeDeleteFormModal = () => {\n    setDeleteFormIndex(null);\n    setIsDeleteFormModalOpen(false);\n  };\n  const confirmDeleteFolder = () => {\n    if (deleteFolderIndex !== null) {\n      handleDeleteFolder(deleteFolderIndex);\n    }\n    closeDeleteFolderModal();\n  };\n  const confirmDeleteForm = () => {\n    if (deleteFormIndex !== null) {\n      const {\n        folderIndex,\n        formIndex\n      } = deleteFormIndex;\n      handleDeleteForm(folderIndex, formIndex);\n    }\n    closeDeleteFormModal();\n  };\n  const openSettings = () => {\n    setIsSettingsOpen(true);\n  };\n  const closeSettings = () => {\n    setIsSettingsOpen(false);\n  };\n  const openShareModal = () => {\n    setIsShareModalOpen(true);\n  };\n  const closeShareModal = () => {\n    setIsShareModalOpen(false);\n  };\n\n  // Toggle the active folder index\n  const toggleFolderVisibility = index => {\n    setActiveFolderIndex(activeFolderIndex === index ? null : index);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `dashboard-container ${isLightTheme ? \"light\" : \"dark\"}`,\n    children: isSettingsOpen ? /*#__PURE__*/_jsxDEV(Settings, {\n      closeSettings: closeSettings\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"navbar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"workspace-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"workspace-button\",\n            onClick: toggleDropdown,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Dewank Rastogi's workspace\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"dropdown-icon\",\n              src: \"drop.png\",\n              alt: \"Dropdown Icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this), isDropdownOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dropdown-menu\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"dropdown-item\",\n              onClick: openSettings,\n              children: \"Settings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"dropdown-item logout\",\n              children: \"Log Out\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"theme-toggle\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Light\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"switch\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: !isLightTheme,\n              onChange: toggleTheme\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"slider\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Dark\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"share-button\",\n          onClick: openShareModal,\n          children: \"Share\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Dashboard-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"Create-folder-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"create-folder\",\n              onClick: () => openModal(\"folder\"),\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"folder.png\",\n                className: \"folder\",\n                alt: \"Folder\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 19\n              }, this), \"Create a folder\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"create-typebot\",\n              onClick: () => openModal(\"form\"),\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"plus\",\n                  children: \"+\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 21\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 53\n                }, this), \"Create a typebot\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"Create-form-list\",\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"folder-list-li\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"folder-list\",\n              children: folders.map((folder, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"folder-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  onClick: () => toggleFolderVisibility(index),\n                  children: folder.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"delete-button\",\n                  onClick: () => openDeleteFolderModal(index),\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: \"del.png\",\n                    alt: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 201,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 23\n                }, this), activeFolderIndex === index && /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: \"form-list\",\n                  children: folder.forms.map((form, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-item\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: form.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 208,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"delete-button-form\",\n                      onClick: () => openDeleteFormModal(index, idx),\n                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                        src: \"del.png\",\n                        className: \"del-form\",\n                        alt: \"Delete\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 213,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 209,\n                      columnNumber: 31\n                    }, this)]\n                  }, idx, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 207,\n                    columnNumber: 29\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 25\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this), isModalOpen && modalType === \"folder\" && /*#__PURE__*/_jsxDEV(CreateFolderModal, {\n        closeModal: closeModal,\n        isLightTheme: isLightTheme,\n        onCreateFolder: handleCreateFolder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 13\n      }, this), isModalOpen && modalType === \"form\" && /*#__PURE__*/_jsxDEV(CreateFormModal, {\n        closeModal: closeModal,\n        isLightTheme: isLightTheme,\n        onCreateForm: handleCreateForm,\n        folders: folders\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 13\n      }, this), isDeleteModalOpen && /*#__PURE__*/_jsxDEV(DeleteFolder, {\n        closeModal: closeDeleteFolderModal,\n        isLightTheme: isLightTheme,\n        onConfirm: confirmDeleteFolder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 13\n      }, this), isDeleteFormModalOpen && /*#__PURE__*/_jsxDEV(DeleteForm, {\n        closeModal: closeDeleteFormModal,\n        isLightTheme: isLightTheme,\n        onConfirm: confirmDeleteForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 13\n      }, this), isShareModalOpen && /*#__PURE__*/_jsxDEV(ShareModal, {\n        isOpen: isShareModalOpen,\n        onClose: closeShareModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"b0tcvQK95lwYNDFHXpvOi3gGcvo=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","CreateFolderModal","CreateFormModal","DeleteFolder","DeleteForm","Settings","ShareModal","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","isModalOpen","setIsModalOpen","modalType","setModalType","isLightTheme","setIsLightTheme","isDropdownOpen","setIsDropdownOpen","folders","setFolders","deleteFolderIndex","setDeleteFolderIndex","deleteFormIndex","setDeleteFormIndex","isDeleteModalOpen","setIsDeleteModalOpen","isDeleteFormModalOpen","setIsDeleteFormModalOpen","isSettingsOpen","setIsSettingsOpen","isShareModalOpen","setIsShareModalOpen","activeFolderIndex","setActiveFolderIndex","openModal","type","closeModal","handleCreateFolder","folderName","trim","isDuplicate","some","folder","name","alert","forms","handleCreateForm","formName","folderIndex","updatedFolders","push","fields","toggleTheme","prevState","toggleDropdown","handleDeleteFolder","index","filter","_","i","handleDeleteForm","formIndex","splice","openDeleteFolderModal","openDeleteFormModal","closeDeleteFolderModal","closeDeleteFormModal","confirmDeleteFolder","confirmDeleteForm","openSettings","closeSettings","openShareModal","closeShareModal","toggleFolderVisibility","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","checked","onChange","map","form","idx","onCreateFolder","onCreateForm","onConfirm","isOpen","onClose","_c","$RefreshReg$"],"sources":["D:/Cuvette/MERN/Client/form-builder/src/Components/Dashboard/Dashboard.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Dashboard.css\";\r\nimport CreateFolderModal from \"./CreateFolderModal\";\r\nimport CreateFormModal from \"./CreateFormModal\";\r\nimport DeleteFolder from \"./DeleteFolder\";\r\nimport DeleteForm from \"./DeleteForm\";\r\nimport Settings from \"./Settings\";\r\nimport ShareModal from \"./ShareModal\";\r\n\r\nconst Dashboard = () => {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [modalType, setModalType] = useState(null);\r\n  const [isLightTheme, setIsLightTheme] = useState(false);\r\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\r\n  const [folders, setFolders] = useState([]); // Store folders and their respective forms\r\n  const [deleteFolderIndex, setDeleteFolderIndex] = useState(null);\r\n  const [deleteFormIndex, setDeleteFormIndex] = useState(null);\r\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\r\n  const [isDeleteFormModalOpen, setIsDeleteFormModalOpen] = useState(false);\r\n  const [isSettingsOpen, setIsSettingsOpen] = useState(false);\r\n  const [isShareModalOpen, setIsShareModalOpen] = useState(false);\r\n  const [activeFolderIndex, setActiveFolderIndex] = useState(null); // Track active folder\r\n\r\n  const openModal = (type) => {\r\n    setModalType(type);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n    setModalType(null);\r\n  };\r\n\r\n  const handleCreateFolder = (folderName) => {\r\n    if (folderName.trim()) {\r\n      const isDuplicate = folders.some(folder => folder.name === folderName.trim());\r\n      if (isDuplicate) {\r\n        alert(\"Folder name must be unique.\");\r\n        return;\r\n      }\r\n      setFolders([...folders, { name: folderName.trim(), forms: [] }]);\r\n    }\r\n    closeModal();\r\n  };\r\n\r\n  const handleCreateForm = (formName, folderIndex = null) => {\r\n    if (formName.trim() && folderIndex !== null) {\r\n      const updatedFolders = [...folders];\r\n      updatedFolders[folderIndex].forms.push({\r\n        name: formName.trim(),\r\n        fields: [] // New form with no fields by default\r\n      });\r\n      setFolders(updatedFolders);\r\n    }\r\n    closeModal();\r\n  };\r\n\r\n  const toggleTheme = () => {\r\n    setIsLightTheme((prevState) => !prevState);\r\n  };\r\n\r\n  const toggleDropdown = () => {\r\n    setIsDropdownOpen((prevState) => !prevState);\r\n  };\r\n\r\n  const handleDeleteFolder = (index) => {\r\n    const updatedFolders = folders.filter((_, i) => i !== index);\r\n    setFolders(updatedFolders);\r\n  };\r\n\r\n  const handleDeleteForm = (folderIndex, formIndex) => {\r\n    const updatedFolders = [...folders];\r\n    updatedFolders[folderIndex].forms.splice(formIndex, 1);\r\n    setFolders(updatedFolders);\r\n  };\r\n\r\n  const openDeleteFolderModal = (index) => {\r\n    setDeleteFolderIndex(index);\r\n    setIsDeleteModalOpen(true);\r\n  };\r\n\r\n  const openDeleteFormModal = (folderIndex, formIndex) => {\r\n    setDeleteFormIndex({ folderIndex, formIndex });\r\n    setIsDeleteFormModalOpen(true);\r\n  };\r\n\r\n  const closeDeleteFolderModal = () => {\r\n    setDeleteFolderIndex(null);\r\n    setIsDeleteModalOpen(false);\r\n  };\r\n\r\n  const closeDeleteFormModal = () => {\r\n    setDeleteFormIndex(null);\r\n    setIsDeleteFormModalOpen(false);\r\n  };\r\n\r\n  const confirmDeleteFolder = () => {\r\n    if (deleteFolderIndex !== null) {\r\n      handleDeleteFolder(deleteFolderIndex);\r\n    }\r\n    closeDeleteFolderModal();\r\n  };\r\n\r\n  const confirmDeleteForm = () => {\r\n    if (deleteFormIndex !== null) {\r\n      const { folderIndex, formIndex } = deleteFormIndex;\r\n      handleDeleteForm(folderIndex, formIndex);\r\n    }\r\n    closeDeleteFormModal();\r\n  };\r\n\r\n  const openSettings = () => {\r\n    setIsSettingsOpen(true);\r\n  };\r\n\r\n  const closeSettings = () => {\r\n    setIsSettingsOpen(false);\r\n  };\r\n\r\n  const openShareModal = () => {\r\n    setIsShareModalOpen(true);\r\n  };\r\n\r\n  const closeShareModal = () => {\r\n    setIsShareModalOpen(false);\r\n  };\r\n\r\n  // Toggle the active folder index\r\n  const toggleFolderVisibility = (index) => {\r\n    setActiveFolderIndex(activeFolderIndex === index ? null : index);\r\n  };\r\n\r\n  return (\r\n    <div className={`dashboard-container ${isLightTheme ? \"light\" : \"dark\"}`}>\r\n      {isSettingsOpen ? (\r\n        <Settings closeSettings={closeSettings} />\r\n      ) : (\r\n        <>\r\n          <nav className=\"navbar\">\r\n            <div className=\"logo\"></div>\r\n            <div className=\"workspace-container\">\r\n              <button className=\"workspace-button\" onClick={toggleDropdown}>\r\n                <span>Dewank Rastogi's workspace</span>\r\n                <img className=\"dropdown-icon\" src=\"drop.png\" alt=\"Dropdown Icon\" />\r\n              </button>\r\n              {isDropdownOpen && (\r\n                <div className=\"dropdown-menu\">\r\n                  <button className=\"dropdown-item\" onClick={openSettings}>Settings</button>\r\n                  <button className=\"dropdown-item logout\">Log Out</button>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"theme-toggle\">\r\n              <span>Light</span>\r\n              <label className=\"switch\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={!isLightTheme}\r\n                  onChange={toggleTheme}\r\n                />\r\n                <span className=\"slider\"></span>\r\n              </label>\r\n              <span>Dark</span>\r\n            </div>\r\n            <button className=\"share-button\" onClick={openShareModal}>\r\n              Share\r\n            </button>\r\n          </nav>\r\n\r\n          <div className=\"Dashboard-content\">\r\n            {/* Create Folder Section */}\r\n            <ul className=\"Create-folder-list\">\r\n              <li>\r\n                <button className=\"create-folder\" onClick={() => openModal(\"folder\")}>\r\n                  <img src=\"folder.png\" className=\"folder\" alt=\"Folder\" />\r\n                  Create a folder\r\n                </button>\r\n              </li>\r\n              <li>\r\n                <button className=\"create-typebot\" onClick={() => openModal(\"form\")}>\r\n                  <p>\r\n                    <span className=\"plus\">+</span> <br />\r\n                    Create a typebot\r\n                  </p>\r\n                </button>\r\n              </li>\r\n            </ul>\r\n\r\n            {/* Folder and Form List */}\r\n            <ul className=\"Create-form-list\">\r\n              <li className=\"folder-list-li\">\r\n                <div className=\"folder-list\">\r\n                  {folders.map((folder, index) => (\r\n                    <div key={index} className=\"folder-item\">\r\n                      <span onClick={() => toggleFolderVisibility(index)}>{folder.name}</span>\r\n                      <button\r\n                        className=\"delete-button\"\r\n                        onClick={() => openDeleteFolderModal(index)}\r\n                      >\r\n                        <img src=\"del.png\" alt=\"Delete\" />\r\n                      </button>\r\n                      {/* Show form list only for the active folder */}\r\n                      {activeFolderIndex === index && (\r\n                        <ul className=\"form-list\">\r\n                          {folder.forms.map((form, idx) => (\r\n                            <div key={idx} className=\"form-item\">\r\n                              <span>{form.name}</span>\r\n                              <button\r\n                                className=\"delete-button-form\"\r\n                                onClick={() => openDeleteFormModal(index, idx)}\r\n                              >\r\n                                <img src=\"del.png\" className=\"del-form\" alt=\"Delete\" />\r\n                              </button>\r\n                            </div>\r\n                          ))}\r\n                        </ul>\r\n                      )}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n\r\n          {isModalOpen && modalType === \"folder\" && (\r\n            <CreateFolderModal\r\n              closeModal={closeModal}\r\n              isLightTheme={isLightTheme}\r\n              onCreateFolder={handleCreateFolder}\r\n            />\r\n          )}\r\n          {isModalOpen && modalType === \"form\" && (\r\n            <CreateFormModal\r\n              closeModal={closeModal}\r\n              isLightTheme={isLightTheme}\r\n              onCreateForm={handleCreateForm}\r\n              folders={folders}\r\n            />\r\n          )}\r\n          {isDeleteModalOpen && (\r\n            <DeleteFolder\r\n              closeModal={closeDeleteFolderModal}\r\n              isLightTheme={isLightTheme}\r\n              onConfirm={confirmDeleteFolder}\r\n            />\r\n          )}\r\n          {isDeleteFormModalOpen && (\r\n            <DeleteForm\r\n              closeModal={closeDeleteFormModal}\r\n              isLightTheme={isLightTheme}\r\n              onConfirm={confirmDeleteForm}\r\n            />\r\n          )}\r\n          {isShareModalOpen && (\r\n            <ShareModal isOpen={isShareModalOpen} onClose={closeShareModal} />\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}