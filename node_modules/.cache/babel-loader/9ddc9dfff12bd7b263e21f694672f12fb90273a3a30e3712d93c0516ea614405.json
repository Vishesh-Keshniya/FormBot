{"ast":null,"code":"var _jsxFileName = \"D:\\\\Cuvette\\\\MERN\\\\Client\\\\form-builder\\\\src\\\\Components\\\\Dashboard\\\\Dashboard.js\",\n  _s2 = $RefreshSig$();\nimport \"./Dashboard.css\";\nimport axios from \"axios\";\nimport CreateFolderModal from \"./CreateFolderModal\";\nimport CreateFormModal from \"./CreateFormModal\";\nimport DeleteFolder from \"./DeleteFolder\";\nimport DeleteForm from \"./DeleteForm\";\nimport Settings from \"./Settings\";\nimport ShareModal from \"./ShareModal\";\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [modalType, setModalType] = useState(null);\n  const [isLightTheme, setIsLightTheme] = useState(false);\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [folders, setFolders] = useState([]);\n  const [forms, setForms] = useState([]);\n  const [username, setUsername] = useState(\"\");\n  const [activeFolderIndex, setActiveFolderIndex] = useState(null);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [isDeleteFormModalOpen, setIsDeleteFormModalOpen] = useState(false);\n  const [isSettingsOpen, setIsSettingsOpen] = useState(false);\n  const [isShareModalOpen, setIsShareModalOpen] = useState(false);\n  const Dashboard = () => {\n    _s();\n    var _folders$activeFolder3;\n    const navigate = useNavigate(); // Initialize useNavigate\n\n    const handleRedirectToWorkspace = () => {\n      navigate(\"/workspace\"); // Redirect to the workspace page\n    };\n    useEffect(() => {\n      const fetchUsername = async () => {\n        try {\n          const token = localStorage.getItem(\"jwtToken\");\n          if (token) {\n            var _response$data;\n            const response = await axios.get(\"http://localhost:8000/username\", {\n              headers: {\n                Authorization: `Bearer ${token}`\n              }\n            });\n            setUsername(((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.username) || \"\");\n          }\n        } catch (error) {\n          console.error(\"Error fetching username:\", error);\n        }\n      };\n      fetchUsername();\n    }, []);\n    useEffect(() => {\n      const fetchFolders = async () => {\n        try {\n          const response = await axios.get(\"http://localhost:8000/api/folders\");\n          setFolders(response.data);\n        } catch (error) {\n          console.error(\"Error fetching folders:\", error);\n        }\n      };\n      fetchFolders();\n    }, []);\n    useEffect(() => {\n      const fetchForms = async () => {\n        if (activeFolderIndex !== null) {\n          const folderId = folders[activeFolderIndex]._id;\n          try {\n            const response = await axios.get(`http://localhost:8000/api/forms/${folderId}`);\n            setForms(response.data);\n          } catch (error) {\n            console.error(\"Error fetching forms:\", error);\n          }\n        }\n      };\n      fetchForms();\n    }, [activeFolderIndex, folders]);\n    const openModal = type => {\n      setModalType(type);\n      setIsModalOpen(true);\n    };\n    const closeModal = () => {\n      setIsModalOpen(false);\n      setModalType(null);\n    };\n    const handleCreateFolder = async folderName => {\n      if (folderName.trim()) {\n        try {\n          const response = await axios.post(\"http://localhost:8000/api/folders\", {\n            name: folderName.trim()\n          });\n          setFolders(prevFolders => [...prevFolders, response.data]);\n        } catch (error) {\n          var _error$response;\n          if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 409) {\n            alert(\"Folder name must be unique.\");\n          } else {\n            console.error(\"Error creating folder:\", error);\n            alert(\"Failed to create folder. Please try again.\");\n          }\n        }\n      }\n      closeModal();\n    };\n    const handleCreateForm = async formName => {\n      if (formName.trim()) {\n        try {\n          let response;\n          if (activeFolderIndex !== null) {\n            const folderId = folders[activeFolderIndex]._id;\n            response = await axios.post(\"http://localhost:8000/api/forms\", {\n              name: formName.trim(),\n              folderId\n            });\n            setFolders(prevFolders => {\n              const updatedFolders = [...prevFolders];\n              updatedFolders[activeFolderIndex].forms.push(response.data);\n              return updatedFolders;\n            });\n          } else {\n            // Create the form globally if no folder is selected\n            response = await axios.post(\"http://localhost:8000/api/forms\", {\n              name: formName.trim()\n            });\n\n            // Add it to global form list\n            setForms(prevForms => [...prevForms, response.data]);\n          }\n        } catch (error) {\n          console.error(\"Error creating form:\", error);\n          alert(\"Failed to create form. Please try again.\");\n        }\n      }\n      closeModal();\n    };\n    const toggleTheme = () => setIsLightTheme(prev => !prev);\n    const toggleDropdown = () => setIsDropdownOpen(prev => !prev);\n    const openDeleteFolderModal = index => {\n      setActiveFolderIndex(index); // Store the folder index to delete\n      setIsDeleteModalOpen(true); // Open the delete confirmation modal\n    };\n    const openDeleteFormModal = index => {\n      setActiveFolderIndex(index); // Store the form index to delete\n      setIsDeleteFormModalOpen(true); // Open the delete confirmation modal\n    };\n    const closeDeleteFolderModal = () => setIsDeleteModalOpen(false);\n    const closeDeleteFormModal = () => setIsDeleteFormModalOpen(false);\n    const confirmDeleteFolder = async () => {\n      if (activeFolderIndex !== null) {\n        try {\n          await axios.delete(`http://localhost:8000/api/folders/${folders[activeFolderIndex]._id}`); // Make API call to delete the folder\n          setFolders(prevFolders => prevFolders.filter((_, i) => i !== activeFolderIndex)); // Update the front-end state\n        } catch (error) {\n          console.error(\"Error deleting folder:\", error);\n        }\n      }\n      closeDeleteFolderModal(); // Close the modal after deletion\n    };\n    const confirmDeleteForm = async () => {\n      if (activeFolderIndex !== null) {\n        try {\n          var _folders$activeFolder, _folders$activeFolder2;\n          const formId = (_folders$activeFolder = folders[activeFolderIndex]) === null || _folders$activeFolder === void 0 ? void 0 : (_folders$activeFolder2 = _folders$activeFolder.forms[activeFolderIndex]) === null || _folders$activeFolder2 === void 0 ? void 0 : _folders$activeFolder2._id; // Get the form ID\n          await axios.delete(`http://localhost:8000/api/forms/${formId}`); // Make API call to delete the form\n          setFolders(prevFolders => {\n            const updatedFolders = [...prevFolders];\n            updatedFolders[activeFolderIndex].forms = updatedFolders[activeFolderIndex].forms.filter(form => form._id !== formId); // Remove the form from the front-end state\n            return updatedFolders;\n          });\n        } catch (error) {\n          console.error(\"Error deleting form:\", error);\n        }\n      }\n      closeDeleteFormModal(); // Close the modal after deletion\n    };\n    const toggleFolderVisibility = async index => {\n      setActiveFolderIndex(activeFolderIndex === index ? null : index);\n      if (activeFolderIndex !== index) {\n        try {\n          const folderId = folders[index]._id;\n          const response = await axios.get(`http://localhost:8000/api/forms/${folderId}`);\n          setFolders(prevFolders => {\n            const updatedFolders = [...prevFolders];\n            updatedFolders[index].forms = response.data;\n            return updatedFolders;\n          });\n        } catch (error) {\n          console.error(\"Error fetching forms:\", error);\n        }\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `dashboard-container ${isLightTheme ? \"light\" : \"dark\"}`,\n      children: isSettingsOpen ? /*#__PURE__*/_jsxDEV(Settings, {\n        closeSettings: () => setIsSettingsOpen(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n          className: \"navbar\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"workspace-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"workspace-button\",\n              onClick: toggleDropdown,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: username ? `${username}'s workspace` : \"Loading...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"dropdown-icon\",\n                src: \"drop.png\",\n                alt: \"Dropdown Icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this), isDropdownOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dropdown-menu\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"dropdown-item\",\n                onClick: () => setIsSettingsOpen(true),\n                children: \"Settings\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"dropdown-item logout\",\n                children: \"Log Out\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"theme-toggle\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Light\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"switch\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: !isLightTheme,\n                onChange: toggleTheme\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"slider\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Dark\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"share-button\",\n            onClick: () => setIsShareModalOpen(true),\n            children: \"Share\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Dashboard-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"Create-folder-list\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: `create-folder ${activeFolderIndex !== null ? \"hidden\" : \"\"}`,\n                onClick: () => openModal(\"folder\"),\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: \"folder.png\",\n                  className: \"folder\",\n                  alt: \"Folder\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 19\n                }, this), \"Create a folder\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: `create-typebot ${activeFolderIndex !== null ? \"\" : \"hidden\"}`,\n                onClick: () => openModal(\"form\"),\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"plus\",\n                    children: \"+\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 255,\n                    columnNumber: 21\n                  }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 255,\n                    columnNumber: 53\n                  }, this), \"Create a typebot\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"Create-form-list\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"folder-list-li\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"folder-list\",\n                children: folders.map((folder, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `folder-item ${activeFolderIndex === index ? \"active-folder\" : \"\"}`,\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    onClick: () => toggleFolderVisibility(index),\n                    children: folder.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 270,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"delete-button\",\n                    onClick: () => openDeleteFolderModal(index),\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: \"del.png\",\n                      alt: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 275,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 271,\n                    columnNumber: 23\n                  }, this)]\n                }, folder._id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 15\n            }, this), activeFolderIndex === null ? /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"form-li\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-list\",\n                children: forms.length === 0 ? /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"No forms available\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 9\n                }, this) : forms.map((form, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"form-item\",\n                  onClick: handleRedirectToWorkspace,\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: form.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 305,\n                    columnNumber: 13\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"delete-button-form\",\n                    onClick: () => openDeleteFormModal(index),\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: \"del.png\",\n                      className: \"del-form\",\n                      alt: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 310,\n                      columnNumber: 15\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 306,\n                    columnNumber: 13\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 11\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 5\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 3\n            }, this) : /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"folder-forms-li\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"folder-forms-list\",\n                children: (_folders$activeFolder3 = folders[activeFolderIndex]) === null || _folders$activeFolder3 === void 0 ? void 0 : _folders$activeFolder3.forms.map((form, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"form-item\",\n                  onClick: handleRedirectToWorkspace,\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: form.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 322,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"delete-button-form\",\n                    onClick: () => openDeleteFormModal(index),\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: \"del.png\",\n                      className: \"del-form\",\n                      alt: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 327,\n                      columnNumber: 13\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 323,\n                    columnNumber: 11\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 9\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 5\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 3\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), isModalOpen && modalType === \"folder\" && /*#__PURE__*/_jsxDEV(CreateFolderModal, {\n          closeModal: closeModal,\n          onCreateFolder: handleCreateFolder\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 13\n        }, this), isModalOpen && modalType === \"form\" && /*#__PURE__*/_jsxDEV(CreateFormModal, {\n          closeModal: closeModal,\n          onCreateForm: handleCreateForm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 13\n        }, this), isDeleteModalOpen && /*#__PURE__*/_jsxDEV(DeleteFolder, {\n          closeModal: closeDeleteFolderModal,\n          confirmDeleteFolder: confirmDeleteFolder\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 13\n        }, this), isDeleteFormModalOpen && /*#__PURE__*/_jsxDEV(DeleteForm, {\n          closeModal: closeDeleteFormModal,\n          confirmDeleteForm: confirmDeleteForm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 13\n        }, this), isShareModalOpen && /*#__PURE__*/_jsxDEV(ShareModal, {\n          closeShareModal: () => setIsShareModalOpen(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 5\n    }, this);\n  };\n  _s(Dashboard, \"/1Hp9hHqcS5W0bb7nO7ceYbX5U8=\", false, function () {\n    return [useNavigate];\n  });\n};\n_s2(Dashboard, \"qFGQ8g6YLRR4Y3hTAJEtjTXdwis=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["axios","CreateFolderModal","CreateFormModal","DeleteFolder","DeleteForm","Settings","ShareModal","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s2","_s","$RefreshSig$","isModalOpen","setIsModalOpen","modalType","setModalType","isLightTheme","setIsLightTheme","isDropdownOpen","setIsDropdownOpen","folders","setFolders","forms","setForms","username","setUsername","activeFolderIndex","setActiveFolderIndex","isDeleteModalOpen","setIsDeleteModalOpen","isDeleteFormModalOpen","setIsDeleteFormModalOpen","isSettingsOpen","setIsSettingsOpen","isShareModalOpen","setIsShareModalOpen","_folders$activeFolder3","navigate","handleRedirectToWorkspace","fetchUsername","token","localStorage","getItem","_response$data","response","get","headers","Authorization","data","error","console","fetchFolders","fetchForms","folderId","_id","openModal","type","closeModal","handleCreateFolder","folderName","trim","post","name","prevFolders","_error$response","status","alert","handleCreateForm","formName","updatedFolders","push","prevForms","toggleTheme","prev","toggleDropdown","openDeleteFolderModal","index","openDeleteFormModal","closeDeleteFolderModal","closeDeleteFormModal","confirmDeleteFolder","delete","filter","_","i","confirmDeleteForm","_folders$activeFolder","_folders$activeFolder2","formId","form","toggleFolderVisibility","className","children","closeSettings","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","checked","onChange","map","folder","length","onCreateFolder","onCreateForm","closeShareModal","_c","$RefreshReg$"],"sources":["D:/Cuvette/MERN/Client/form-builder/src/Components/Dashboard/Dashboard.js"],"sourcesContent":["import \"./Dashboard.css\";\r\nimport axios from \"axios\";\r\nimport CreateFolderModal from \"./CreateFolderModal\";\r\nimport CreateFormModal from \"./CreateFormModal\";\r\nimport DeleteFolder from \"./DeleteFolder\";\r\nimport DeleteForm from \"./DeleteForm\";\r\nimport Settings from \"./Settings\";\r\nimport ShareModal from \"./ShareModal\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Dashboard = () => {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [modalType, setModalType] = useState(null);\r\n  const [isLightTheme, setIsLightTheme] = useState(false);\r\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\r\n  const [folders, setFolders] = useState([]);\r\n  const [forms, setForms] = useState([]);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [activeFolderIndex, setActiveFolderIndex] = useState(null);\r\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\r\n  const [isDeleteFormModalOpen, setIsDeleteFormModalOpen] = useState(false);\r\n  const [isSettingsOpen, setIsSettingsOpen] = useState(false);\r\n  const [isShareModalOpen, setIsShareModalOpen] = useState(false);\r\n\r\n  const Dashboard = () => {\r\n    const navigate = useNavigate(); // Initialize useNavigate\r\n  \r\n    const handleRedirectToWorkspace = () => {\r\n      navigate(\"/workspace\"); // Redirect to the workspace page\r\n    };\r\n  \r\n\r\n  useEffect(() => {\r\n    const fetchUsername = async () => {\r\n      try {\r\n        const token = localStorage.getItem(\"jwtToken\");\r\n        if (token) {\r\n          const response = await axios.get(\"http://localhost:8000/username\", {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          });\r\n          setUsername(response.data?.username || \"\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching username:\", error);\r\n      }\r\n    };\r\n    fetchUsername();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchFolders = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:8000/api/folders\");\r\n        setFolders(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching folders:\", error);\r\n      }\r\n    };\r\n    fetchFolders();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchForms = async () => {\r\n      if (activeFolderIndex !== null) {\r\n        const folderId = folders[activeFolderIndex]._id;\r\n        try {\r\n          const response = await axios.get(`http://localhost:8000/api/forms/${folderId}`);\r\n          setForms(response.data);\r\n        } catch (error) {\r\n          console.error(\"Error fetching forms:\", error);\r\n        }\r\n      }\r\n    };\r\n    fetchForms();\r\n  }, [activeFolderIndex, folders]);\r\n\r\n  const openModal = (type) => {\r\n    setModalType(type);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n    setModalType(null);\r\n  };\r\n\r\n  const handleCreateFolder = async (folderName) => {\r\n    if (folderName.trim()) {\r\n      try {\r\n        const response = await axios.post(\"http://localhost:8000/api/folders\", { name: folderName.trim() });\r\n        setFolders((prevFolders) => [...prevFolders, response.data]);\r\n      } catch (error) {\r\n        if (error.response?.status === 409) {\r\n          alert(\"Folder name must be unique.\");\r\n        } else {\r\n          console.error(\"Error creating folder:\", error);\r\n          alert(\"Failed to create folder. Please try again.\");\r\n        }\r\n      }\r\n    }\r\n    closeModal();\r\n  };\r\n\r\n  const handleCreateForm = async (formName) => {\r\n    if (formName.trim()) {\r\n      try {\r\n        let response;\r\n        if (activeFolderIndex !== null) {\r\n          const folderId = folders[activeFolderIndex]._id;\r\n          response = await axios.post(\"http://localhost:8000/api/forms\", {\r\n            name: formName.trim(),\r\n            folderId,\r\n          });\r\n  \r\n          setFolders((prevFolders) => {\r\n            const updatedFolders = [...prevFolders];\r\n            updatedFolders[activeFolderIndex].forms.push(response.data);\r\n            return updatedFolders;\r\n          });\r\n        } else {\r\n          // Create the form globally if no folder is selected\r\n          response = await axios.post(\"http://localhost:8000/api/forms\", {\r\n            name: formName.trim(),\r\n          });\r\n  \r\n          // Add it to global form list\r\n          setForms((prevForms) => [...prevForms, response.data]);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error creating form:\", error);\r\n        alert(\"Failed to create form. Please try again.\");\r\n      }\r\n    }\r\n    closeModal();\r\n  };\r\n  \r\n\r\n  const toggleTheme = () => setIsLightTheme((prev) => !prev);\r\n  const toggleDropdown = () => setIsDropdownOpen((prev) => !prev);\r\n\r\n  const openDeleteFolderModal = (index) => {\r\n    setActiveFolderIndex(index); // Store the folder index to delete\r\n    setIsDeleteModalOpen(true); // Open the delete confirmation modal\r\n  };\r\n\r\n  const openDeleteFormModal = (index) => {\r\n    setActiveFolderIndex(index); // Store the form index to delete\r\n    setIsDeleteFormModalOpen(true); // Open the delete confirmation modal\r\n  };\r\n\r\n  const closeDeleteFolderModal = () => setIsDeleteModalOpen(false);\r\n  const closeDeleteFormModal = () => setIsDeleteFormModalOpen(false);\r\n\r\n  const confirmDeleteFolder = async () => {\r\n    if (activeFolderIndex !== null) {\r\n      try {\r\n        await axios.delete(`http://localhost:8000/api/folders/${folders[activeFolderIndex]._id}`); // Make API call to delete the folder\r\n        setFolders((prevFolders) => prevFolders.filter((_, i) => i !== activeFolderIndex)); // Update the front-end state\r\n      } catch (error) {\r\n        console.error(\"Error deleting folder:\", error);\r\n      }\r\n    }\r\n    closeDeleteFolderModal(); // Close the modal after deletion\r\n  };\r\n\r\n  const confirmDeleteForm = async () => {\r\n    if (activeFolderIndex !== null) {\r\n      try {\r\n        const formId = folders[activeFolderIndex]?.forms[activeFolderIndex]?._id; // Get the form ID\r\n        await axios.delete(`http://localhost:8000/api/forms/${formId}`); // Make API call to delete the form\r\n        setFolders((prevFolders) => {\r\n          const updatedFolders = [...prevFolders];\r\n          updatedFolders[activeFolderIndex].forms = updatedFolders[activeFolderIndex].forms.filter(\r\n            (form) => form._id !== formId\r\n          ); // Remove the form from the front-end state\r\n          return updatedFolders;\r\n        });\r\n      } catch (error) {\r\n        console.error(\"Error deleting form:\", error);\r\n      }\r\n    }\r\n    closeDeleteFormModal(); // Close the modal after deletion\r\n  };\r\n\r\n  const toggleFolderVisibility = async (index) => {\r\n    setActiveFolderIndex(activeFolderIndex === index ? null : index);\r\n    if (activeFolderIndex !== index) {\r\n      try {\r\n        const folderId = folders[index]._id;\r\n        const response = await axios.get(`http://localhost:8000/api/forms/${folderId}`);\r\n        setFolders((prevFolders) => {\r\n          const updatedFolders = [...prevFolders];\r\n          updatedFolders[index].forms = response.data;\r\n          return updatedFolders;\r\n        });\r\n      } catch (error) {\r\n        console.error(\"Error fetching forms:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`dashboard-container ${isLightTheme ? \"light\" : \"dark\"}`}>\r\n      {isSettingsOpen ? (\r\n        <Settings closeSettings={() => setIsSettingsOpen(false)} />\r\n      ) : (\r\n        <>\r\n          <nav className=\"navbar\">\r\n            <div className=\"logo\"></div>\r\n            <div className=\"workspace-container\">\r\n              <button className=\"workspace-button\" onClick={toggleDropdown}>\r\n                <span>{username ? `${username}'s workspace` : \"Loading...\"}</span>\r\n                <img className=\"dropdown-icon\" src=\"drop.png\" alt=\"Dropdown Icon\" />\r\n              </button>\r\n              {isDropdownOpen && (\r\n                <div className=\"dropdown-menu\">\r\n                  <button className=\"dropdown-item\" onClick={() => setIsSettingsOpen(true)}>\r\n                    Settings\r\n                  </button>\r\n                  <button className=\"dropdown-item logout\">Log Out</button>\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div className=\"theme-toggle\">\r\n              <span>Light</span>\r\n              <label className=\"switch\">\r\n                <input type=\"checkbox\" checked={!isLightTheme} onChange={toggleTheme} />\r\n                <span className=\"slider\"></span>\r\n              </label>\r\n              <span>Dark</span>\r\n            </div>\r\n            <button className=\"share-button\" onClick={() => setIsShareModalOpen(true)}>\r\n              Share\r\n            </button>\r\n          </nav>\r\n\r\n          <div className=\"Dashboard-content\">\r\n            <ul className=\"Create-folder-list\">\r\n              <li>\r\n                <button\r\n                  className={`create-folder ${activeFolderIndex !== null ? \"hidden\" : \"\"}`}\r\n                  onClick={() => openModal(\"folder\")}\r\n                >\r\n                  <img src=\"folder.png\" className=\"folder\" alt=\"Folder\" />\r\n                  Create a folder\r\n                </button>\r\n              </li>\r\n              <li>\r\n                <button\r\n                  className={`create-typebot ${activeFolderIndex !== null ? \"\" : \"hidden\"}`}\r\n                  onClick={() => openModal(\"form\")}\r\n                >\r\n                  <p>\r\n                    <span className=\"plus\">+</span> <br />\r\n                    Create a typebot\r\n                  </p>\r\n                </button>\r\n              </li>\r\n            </ul>\r\n\r\n            <ul className=\"Create-form-list\">\r\n              <li className=\"folder-list-li\">\r\n                <div className=\"folder-list\">\r\n                  {folders.map((folder, index) => (\r\n                    <div\r\n                      key={folder._id}\r\n                      className={`folder-item ${activeFolderIndex === index ? \"active-folder\" : \"\"}`}\r\n                    >\r\n                      <span onClick={() => toggleFolderVisibility(index)}>{folder.name}</span>\r\n                      <button\r\n                        className=\"delete-button\"\r\n                        onClick={() => openDeleteFolderModal(index)}\r\n                      >\r\n                        <img src=\"del.png\" alt=\"Delete\" />\r\n                      </button>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n                {/* {activeFolderIndex !== null && (\r\n                  <ul className=\"form-list\">\r\n                    {folders[activeFolderIndex]?.forms.map((form, idx) => (\r\n                      <div key={form._id} className=\"form-item\">\r\n                        <span>{form.name}</span>\r\n                        <button\r\n                          className=\"delete-button-form\"\r\n                          onClick={() => openDeleteFormModal(idx)}\r\n                        >\r\n                          <img src=\"del.png\" className=\"del-form\" alt=\"Delete\" />\r\n                        </button>\r\n                      </div>\r\n                    ))}\r\n                  </ul>\r\n                  \r\n                )} */}\r\n              </li>\r\n              {activeFolderIndex === null ? (\r\n  <li className=\"form-li\">\r\n    <div className=\"form-list\">\r\n      {forms.length === 0 ? (\r\n        <span>No forms available</span>\r\n      ) : (\r\n        forms.map((form, index) => (\r\n          <button key={index} className=\"form-item\"  onClick={handleRedirectToWorkspace}>\r\n            <span>{form.name}</span>\r\n            <button\r\n              className=\"delete-button-form\"\r\n              onClick={() => openDeleteFormModal(index)}\r\n            >\r\n              <img src=\"del.png\" className=\"del-form\" alt=\"Delete\" />\r\n            </button>\r\n          </button>\r\n        ))\r\n      )}\r\n    </div>\r\n  </li>\r\n) : (\r\n  <li className=\"folder-forms-li\">\r\n    <div className=\"folder-forms-list\">\r\n      {folders[activeFolderIndex]?.forms.map((form, index) => (\r\n        <button key={index} className=\"form-item\"  onClick={handleRedirectToWorkspace}>\r\n          <span>{form.name}</span>\r\n          <button\r\n            className=\"delete-button-form\"\r\n            onClick={() => openDeleteFormModal(index)}\r\n          >\r\n            <img src=\"del.png\" className=\"del-form\" alt=\"Delete\" />\r\n          </button>\r\n        </button>\r\n      ))}\r\n    </div>\r\n  </li>\r\n)}\r\n\r\n            </ul>\r\n          </div>\r\n\r\n          {isModalOpen && modalType === \"folder\" && (\r\n            <CreateFolderModal closeModal={closeModal} onCreateFolder={handleCreateFolder} />\r\n          )}\r\n          {isModalOpen && modalType === \"form\" && (\r\n            <CreateFormModal closeModal={closeModal} onCreateForm={handleCreateForm} />\r\n          )}\r\n\r\n          {isDeleteModalOpen && (\r\n            <DeleteFolder closeModal={closeDeleteFolderModal} confirmDeleteFolder={confirmDeleteFolder} />\r\n          )}\r\n\r\n          {isDeleteFormModalOpen && (\r\n            <DeleteForm closeModal={closeDeleteFormModal} confirmDeleteForm={confirmDeleteForm} />\r\n          )}\r\n\r\n          {isShareModalOpen && <ShareModal closeShareModal={() => setIsShareModalOpen(false)} />}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n}\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}