{"ast":null,"code":"var _jsxFileName = \"D:\\\\Cuvette\\\\Final evaluation\\\\form-builder\\\\src\\\\Components\\\\Dashboard\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Dashboard.css\";\nimport CreateFolderModal from \"./CreateFolderModal\";\nimport CreateFormModal from \"./CreateFormModal\";\nimport DeleteFolder from \"./DeleteFolder\";\nimport DeleteForm from \"./DeleteForm\";\nimport Settings from \"./Settings\";\nimport ShareModal from \"./ShareModal\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [modalType, setModalType] = useState(null);\n  const [isLightTheme, setIsLightTheme] = useState(false);\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [folders, setFolders] = useState([]); // Array of folder names\n  const [folderForms, setFolderForms] = useState({}); // Mapping of folder to forms\n  const [deleteFolderIndex, setDeleteFolderIndex] = useState(null);\n  const [deleteFormIndex, setDeleteFormIndex] = useState(null);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [isDeleteFormModalOpen, setIsDeleteFormModalOpen] = useState(false);\n  const [isSettingsOpen, setIsSettingsOpen] = useState(false);\n  const [isShareModalOpen, setIsShareModalOpen] = useState(false);\n  const [selectedFolder, setSelectedFolder] = useState(null); // Currently selected folder for creating forms\n\n  const openModal = type => {\n    setModalType(type);\n    setIsModalOpen(true);\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setModalType(null);\n  };\n  const handleCreateFolder = folderName => {\n    if (folderName.trim()) {\n      setFolders([...folders, folderName.trim()]);\n    }\n    closeModal();\n  };\n  const handleCreateForm = formName => {\n    if (formName.trim() && selectedFolder) {\n      // Add form to the selected folder\n      const updatedFolderForms = {\n        ...folderForms,\n        [selectedFolder]: [...(folderForms[selectedFolder] || []), formName.trim()]\n      };\n      setFolderForms(updatedFolderForms);\n    }\n    closeModal();\n  };\n  const toggleTheme = () => {\n    setIsLightTheme(prevState => !prevState);\n  };\n  const toggleDropdown = () => {\n    setIsDropdownOpen(prevState => !prevState);\n  };\n  const handleDeleteFolder = index => {\n    const folderName = folders[index];\n    const updatedFolders = folders.filter((_, i) => i !== index);\n    const updatedFolderForms = {\n      ...folderForms\n    };\n    delete updatedFolderForms[folderName]; // Remove folder's forms\n\n    setFolders(updatedFolders);\n    setFolderForms(updatedFolderForms);\n  };\n  const handleDeleteForm = (folderName, formIndex) => {\n    const updatedFolderForms = {\n      ...folderForms,\n      [folderName]: folderForms[folderName].filter((_, i) => i !== formIndex)\n    };\n    setFolderForms(updatedFolderForms);\n  };\n  const openDeleteFolderModal = index => {\n    setDeleteFolderIndex(index);\n    setIsDeleteModalOpen(true);\n  };\n  const openDeleteFormModal = (folderName, formIndex) => {\n    setDeleteFormIndex(formIndex);\n    setSelectedFolder(folderName);\n    setIsDeleteFormModalOpen(true);\n  };\n  const closeDeleteFolderModal = () => {\n    setDeleteFolderIndex(null);\n    setIsDeleteModalOpen(false);\n  };\n  const closeDeleteFormModal = () => {\n    setDeleteFormIndex(null);\n    setIsDeleteFormModalOpen(false);\n  };\n  const confirmDeleteFolder = () => {\n    if (deleteFolderIndex !== null) {\n      handleDeleteFolder(deleteFolderIndex);\n    }\n    closeDeleteFolderModal();\n  };\n  const confirmDeleteForm = () => {\n    if (selectedFolder && deleteFormIndex !== null) {\n      handleDeleteForm(selectedFolder, deleteFormIndex);\n    }\n    closeDeleteFormModal();\n  };\n  const openSettings = () => {\n    setIsSettingsOpen(true);\n  };\n  const closeSettings = () => {\n    setIsSettingsOpen(false);\n  };\n  const openShareModal = () => {\n    setIsShareModalOpen(true);\n  };\n  const closeShareModal = () => {\n    setIsShareModalOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `dashboard-container ${isLightTheme ? \"light\" : \"dark\"}`,\n    children: isSettingsOpen ? /*#__PURE__*/_jsxDEV(Settings, {\n      closeSettings: closeSettings\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"navbar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"workspace-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"workspace-button\",\n            onClick: toggleDropdown,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Dewank Rastogi's workspace\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"dropdown-icon\",\n              src: \"drop.png\",\n              alt: \"Dropdown Icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this), isDropdownOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dropdown-menu\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"dropdown-item\",\n              onClick: openSettings,\n              children: \"Settings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"dropdown-item logout\",\n              children: \"Log Out\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"theme-toggle\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Light\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"switch\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: !isLightTheme,\n              onChange: toggleTheme\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"slider\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Dark\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"share-button\",\n          onClick: openShareModal,\n          children: \"Share\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Dashboard-content\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"Create-folder-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"create-folder\",\n              onClick: () => openModal(\"folder\"),\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"folder.png\",\n                className: \"folder\",\n                alt: \"Folder\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 19\n              }, this), \"Create a folder\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"folder-list\",\n              children: folders.map((folder, index) => {\n                var _folderForms$folder;\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"folder-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: folder\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 182,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"delete-button\",\n                    onClick: () => openDeleteFolderModal(index),\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: \"del.png\",\n                      alt: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 187,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 183,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"add-form-button\",\n                    onClick: () => {\n                      setSelectedFolder(folder);\n                      openModal(\"form\");\n                    },\n                    children: \"Add Form\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 189,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-list\",\n                    children: (_folderForms$folder = folderForms[folder]) === null || _folderForms$folder === void 0 ? void 0 : _folderForms$folder.map((form, formIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"form-item\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        children: form\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 202,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"delete-button-form\",\n                        onClick: () => openDeleteFormModal(folder, formIndex),\n                        children: /*#__PURE__*/_jsxDEV(\"img\", {\n                          src: \"del.png\",\n                          className: \"del-form\",\n                          alt: \"Delete\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 207,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 203,\n                        columnNumber: 29\n                      }, this)]\n                    }, formIndex, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 201,\n                      columnNumber: 27\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 199,\n                    columnNumber: 23\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 21\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }, this), isModalOpen && modalType === \"folder\" && /*#__PURE__*/_jsxDEV(CreateFolderModal, {\n        closeModal: closeModal,\n        isLightTheme: isLightTheme,\n        onCreateFolder: handleCreateFolder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 13\n      }, this), isModalOpen && modalType === \"form\" && /*#__PURE__*/_jsxDEV(CreateFormModal, {\n        closeModal: closeModal,\n        isLightTheme: isLightTheme,\n        onCreateForm: handleCreateForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 13\n      }, this), isDeleteModalOpen && /*#__PURE__*/_jsxDEV(DeleteFolder, {\n        closeModal: closeDeleteFolderModal,\n        isLightTheme: isLightTheme,\n        onConfirm: confirmDeleteFolder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 13\n      }, this), isDeleteFormModalOpen && /*#__PURE__*/_jsxDEV(DeleteForm, {\n        closeModal: closeDeleteFormModal,\n        isLightTheme: isLightTheme,\n        onConfirm: confirmDeleteForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 13\n      }, this), isShareModalOpen && /*#__PURE__*/_jsxDEV(ShareModal, {\n        isOpen: isShareModalOpen,\n        onClose: closeShareModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"f9kqh9UZir6SFi2Ypxc8/RjqO1U=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","CreateFolderModal","CreateFormModal","DeleteFolder","DeleteForm","Settings","ShareModal","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","isModalOpen","setIsModalOpen","modalType","setModalType","isLightTheme","setIsLightTheme","isDropdownOpen","setIsDropdownOpen","folders","setFolders","folderForms","setFolderForms","deleteFolderIndex","setDeleteFolderIndex","deleteFormIndex","setDeleteFormIndex","isDeleteModalOpen","setIsDeleteModalOpen","isDeleteFormModalOpen","setIsDeleteFormModalOpen","isSettingsOpen","setIsSettingsOpen","isShareModalOpen","setIsShareModalOpen","selectedFolder","setSelectedFolder","openModal","type","closeModal","handleCreateFolder","folderName","trim","handleCreateForm","formName","updatedFolderForms","toggleTheme","prevState","toggleDropdown","handleDeleteFolder","index","updatedFolders","filter","_","i","handleDeleteForm","formIndex","openDeleteFolderModal","openDeleteFormModal","closeDeleteFolderModal","closeDeleteFormModal","confirmDeleteFolder","confirmDeleteForm","openSettings","closeSettings","openShareModal","closeShareModal","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","checked","onChange","map","folder","_folderForms$folder","form","onCreateFolder","onCreateForm","onConfirm","isOpen","onClose","_c","$RefreshReg$"],"sources":["D:/Cuvette/Final evaluation/form-builder/src/Components/Dashboard/Dashboard.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Dashboard.css\";\r\nimport CreateFolderModal from \"./CreateFolderModal\";\r\nimport CreateFormModal from \"./CreateFormModal\";\r\nimport DeleteFolder from \"./DeleteFolder\";\r\nimport DeleteForm from \"./DeleteForm\";\r\nimport Settings from \"./Settings\";\r\nimport ShareModal from \"./ShareModal\"; \r\n\r\nconst Dashboard = () => {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [modalType, setModalType] = useState(null);\r\n  const [isLightTheme, setIsLightTheme] = useState(false);\r\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\r\n  const [folders, setFolders] = useState([]); // Array of folder names\r\n  const [folderForms, setFolderForms] = useState({}); // Mapping of folder to forms\r\n  const [deleteFolderIndex, setDeleteFolderIndex] = useState(null);\r\n  const [deleteFormIndex, setDeleteFormIndex] = useState(null);\r\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\r\n  const [isDeleteFormModalOpen, setIsDeleteFormModalOpen] = useState(false);\r\n  const [isSettingsOpen, setIsSettingsOpen] = useState(false);\r\n  const [isShareModalOpen, setIsShareModalOpen] = useState(false);\r\n  const [selectedFolder, setSelectedFolder] = useState(null); // Currently selected folder for creating forms\r\n\r\n  const openModal = (type) => {\r\n    setModalType(type);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n    setModalType(null);\r\n  };\r\n\r\n  const handleCreateFolder = (folderName) => {\r\n    if (folderName.trim()) {\r\n      setFolders([...folders, folderName.trim()]);\r\n    }\r\n    closeModal();\r\n  };\r\n\r\n  const handleCreateForm = (formName) => {\r\n    if (formName.trim() && selectedFolder) {\r\n      // Add form to the selected folder\r\n      const updatedFolderForms = { \r\n        ...folderForms,\r\n        [selectedFolder]: [...(folderForms[selectedFolder] || []), formName.trim()]\r\n      };\r\n      setFolderForms(updatedFolderForms);\r\n    }\r\n    closeModal();\r\n  };\r\n\r\n  const toggleTheme = () => {\r\n    setIsLightTheme((prevState) => !prevState);\r\n  };\r\n\r\n  const toggleDropdown = () => {\r\n    setIsDropdownOpen((prevState) => !prevState);\r\n  };\r\n\r\n  const handleDeleteFolder = (index) => {\r\n    const folderName = folders[index];\r\n    const updatedFolders = folders.filter((_, i) => i !== index);\r\n    const updatedFolderForms = { ...folderForms };\r\n    delete updatedFolderForms[folderName]; // Remove folder's forms\r\n\r\n    setFolders(updatedFolders);\r\n    setFolderForms(updatedFolderForms);\r\n  };\r\n\r\n  const handleDeleteForm = (folderName, formIndex) => {\r\n    const updatedFolderForms = {\r\n      ...folderForms,\r\n      [folderName]: folderForms[folderName].filter((_, i) => i !== formIndex)\r\n    };\r\n    setFolderForms(updatedFolderForms);\r\n  };\r\n\r\n  const openDeleteFolderModal = (index) => {\r\n    setDeleteFolderIndex(index);\r\n    setIsDeleteModalOpen(true);\r\n  };\r\n\r\n  const openDeleteFormModal = (folderName, formIndex) => {\r\n    setDeleteFormIndex(formIndex);\r\n    setSelectedFolder(folderName);\r\n    setIsDeleteFormModalOpen(true);\r\n  };\r\n\r\n  const closeDeleteFolderModal = () => {\r\n    setDeleteFolderIndex(null);\r\n    setIsDeleteModalOpen(false);\r\n  };\r\n\r\n  const closeDeleteFormModal = () => {\r\n    setDeleteFormIndex(null);\r\n    setIsDeleteFormModalOpen(false);\r\n  };\r\n\r\n  const confirmDeleteFolder = () => {\r\n    if (deleteFolderIndex !== null) {\r\n      handleDeleteFolder(deleteFolderIndex);\r\n    }\r\n    closeDeleteFolderModal();\r\n  };\r\n\r\n  const confirmDeleteForm = () => {\r\n    if (selectedFolder && deleteFormIndex !== null) {\r\n      handleDeleteForm(selectedFolder, deleteFormIndex);\r\n    }\r\n    closeDeleteFormModal();\r\n  };\r\n\r\n  const openSettings = () => {\r\n    setIsSettingsOpen(true);\r\n  };\r\n\r\n  const closeSettings = () => {\r\n    setIsSettingsOpen(false);\r\n  };\r\n\r\n  const openShareModal = () => {\r\n    setIsShareModalOpen(true);\r\n  };\r\n\r\n  const closeShareModal = () => {\r\n    setIsShareModalOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={`dashboard-container ${isLightTheme ? \"light\" : \"dark\"}`}>\r\n      {isSettingsOpen ? (\r\n        <Settings closeSettings={closeSettings} />\r\n      ) : (\r\n        <>\r\n          <nav className=\"navbar\">\r\n            <div className=\"logo\"></div>\r\n            <div className=\"workspace-container\">\r\n              <button className=\"workspace-button\" onClick={toggleDropdown}>\r\n                <span>Dewank Rastogi's workspace</span>\r\n                <img className=\"dropdown-icon\" src=\"drop.png\" alt=\"Dropdown Icon\" />\r\n              </button>\r\n              {isDropdownOpen && (\r\n                <div className=\"dropdown-menu\">\r\n                  <button className=\"dropdown-item\" onClick={openSettings}>Settings</button>\r\n                  <button className=\"dropdown-item logout\">Log Out</button>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"theme-toggle\">\r\n              <span>Light</span>\r\n              <label className=\"switch\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={!isLightTheme}\r\n                  onChange={toggleTheme}\r\n                />\r\n                <span className=\"slider\"></span>\r\n              </label>\r\n              <span>Dark</span>\r\n            </div>\r\n            <button className=\"share-button\" onClick={openShareModal}>\r\n              Share\r\n            </button>\r\n          </nav>\r\n\r\n          <div className=\"Dashboard-content\">\r\n            <ul className=\"Create-folder-list\">\r\n              <li>\r\n                <button className=\"create-folder\" onClick={() => openModal(\"folder\")}>\r\n                  <img src=\"folder.png\" className=\"folder\" alt=\"Folder\" />\r\n                  Create a folder\r\n                </button>\r\n              </li>\r\n\r\n              <li>\r\n                <div className=\"folder-list\">\r\n                  {folders.map((folder, index) => (\r\n                    <div key={index} className=\"folder-item\">\r\n                      <span>{folder}</span>\r\n                      <button\r\n                        className=\"delete-button\"\r\n                        onClick={() => openDeleteFolderModal(index)}\r\n                      >\r\n                        <img src=\"del.png\" alt=\"Delete\" />\r\n                      </button>\r\n                      <button\r\n                        className=\"add-form-button\"\r\n                        onClick={() => {\r\n                          setSelectedFolder(folder);\r\n                          openModal(\"form\");\r\n                        }}\r\n                      >\r\n                        Add Form\r\n                      </button>\r\n\r\n                      <div className=\"form-list\">\r\n                        {folderForms[folder]?.map((form, formIndex) => (\r\n                          <div key={formIndex} className=\"form-item\">\r\n                            <span>{form}</span>\r\n                            <button\r\n                              className=\"delete-button-form\"\r\n                              onClick={() => openDeleteFormModal(folder, formIndex)}\r\n                            >\r\n                              <img src=\"del.png\" className=\"del-form\" alt=\"Delete\" />\r\n                            </button>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n\r\n          {isModalOpen && modalType === \"folder\" && (\r\n            <CreateFolderModal\r\n              closeModal={closeModal}\r\n              isLightTheme={isLightTheme}\r\n              onCreateFolder={handleCreateFolder}\r\n            />\r\n          )}\r\n          {isModalOpen && modalType === \"form\" && (\r\n            <CreateFormModal\r\n              closeModal={closeModal}\r\n              isLightTheme={isLightTheme}\r\n              onCreateForm={handleCreateForm}\r\n            />\r\n          )}\r\n          {isDeleteModalOpen && (\r\n            <DeleteFolder\r\n              closeModal={closeDeleteFolderModal}\r\n              isLightTheme={isLightTheme}\r\n              onConfirm={confirmDeleteFolder}\r\n            />\r\n          )}\r\n          {isDeleteFormModalOpen && (\r\n            <DeleteForm\r\n              closeModal={closeDeleteFormModal}\r\n              isLightTheme={isLightTheme}\r\n              onConfirm={confirmDeleteForm}\r\n            />\r\n          )}\r\n          {isShareModalOpen && (\r\n            <ShareModal isOpen={isShareModalOpen} onClose={closeShareModal} />\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,iBAAiB;AACxB,OAAOC,iBAAiB,MAAM,qBAAqB;AACnD,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEtC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACiB,YAAY,EAAEC,eAAe,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACmB,cAAc,EAAEC,iBAAiB,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACqB,OAAO,EAAEC,UAAU,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACuB,WAAW,EAAEC,cAAc,CAAC,GAAGxB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACpD,MAAM,CAACyB,iBAAiB,EAAEC,oBAAoB,CAAC,GAAG1B,QAAQ,CAAC,IAAI,CAAC;EAChE,MAAM,CAAC2B,eAAe,EAAEC,kBAAkB,CAAC,GAAG5B,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAAC6B,iBAAiB,EAAEC,oBAAoB,CAAC,GAAG9B,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAAC+B,qBAAqB,EAAEC,wBAAwB,CAAC,GAAGhC,QAAQ,CAAC,KAAK,CAAC;EACzE,MAAM,CAACiC,cAAc,EAAEC,iBAAiB,CAAC,GAAGlC,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACmC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGpC,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAM,CAACqC,cAAc,EAAEC,iBAAiB,CAAC,GAAGtC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE5D,MAAMuC,SAAS,GAAIC,IAAI,IAAK;IAC1BxB,YAAY,CAACwB,IAAI,CAAC;IAClB1B,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAM2B,UAAU,GAAGA,CAAA,KAAM;IACvB3B,cAAc,CAAC,KAAK,CAAC;IACrBE,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAM0B,kBAAkB,GAAIC,UAAU,IAAK;IACzC,IAAIA,UAAU,CAACC,IAAI,CAAC,CAAC,EAAE;MACrBtB,UAAU,CAAC,CAAC,GAAGD,OAAO,EAAEsB,UAAU,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC7C;IACAH,UAAU,CAAC,CAAC;EACd,CAAC;EAED,MAAMI,gBAAgB,GAAIC,QAAQ,IAAK;IACrC,IAAIA,QAAQ,CAACF,IAAI,CAAC,CAAC,IAAIP,cAAc,EAAE;MACrC;MACA,MAAMU,kBAAkB,GAAG;QACzB,GAAGxB,WAAW;QACd,CAACc,cAAc,GAAG,CAAC,IAAId,WAAW,CAACc,cAAc,CAAC,IAAI,EAAE,CAAC,EAAES,QAAQ,CAACF,IAAI,CAAC,CAAC;MAC5E,CAAC;MACDpB,cAAc,CAACuB,kBAAkB,CAAC;IACpC;IACAN,UAAU,CAAC,CAAC;EACd,CAAC;EAED,MAAMO,WAAW,GAAGA,CAAA,KAAM;IACxB9B,eAAe,CAAE+B,SAAS,IAAK,CAACA,SAAS,CAAC;EAC5C,CAAC;EAED,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3B9B,iBAAiB,CAAE6B,SAAS,IAAK,CAACA,SAAS,CAAC;EAC9C,CAAC;EAED,MAAME,kBAAkB,GAAIC,KAAK,IAAK;IACpC,MAAMT,UAAU,GAAGtB,OAAO,CAAC+B,KAAK,CAAC;IACjC,MAAMC,cAAc,GAAGhC,OAAO,CAACiC,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,KAAKJ,KAAK,CAAC;IAC5D,MAAML,kBAAkB,GAAG;MAAE,GAAGxB;IAAY,CAAC;IAC7C,OAAOwB,kBAAkB,CAACJ,UAAU,CAAC,CAAC,CAAC;;IAEvCrB,UAAU,CAAC+B,cAAc,CAAC;IAC1B7B,cAAc,CAACuB,kBAAkB,CAAC;EACpC,CAAC;EAED,MAAMU,gBAAgB,GAAGA,CAACd,UAAU,EAAEe,SAAS,KAAK;IAClD,MAAMX,kBAAkB,GAAG;MACzB,GAAGxB,WAAW;MACd,CAACoB,UAAU,GAAGpB,WAAW,CAACoB,UAAU,CAAC,CAACW,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,KAAKE,SAAS;IACxE,CAAC;IACDlC,cAAc,CAACuB,kBAAkB,CAAC;EACpC,CAAC;EAED,MAAMY,qBAAqB,GAAIP,KAAK,IAAK;IACvC1B,oBAAoB,CAAC0B,KAAK,CAAC;IAC3BtB,oBAAoB,CAAC,IAAI,CAAC;EAC5B,CAAC;EAED,MAAM8B,mBAAmB,GAAGA,CAACjB,UAAU,EAAEe,SAAS,KAAK;IACrD9B,kBAAkB,CAAC8B,SAAS,CAAC;IAC7BpB,iBAAiB,CAACK,UAAU,CAAC;IAC7BX,wBAAwB,CAAC,IAAI,CAAC;EAChC,CAAC;EAED,MAAM6B,sBAAsB,GAAGA,CAAA,KAAM;IACnCnC,oBAAoB,CAAC,IAAI,CAAC;IAC1BI,oBAAoB,CAAC,KAAK,CAAC;EAC7B,CAAC;EAED,MAAMgC,oBAAoB,GAAGA,CAAA,KAAM;IACjClC,kBAAkB,CAAC,IAAI,CAAC;IACxBI,wBAAwB,CAAC,KAAK,CAAC;EACjC,CAAC;EAED,MAAM+B,mBAAmB,GAAGA,CAAA,KAAM;IAChC,IAAItC,iBAAiB,KAAK,IAAI,EAAE;MAC9B0B,kBAAkB,CAAC1B,iBAAiB,CAAC;IACvC;IACAoC,sBAAsB,CAAC,CAAC;EAC1B,CAAC;EAED,MAAMG,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAI3B,cAAc,IAAIV,eAAe,KAAK,IAAI,EAAE;MAC9C8B,gBAAgB,CAACpB,cAAc,EAAEV,eAAe,CAAC;IACnD;IACAmC,oBAAoB,CAAC,CAAC;EACxB,CAAC;EAED,MAAMG,YAAY,GAAGA,CAAA,KAAM;IACzB/B,iBAAiB,CAAC,IAAI,CAAC;EACzB,CAAC;EAED,MAAMgC,aAAa,GAAGA,CAAA,KAAM;IAC1BhC,iBAAiB,CAAC,KAAK,CAAC;EAC1B,CAAC;EAED,MAAMiC,cAAc,GAAGA,CAAA,KAAM;IAC3B/B,mBAAmB,CAAC,IAAI,CAAC;EAC3B,CAAC;EAED,MAAMgC,eAAe,GAAGA,CAAA,KAAM;IAC5BhC,mBAAmB,CAAC,KAAK,CAAC;EAC5B,CAAC;EAED,oBACE5B,OAAA;IAAK6D,SAAS,EAAE,uBAAuBpD,YAAY,GAAG,OAAO,GAAG,MAAM,EAAG;IAAAqD,QAAA,EACtErC,cAAc,gBACbzB,OAAA,CAACH,QAAQ;MAAC6D,aAAa,EAAEA;IAAc;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAE1ClE,OAAA,CAAAE,SAAA;MAAA4D,QAAA,gBACE9D,OAAA;QAAK6D,SAAS,EAAC,QAAQ;QAAAC,QAAA,gBACrB9D,OAAA;UAAK6D,SAAS,EAAC;QAAM;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC5BlE,OAAA;UAAK6D,SAAS,EAAC,qBAAqB;UAAAC,QAAA,gBAClC9D,OAAA;YAAQ6D,SAAS,EAAC,kBAAkB;YAACM,OAAO,EAAEzB,cAAe;YAAAoB,QAAA,gBAC3D9D,OAAA;cAAA8D,QAAA,EAAM;YAA0B;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACvClE,OAAA;cAAK6D,SAAS,EAAC,eAAe;cAACO,GAAG,EAAC,UAAU;cAACC,GAAG,EAAC;YAAe;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9D,CAAC,EACRvD,cAAc,iBACbX,OAAA;YAAK6D,SAAS,EAAC,eAAe;YAAAC,QAAA,gBAC5B9D,OAAA;cAAQ6D,SAAS,EAAC,eAAe;cAACM,OAAO,EAAEV,YAAa;cAAAK,QAAA,EAAC;YAAQ;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eAC1ElE,OAAA;cAAQ6D,SAAS,EAAC,sBAAsB;cAAAC,QAAA,EAAC;YAAO;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtD,CACN;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eAENlE,OAAA;UAAK6D,SAAS,EAAC,cAAc;UAAAC,QAAA,gBAC3B9D,OAAA;YAAA8D,QAAA,EAAM;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAClBlE,OAAA;YAAO6D,SAAS,EAAC,QAAQ;YAAAC,QAAA,gBACvB9D,OAAA;cACEgC,IAAI,EAAC,UAAU;cACfsC,OAAO,EAAE,CAAC7D,YAAa;cACvB8D,QAAQ,EAAE/B;YAAY;cAAAuB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACvB,CAAC,eACFlE,OAAA;cAAM6D,SAAS,EAAC;YAAQ;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3B,CAAC,eACRlE,OAAA;YAAA8D,QAAA,EAAM;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACd,CAAC,eACNlE,OAAA;UAAQ6D,SAAS,EAAC,cAAc;UAACM,OAAO,EAAER,cAAe;UAAAG,QAAA,EAAC;QAE1D;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eAENlE,OAAA;QAAK6D,SAAS,EAAC,mBAAmB;QAAAC,QAAA,eAChC9D,OAAA;UAAI6D,SAAS,EAAC,oBAAoB;UAAAC,QAAA,gBAChC9D,OAAA;YAAA8D,QAAA,eACE9D,OAAA;cAAQ6D,SAAS,EAAC,eAAe;cAACM,OAAO,EAAEA,CAAA,KAAMpC,SAAS,CAAC,QAAQ,CAAE;cAAA+B,QAAA,gBACnE9D,OAAA;gBAAKoE,GAAG,EAAC,YAAY;gBAACP,SAAS,EAAC,QAAQ;gBAACQ,GAAG,EAAC;cAAQ;gBAAAN,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,mBAE1D;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACP,CAAC,eAELlE,OAAA;YAAA8D,QAAA,eACE9D,OAAA;cAAK6D,SAAS,EAAC,aAAa;cAAAC,QAAA,EACzBjD,OAAO,CAAC2D,GAAG,CAAC,CAACC,MAAM,EAAE7B,KAAK;gBAAA,IAAA8B,mBAAA;gBAAA,oBACzB1E,OAAA;kBAAiB6D,SAAS,EAAC,aAAa;kBAAAC,QAAA,gBACtC9D,OAAA;oBAAA8D,QAAA,EAAOW;kBAAM;oBAAAV,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAO,CAAC,eACrBlE,OAAA;oBACE6D,SAAS,EAAC,eAAe;oBACzBM,OAAO,EAAEA,CAAA,KAAMhB,qBAAqB,CAACP,KAAK,CAAE;oBAAAkB,QAAA,eAE5C9D,OAAA;sBAAKoE,GAAG,EAAC,SAAS;sBAACC,GAAG,EAAC;oBAAQ;sBAAAN,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAE;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC5B,CAAC,eACTlE,OAAA;oBACE6D,SAAS,EAAC,iBAAiB;oBAC3BM,OAAO,EAAEA,CAAA,KAAM;sBACbrC,iBAAiB,CAAC2C,MAAM,CAAC;sBACzB1C,SAAS,CAAC,MAAM,CAAC;oBACnB,CAAE;oBAAA+B,QAAA,EACH;kBAED;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,eAETlE,OAAA;oBAAK6D,SAAS,EAAC,WAAW;oBAAAC,QAAA,GAAAY,mBAAA,GACvB3D,WAAW,CAAC0D,MAAM,CAAC,cAAAC,mBAAA,uBAAnBA,mBAAA,CAAqBF,GAAG,CAAC,CAACG,IAAI,EAAEzB,SAAS,kBACxClD,OAAA;sBAAqB6D,SAAS,EAAC,WAAW;sBAAAC,QAAA,gBACxC9D,OAAA;wBAAA8D,QAAA,EAAOa;sBAAI;wBAAAZ,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAO,CAAC,eACnBlE,OAAA;wBACE6D,SAAS,EAAC,oBAAoB;wBAC9BM,OAAO,EAAEA,CAAA,KAAMf,mBAAmB,CAACqB,MAAM,EAAEvB,SAAS,CAAE;wBAAAY,QAAA,eAEtD9D,OAAA;0BAAKoE,GAAG,EAAC,SAAS;0BAACP,SAAS,EAAC,UAAU;0BAACQ,GAAG,EAAC;wBAAQ;0BAAAN,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAE;sBAAC;wBAAAH,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACjD,CAAC;oBAAA,GAPDhB,SAAS;sBAAAa,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAQd,CACN;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACC,CAAC;gBAAA,GA9BEtB,KAAK;kBAAAmB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OA+BV,CAAC;cAAA,CACP;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,EAEL7D,WAAW,IAAIE,SAAS,KAAK,QAAQ,iBACpCP,OAAA,CAACP,iBAAiB;QAChBwC,UAAU,EAAEA,UAAW;QACvBxB,YAAY,EAAEA,YAAa;QAC3BmE,cAAc,EAAE1C;MAAmB;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC,CACF,EACA7D,WAAW,IAAIE,SAAS,KAAK,MAAM,iBAClCP,OAAA,CAACN,eAAe;QACduC,UAAU,EAAEA,UAAW;QACvBxB,YAAY,EAAEA,YAAa;QAC3BoE,YAAY,EAAExC;MAAiB;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CACF,EACA7C,iBAAiB,iBAChBrB,OAAA,CAACL,YAAY;QACXsC,UAAU,EAAEoB,sBAAuB;QACnC5C,YAAY,EAAEA,YAAa;QAC3BqE,SAAS,EAAEvB;MAAoB;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CACF,EACA3C,qBAAqB,iBACpBvB,OAAA,CAACJ,UAAU;QACTqC,UAAU,EAAEqB,oBAAqB;QACjC7C,YAAY,EAAEA,YAAa;QAC3BqE,SAAS,EAAEtB;MAAkB;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CACF,EACAvC,gBAAgB,iBACf3B,OAAA,CAACF,UAAU;QAACiF,MAAM,EAAEpD,gBAAiB;QAACqD,OAAO,EAAEpB;MAAgB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAClE;IAAA,eACD;EACH;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC9D,EAAA,CApPID,SAAS;AAAA8E,EAAA,GAAT9E,SAAS;AAsPf,eAAeA,SAAS;AAAC,IAAA8E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}