{"ast":null,"code":"var _jsxFileName = \"D:\\\\Cuvette\\\\Final evaluation\\\\form-builder\\\\src\\\\Components\\\\Test.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Test.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Test = () => {\n  _s();\n  const [folders, setFolders] = useState([{\n    name: \"Computer Networks\",\n    forms: []\n  }]);\n\n  // Function to add a new folder\n  const addFolder = () => {\n    const newFolder = {\n      name: `New Folder ${folders.length + 1}`,\n      forms: []\n    };\n    setFolders([...folders, newFolder]);\n  };\n\n  // Function to add a form to a specific folder\n  const addFormToFolder = index => {\n    const updatedFolders = [...folders];\n    updatedFolders[index].forms.push(`New Form ${updatedFolders[index].forms.length + 1}`);\n    setFolders(updatedFolders);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addFolder,\n        className: \"btn\",\n        children: \"Create a folder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"folders-container\",\n      children: folders.map((folder, folderIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"folder\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"folder-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: folder.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn add-form-btn\",\n            onClick: () => addFormToFolder(folderIndex),\n            children: \"Add Form\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forms-container\",\n          children: folder.forms.map((form, formIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form\",\n            children: form\n          }, formIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)]\n      }, folderIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(Test, \"x1tlbAcvg3deGtHyMnuWo6uweAk=\");\n_c = Test;\nexport default Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Test","_s","folders","setFolders","name","forms","addFolder","newFolder","length","addFormToFolder","index","updatedFolders","push","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","folder","folderIndex","form","formIndex","_c","$RefreshReg$"],"sources":["D:/Cuvette/Final evaluation/form-builder/src/Components/Test.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Test.css\";\r\n\r\nconst Test= () => {\r\n  const [folders, setFolders] = useState([\r\n    { name: \"Computer Networks\", forms: [] },\r\n  ]);\r\n\r\n  // Function to add a new folder\r\n  const addFolder = () => {\r\n    const newFolder = {\r\n      name: `New Folder ${folders.length + 1}`,\r\n      forms: [],\r\n    };\r\n    setFolders([...folders, newFolder]);\r\n  };\r\n\r\n  // Function to add a form to a specific folder\r\n  const addFormToFolder = (index) => {\r\n    const updatedFolders = [...folders];\r\n    updatedFolders[index].forms.push(`New Form ${updatedFolders[index].forms.length + 1}`);\r\n    setFolders(updatedFolders);\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <div className=\"header\">\r\n        <button onClick={addFolder} className=\"btn\">\r\n          Create a folder\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"folders-container\">\r\n        {folders.map((folder, folderIndex) => (\r\n          <div key={folderIndex} className=\"folder\">\r\n            <div className=\"folder-header\">\r\n              <span>{folder.name}</span>\r\n              <button className=\"btn add-form-btn\" onClick={() => addFormToFolder(folderIndex)}>\r\n                Add Form\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"forms-container\">\r\n              {folder.forms.map((form, formIndex) => (\r\n                <div key={formIndex} className=\"form\">\r\n                  {form}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Test;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,IAAI,GAAEA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,CACrC;IAAEO,IAAI,EAAE,mBAAmB;IAAEC,KAAK,EAAE;EAAG,CAAC,CACzC,CAAC;;EAEF;EACA,MAAMC,SAAS,GAAGA,CAAA,KAAM;IACtB,MAAMC,SAAS,GAAG;MAChBH,IAAI,EAAE,cAAcF,OAAO,CAACM,MAAM,GAAG,CAAC,EAAE;MACxCH,KAAK,EAAE;IACT,CAAC;IACDF,UAAU,CAAC,CAAC,GAAGD,OAAO,EAAEK,SAAS,CAAC,CAAC;EACrC,CAAC;;EAED;EACA,MAAME,eAAe,GAAIC,KAAK,IAAK;IACjC,MAAMC,cAAc,GAAG,CAAC,GAAGT,OAAO,CAAC;IACnCS,cAAc,CAACD,KAAK,CAAC,CAACL,KAAK,CAACO,IAAI,CAAC,YAAYD,cAAc,CAACD,KAAK,CAAC,CAACL,KAAK,CAACG,MAAM,GAAG,CAAC,EAAE,CAAC;IACtFL,UAAU,CAACQ,cAAc,CAAC;EAC5B,CAAC;EAED,oBACEZ,OAAA;IAAKc,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBf,OAAA;MAAKc,SAAS,EAAC,QAAQ;MAAAC,QAAA,eACrBf,OAAA;QAAQgB,OAAO,EAAET,SAAU;QAACO,SAAS,EAAC,KAAK;QAAAC,QAAA,EAAC;MAE5C;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAENpB,OAAA;MAAKc,SAAS,EAAC,mBAAmB;MAAAC,QAAA,EAC/BZ,OAAO,CAACkB,GAAG,CAAC,CAACC,MAAM,EAAEC,WAAW,kBAC/BvB,OAAA;QAAuBc,SAAS,EAAC,QAAQ;QAAAC,QAAA,gBACvCf,OAAA;UAAKc,SAAS,EAAC,eAAe;UAAAC,QAAA,gBAC5Bf,OAAA;YAAAe,QAAA,EAAOO,MAAM,CAACjB;UAAI;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC1BpB,OAAA;YAAQc,SAAS,EAAC,kBAAkB;YAACE,OAAO,EAAEA,CAAA,KAAMN,eAAe,CAACa,WAAW,CAAE;YAAAR,QAAA,EAAC;UAElF;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eAENpB,OAAA;UAAKc,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EAC7BO,MAAM,CAAChB,KAAK,CAACe,GAAG,CAAC,CAACG,IAAI,EAAEC,SAAS,kBAChCzB,OAAA;YAAqBc,SAAS,EAAC,MAAM;YAAAC,QAAA,EAClCS;UAAI,GADGC,SAAS;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEd,CACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA,GAdEG,WAAW;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAehB,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAClB,EAAA,CAnDID,IAAI;AAAAyB,EAAA,GAAJzB,IAAI;AAqDV,eAAeA,IAAI;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}