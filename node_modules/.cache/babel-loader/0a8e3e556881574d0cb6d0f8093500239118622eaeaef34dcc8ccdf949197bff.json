{"ast":null,"code":"var _jsxFileName = \"D:\\\\Cuvette\\\\Final evaluation\\\\form-builder\\\\src\\\\Components\\\\Dashboard\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Dashboard.css\";\nimport CreateFolderModal from \"./CreateFolderModal\";\nimport CreateFormModal from \"./CreateFormModal\";\nimport DeleteFolder from \"./DeleteFolder\";\nimport DeleteForm from \"./DeleteForm\";\nimport Settings from \"./Settings\";\nimport ShareModal from \"./ShareModal\";\nimport GlobalForms from \"./GlobalForms\";\nimport FolderForms from \"./FolderForms\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [modalType, setModalType] = useState(null);\n  const [isLightTheme, setIsLightTheme] = useState(false);\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [folders, setFolders] = useState([]);\n  const [selectedFolderIndex, setSelectedFolderIndex] = useState(null); // Track selected folder\n  const [deleteFolderIndex, setDeleteFolderIndex] = useState(null);\n  const [deleteFormIndex, setDeleteFormIndex] = useState(null);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [isDeleteFormModalOpen, setIsDeleteFormModalOpen] = useState(false);\n  const [isSettingsOpen, setIsSettingsOpen] = useState(false);\n  const [isShareModalOpen, setIsShareModalOpen] = useState(false);\n  const openModal = type => {\n    setModalType(type);\n    setIsModalOpen(true);\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setModalType(null);\n  };\n  const handleCreateFolder = folderName => {\n    if (folderName.trim()) {\n      setFolders([...folders, {\n        name: folderName.trim(),\n        forms: []\n      }]);\n    }\n    closeModal();\n  };\n  const toggleTheme = () => {\n    setIsLightTheme(prevState => !prevState);\n  };\n  const toggleDropdown = () => {\n    setIsDropdownOpen(prevState => !prevState);\n  };\n  const handleDeleteFolder = index => {\n    const updatedFolders = folders.filter((_, i) => i !== index);\n    setFolders(updatedFolders);\n    if (selectedFolderIndex === index) {\n      setSelectedFolderIndex(null); // Reset selected folder if it's deleted\n    }\n  };\n  const handleDeleteForm = index => {\n    const updatedForms = forms.filter((_, i) => i !== index);\n    setForms(updatedForms);\n  };\n  const openDeleteFolderModal = index => {\n    setDeleteFolderIndex(index);\n    setIsDeleteModalOpen(true);\n  };\n  const openDeleteFormModal = index => {\n    setDeleteFormIndex(index);\n    setIsDeleteFormModalOpen(true);\n  };\n  const closeDeleteFolderModal = () => {\n    setDeleteFolderIndex(null);\n    setIsDeleteModalOpen(false);\n  };\n  const closeDeleteFormModal = () => {\n    setDeleteFormIndex(null);\n    setIsDeleteFormModalOpen(false);\n  };\n  const confirmDeleteFolder = () => {\n    if (deleteFolderIndex !== null) {\n      handleDeleteFolder(deleteFolderIndex);\n    }\n    closeDeleteFolderModal();\n  };\n  const confirmDeleteForm = () => {\n    if (deleteFormIndex !== null) {\n      handleDeleteForm(deleteFormIndex);\n    }\n    closeDeleteFormModal();\n  };\n  const openSettings = () => {\n    setIsSettingsOpen(true);\n  };\n  const closeSettings = () => {\n    setIsSettingsOpen(false);\n  };\n  const openShareModal = () => {\n    setIsShareModalOpen(true);\n  };\n  const closeShareModal = () => {\n    setIsShareModalOpen(false);\n  };\n  const handleFolderClick = index => {\n    // Toggle the selected folder index\n    setSelectedFolderIndex(index === selectedFolderIndex ? null : index);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `dashboard-container ${isLightTheme ? \"light\" : \"dark\"}`,\n    children: isSettingsOpen ? /*#__PURE__*/_jsxDEV(Settings, {\n      closeSettings: closeSettings\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"navbar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"workspace-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"workspace-button\",\n            onClick: toggleDropdown,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Dewank Rastogi's workspace\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"dropdown-icon\",\n              src: \"drop.png\",\n              alt: \"Dropdown Icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this), isDropdownOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dropdown-menu\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"dropdown-item\",\n              onClick: openSettings,\n              children: \"Settings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"dropdown-item logout\",\n              children: \"Log Out\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"theme-toggle\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Light\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"switch\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: !isLightTheme,\n              onChange: toggleTheme\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"slider\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Dark\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"share-button\",\n          onClick: openShareModal,\n          children: \"Share\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Dashboard-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"Create-folder-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"create-folder\",\n              onClick: () => openModal(\"folder\"),\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"folder.png\",\n                className: \"folder\",\n                alt: \"Folder\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 19\n              }, this), \"Create a folder\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"folder-list\",\n              children: folders.map((folder, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `folder-item ${selectedFolderIndex === index ? \"selected\" : \"\"}`,\n                onClick: () => handleFolderClick(index) // Handle folder click\n                ,\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: folder.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"delete-button\",\n                  onClick: e => {\n                    e.stopPropagation(); // Prevent triggering folder click\n                    openDeleteFolderModal(index);\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: \"del.png\",\n                    alt: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 184,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 23\n                }, this), selectedFolderIndex === index && /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: \"form-list\",\n                  children: folder.forms.map((form, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-item\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: form\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 190,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"delete-button-form\",\n                      onClick: e => {\n                        e.stopPropagation(); // Prevent triggering folder click\n                        openDeleteFormModal(idx);\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                        src: \"del.png\",\n                        className: \"del-form\",\n                        alt: \"Delete\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 198,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 191,\n                      columnNumber: 31\n                    }, this)]\n                  }, idx, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 189,\n                    columnNumber: 29\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 25\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"Create-form-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"create-typebot\",\n              onClick: () => openModal(\"form\"),\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"plus\",\n                  children: \"+\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 21\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 53\n                }, this), \"Create a typebot\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"form-li\",\n            children: [/*#__PURE__*/_jsxDEV(GlobalForms, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 16\n            }, this), /*#__PURE__*/_jsxDEV(FolderForms, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 16\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this), isModalOpen && modalType === \"folder\" && /*#__PURE__*/_jsxDEV(CreateFolderModal, {\n        closeModal: closeModal,\n        isLightTheme: isLightTheme,\n        onCreateFolder: handleCreateFolder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 13\n      }, this), isModalOpen && modalType === \"form\" && /*#__PURE__*/_jsxDEV(CreateFormModal, {\n        closeModal: closeModal,\n        isLightTheme: isLightTheme,\n        onCreateForm: handleCreateForm,\n        folderIndex: selectedFolderIndex // Pass selected folder index to form modal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 13\n      }, this), isDeleteModalOpen && /*#__PURE__*/_jsxDEV(DeleteFolder, {\n        closeModal: closeDeleteFolderModal,\n        isLightTheme: isLightTheme,\n        onConfirm: confirmDeleteFolder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 13\n      }, this), isDeleteFormModalOpen && /*#__PURE__*/_jsxDEV(DeleteForm, {\n        closeModal: closeDeleteFormModal,\n        isLightTheme: isLightTheme,\n        onConfirm: confirmDeleteForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 13\n      }, this), isShareModalOpen && /*#__PURE__*/_jsxDEV(ShareModal, {\n        isOpen: isShareModalOpen,\n        onClose: closeShareModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"R9uC/au8EGytoLCOlCZZx1hBYUE=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","CreateFolderModal","CreateFormModal","DeleteFolder","DeleteForm","Settings","ShareModal","GlobalForms","FolderForms","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","isModalOpen","setIsModalOpen","modalType","setModalType","isLightTheme","setIsLightTheme","isDropdownOpen","setIsDropdownOpen","folders","setFolders","selectedFolderIndex","setSelectedFolderIndex","deleteFolderIndex","setDeleteFolderIndex","deleteFormIndex","setDeleteFormIndex","isDeleteModalOpen","setIsDeleteModalOpen","isDeleteFormModalOpen","setIsDeleteFormModalOpen","isSettingsOpen","setIsSettingsOpen","isShareModalOpen","setIsShareModalOpen","openModal","type","closeModal","handleCreateFolder","folderName","trim","name","forms","toggleTheme","prevState","toggleDropdown","handleDeleteFolder","index","updatedFolders","filter","_","i","handleDeleteForm","updatedForms","setForms","openDeleteFolderModal","openDeleteFormModal","closeDeleteFolderModal","closeDeleteFormModal","confirmDeleteFolder","confirmDeleteForm","openSettings","closeSettings","openShareModal","closeShareModal","handleFolderClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","checked","onChange","map","folder","e","stopPropagation","form","idx","onCreateFolder","onCreateForm","handleCreateForm","folderIndex","onConfirm","isOpen","onClose","_c","$RefreshReg$"],"sources":["D:/Cuvette/Final evaluation/form-builder/src/Components/Dashboard/Dashboard.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Dashboard.css\";\r\nimport CreateFolderModal from \"./CreateFolderModal\";\r\nimport CreateFormModal from \"./CreateFormModal\";\r\nimport DeleteFolder from \"./DeleteFolder\";\r\nimport DeleteForm from \"./DeleteForm\";\r\nimport Settings from \"./Settings\";\r\nimport ShareModal from \"./ShareModal\";\r\nimport GlobalForms from \"./GlobalForms\";\r\nimport FolderForms from \"./FolderForms\";\r\n\r\nconst Dashboard = () => {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [modalType, setModalType] = useState(null);\r\n  const [isLightTheme, setIsLightTheme] = useState(false);\r\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\r\n  const [folders, setFolders] = useState([]);\r\n  \r\n  const [selectedFolderIndex, setSelectedFolderIndex] = useState(null); // Track selected folder\r\n  const [deleteFolderIndex, setDeleteFolderIndex] = useState(null);\r\n  const [deleteFormIndex, setDeleteFormIndex] = useState(null);\r\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\r\n  const [isDeleteFormModalOpen, setIsDeleteFormModalOpen] = useState(false);\r\n  const [isSettingsOpen, setIsSettingsOpen] = useState(false);\r\n  const [isShareModalOpen, setIsShareModalOpen] = useState(false);\r\n\r\n  const openModal = (type) => {\r\n    setModalType(type);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n    setModalType(null);\r\n  };\r\n\r\n  const handleCreateFolder = (folderName) => {\r\n    if (folderName.trim()) {\r\n      setFolders([...folders, { name: folderName.trim(), forms: [] }]);\r\n    }\r\n    closeModal();\r\n  };\r\n\r\n \r\n\r\n  const toggleTheme = () => {\r\n    setIsLightTheme((prevState) => !prevState);\r\n  };\r\n\r\n  const toggleDropdown = () => {\r\n    setIsDropdownOpen((prevState) => !prevState);\r\n  };\r\n\r\n  const handleDeleteFolder = (index) => {\r\n    const updatedFolders = folders.filter((_, i) => i !== index);\r\n    setFolders(updatedFolders);\r\n    if (selectedFolderIndex === index) {\r\n      setSelectedFolderIndex(null); // Reset selected folder if it's deleted\r\n    }\r\n  };\r\n\r\n  const handleDeleteForm = (index) => {\r\n    const updatedForms = forms.filter((_, i) => i !== index);\r\n    setForms(updatedForms);\r\n  };\r\n\r\n  const openDeleteFolderModal = (index) => {\r\n    setDeleteFolderIndex(index);\r\n    setIsDeleteModalOpen(true);\r\n  };\r\n\r\n  const openDeleteFormModal = (index) => {\r\n    setDeleteFormIndex(index);\r\n    setIsDeleteFormModalOpen(true);\r\n  };\r\n\r\n  const closeDeleteFolderModal = () => {\r\n    setDeleteFolderIndex(null);\r\n    setIsDeleteModalOpen(false);\r\n  };\r\n\r\n  const closeDeleteFormModal = () => {\r\n    setDeleteFormIndex(null);\r\n    setIsDeleteFormModalOpen(false);\r\n  };\r\n\r\n  const confirmDeleteFolder = () => {\r\n    if (deleteFolderIndex !== null) {\r\n      handleDeleteFolder(deleteFolderIndex);\r\n    }\r\n    closeDeleteFolderModal();\r\n  };\r\n\r\n  const confirmDeleteForm = () => {\r\n    if (deleteFormIndex !== null) {\r\n      handleDeleteForm(deleteFormIndex);\r\n    }\r\n    closeDeleteFormModal();\r\n  };\r\n\r\n  const openSettings = () => {\r\n    setIsSettingsOpen(true);\r\n  };\r\n\r\n  const closeSettings = () => {\r\n    setIsSettingsOpen(false);\r\n  };\r\n\r\n  const openShareModal = () => {\r\n    setIsShareModalOpen(true);\r\n  };\r\n\r\n  const closeShareModal = () => {\r\n    setIsShareModalOpen(false);\r\n  };\r\n\r\n  const handleFolderClick = (index) => {\r\n    // Toggle the selected folder index\r\n    setSelectedFolderIndex(index === selectedFolderIndex ? null : index);\r\n  };\r\n\r\n  return (\r\n    <div className={`dashboard-container ${isLightTheme ? \"light\" : \"dark\"}`}>\r\n      {isSettingsOpen ? (\r\n        <Settings closeSettings={closeSettings} />\r\n      ) : (\r\n        <>\r\n          <nav className=\"navbar\">\r\n            <div className=\"logo\"></div>\r\n            <div className=\"workspace-container\">\r\n              <button className=\"workspace-button\" onClick={toggleDropdown}>\r\n                <span>Dewank Rastogi's workspace</span>\r\n                <img className=\"dropdown-icon\" src=\"drop.png\" alt=\"Dropdown Icon\" />\r\n              </button>\r\n              {isDropdownOpen && (\r\n                <div className=\"dropdown-menu\">\r\n                  <button className=\"dropdown-item\" onClick={openSettings}>Settings</button>\r\n                  <button className=\"dropdown-item logout\">Log Out</button>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"theme-toggle\">\r\n              <span>Light</span>\r\n              <label className=\"switch\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={!isLightTheme}\r\n                  onChange={toggleTheme}\r\n                />\r\n                <span className=\"slider\"></span>\r\n              </label>\r\n              <span>Dark</span>\r\n            </div>\r\n            <button className=\"share-button\" onClick={openShareModal}>\r\n              Share\r\n            </button>\r\n          </nav>\r\n\r\n          <div className=\"Dashboard-content\">\r\n            <ul className=\"Create-folder-list\">\r\n              <li>\r\n                <button className=\"create-folder\" onClick={() => openModal(\"folder\")}>\r\n                  <img src=\"folder.png\" className=\"folder\" alt=\"Folder\" />\r\n                  Create a folder\r\n                </button>\r\n              </li>\r\n              <li>\r\n                <div className=\"folder-list\">\r\n                  {folders.map((folder, index) => (\r\n                    <div\r\n                      key={index}\r\n                      className={`folder-item ${selectedFolderIndex === index ? \"selected\" : \"\"}`}\r\n                      onClick={() => handleFolderClick(index)} // Handle folder click\r\n                    >\r\n                      <span>{folder.name}</span>\r\n                      <button\r\n                        className=\"delete-button\"\r\n                        onClick={(e) => {\r\n                          e.stopPropagation(); // Prevent triggering folder click\r\n                          openDeleteFolderModal(index);\r\n                        }}\r\n                      >\r\n                        <img src=\"del.png\" alt=\"Delete\" />\r\n                      </button>\r\n                      {selectedFolderIndex === index && (\r\n                        <ul className=\"form-list\">\r\n                          {folder.forms.map((form, idx) => (\r\n                            <div key={idx} className=\"form-item\">\r\n                              <span>{form}</span>\r\n                              <button\r\n                                className=\"delete-button-form\"\r\n                                onClick={(e) => {\r\n                                  e.stopPropagation(); // Prevent triggering folder click\r\n                                  openDeleteFormModal(idx);\r\n                                }}\r\n                              >\r\n                                <img src=\"del.png\" className=\"del-form\" alt=\"Delete\" />\r\n                              </button>\r\n                            </div>\r\n                          ))}\r\n                        </ul>\r\n                      )}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </li>\r\n            </ul>\r\n\r\n            {/* Single \"Create Typebot\" Button globally placed */}\r\n            <ul className=\"Create-form-list\">\r\n              <li>\r\n                <button className=\"create-typebot\" onClick={() => openModal(\"form\")}>\r\n                  <p>\r\n                    <span className=\"plus\">+</span> <br />\r\n                    Create a typebot\r\n                  </p>\r\n                </button>\r\n              </li>\r\n              <li className=\"form-li\">\r\n               <GlobalForms/>\r\n               <FolderForms/>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n\r\n          {isModalOpen && modalType === \"folder\" && (\r\n            <CreateFolderModal\r\n              closeModal={closeModal}\r\n              isLightTheme={isLightTheme}\r\n              onCreateFolder={handleCreateFolder}\r\n            />\r\n          )}\r\n          {isModalOpen && modalType === \"form\" && (\r\n            <CreateFormModal\r\n              closeModal={closeModal}\r\n              isLightTheme={isLightTheme}\r\n              onCreateForm={handleCreateForm}\r\n              folderIndex={selectedFolderIndex} // Pass selected folder index to form modal\r\n            />\r\n          )}\r\n          {isDeleteModalOpen && (\r\n            <DeleteFolder\r\n              closeModal={closeDeleteFolderModal}\r\n              isLightTheme={isLightTheme}\r\n              onConfirm={confirmDeleteFolder}\r\n            />\r\n          )}\r\n          {isDeleteFormModalOpen && (\r\n            <DeleteForm\r\n              closeModal={closeDeleteFormModal}\r\n              isLightTheme={isLightTheme}\r\n              onConfirm={confirmDeleteForm}\r\n            />\r\n          )}\r\n          {isShareModalOpen && (\r\n            <ShareModal isOpen={isShareModalOpen} onClose={closeShareModal} />\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}