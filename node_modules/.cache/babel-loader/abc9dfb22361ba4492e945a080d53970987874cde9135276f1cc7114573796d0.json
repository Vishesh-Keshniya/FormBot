{"ast":null,"code":"var _jsxFileName = \"D:\\\\Cuvette\\\\Final evaluation\\\\form-builder\\\\src\\\\Components\\\\Dashboard\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Dashboard.css\";\nimport CreateFolderModal from \"./CreateFolderModal\";\nimport CreateFormModal from \"./CreateFormModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [modalType, setModalType] = useState(null);\n  const [isLightTheme, setIsLightTheme] = useState(false);\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [folders, setFolders] = useState([]); // State for folders\n\n  // Function to open modal with specified type\n  const openModal = type => {\n    setModalType(type);\n    setIsModalOpen(true);\n  };\n\n  // Function to close modal\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setModalType(null);\n  };\n\n  // Function to handle folder creation\n  const handleCreateFolder = folderName => {\n    if (folderName.trim()) {\n      setFolders([...folders, folderName.trim()]);\n    }\n    closeModal();\n  };\n\n  // Toggle theme\n  const toggleTheme = () => {\n    setIsLightTheme(prevState => !prevState);\n  };\n\n  // Toggle dropdown menu\n  const toggleDropdown = () => {\n    setIsDropdownOpen(prevState => !prevState);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `dashboard-container ${isLightTheme ? \"light\" : \"dark\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"workspace-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"workspace-button\",\n          onClick: toggleDropdown,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Dewank Rastogi's workspace\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"dropdown-icon\",\n            src: \"drop.png\",\n            alt: \"Dropdown Icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), isDropdownOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-menu\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"dropdown-item\",\n            children: \"Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"dropdown-item logout\",\n            children: \"Log Out\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"theme-toggle\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Light\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"switch\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: !isLightTheme,\n            onChange: toggleTheme\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"slider\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Dark\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"share-button\",\n        children: \"Share\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Create-part\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"create-folder\",\n          onClick: () => openModal(\"folder\"),\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"folder.png\",\n            className: \"folder\",\n            alt: \"Folder\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 11\n          }, this), \"Create a folder\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 38\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"folder-list\",\n          children: folders.map((folder, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"folder-item\",\n            children: folder\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"create-typebot\",\n        onClick: () => openModal(\"form\"),\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"plus\",\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 45\n          }, this), \"Create a typebot\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), isModalOpen && modalType === \"folder\" && /*#__PURE__*/_jsxDEV(CreateFolderModal, {\n      closeModal: closeModal,\n      isLightTheme: isLightTheme,\n      onCreateFolder: handleCreateFolder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this), isModalOpen && modalType === \"form\" && /*#__PURE__*/_jsxDEV(CreateFormModal, {\n      closeModal: closeModal,\n      isLightTheme: isLightTheme\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"jBK1trKtgPumWzuseDH+tUO7LIk=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","CreateFolderModal","CreateFormModal","jsxDEV","_jsxDEV","Dashboard","_s","isModalOpen","setIsModalOpen","modalType","setModalType","isLightTheme","setIsLightTheme","isDropdownOpen","setIsDropdownOpen","folders","setFolders","openModal","type","closeModal","handleCreateFolder","folderName","trim","toggleTheme","prevState","toggleDropdown","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","checked","onChange","map","folder","index","onCreateFolder","_c","$RefreshReg$"],"sources":["D:/Cuvette/Final evaluation/form-builder/src/Components/Dashboard/Dashboard.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Dashboard.css\";\r\nimport CreateFolderModal from \"./CreateFolderModal\";\r\nimport CreateFormModal from \"./CreateFormModal\";\r\n\r\nconst Dashboard = () => {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [modalType, setModalType] = useState(null);\r\n  const [isLightTheme, setIsLightTheme] = useState(false);\r\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\r\n  const [folders, setFolders] = useState([]); // State for folders\r\n\r\n  // Function to open modal with specified type\r\n  const openModal = (type) => {\r\n    setModalType(type);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  // Function to close modal\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n    setModalType(null);\r\n  };\r\n\r\n  // Function to handle folder creation\r\n  const handleCreateFolder = (folderName) => {\r\n    if (folderName.trim()) {\r\n      setFolders([...folders, folderName.trim()]);\r\n    }\r\n    closeModal();\r\n  };\r\n\r\n  // Toggle theme\r\n  const toggleTheme = () => {\r\n    setIsLightTheme((prevState) => !prevState);\r\n  };\r\n\r\n  // Toggle dropdown menu\r\n  const toggleDropdown = () => {\r\n    setIsDropdownOpen((prevState) => !prevState);\r\n  };\r\n\r\n  return (\r\n    <div className={`dashboard-container ${isLightTheme ? \"light\" : \"dark\"}`}>\r\n      {/* Navbar */}\r\n      <nav className=\"navbar\">\r\n        <div className=\"workspace-container\">\r\n          <button className=\"workspace-button\" onClick={toggleDropdown}>\r\n            <span>Dewank Rastogi's workspace</span>\r\n            <img className=\"dropdown-icon\" src=\"drop.png\" alt=\"Dropdown Icon\" />\r\n          </button>\r\n\r\n          {/* Dropdown menu */}\r\n          {isDropdownOpen && (\r\n            <div className=\"dropdown-menu\">\r\n              <button className=\"dropdown-item\">Settings</button>\r\n              <button className=\"dropdown-item logout\">Log Out</button>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"theme-toggle\">\r\n          <span>Light</span>\r\n          <label className=\"switch\">\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={!isLightTheme}\r\n              onChange={toggleTheme}\r\n            />\r\n            <span className=\"slider\"></span>\r\n          </label>\r\n          <span>Dark</span>\r\n        </div>\r\n        <button className=\"share-button\">Share</button>\r\n      </nav>\r\n\r\n      {/* Dashboard Content */}\r\n      <div className=\"dashboard-content\">\r\n       <div className=\"Create-part\"> <button className=\"create-folder\" onClick={() => openModal(\"folder\")}>\r\n          <img src=\"folder.png\" className=\"folder\" alt=\"Folder\" />\r\n          Create a folder\r\n        </button>\r\n        <div className=\"folder-list\">\r\n          {folders.map((folder, index) => (\r\n            <div key={index} className=\"folder-item\">\r\n              {folder}\r\n            </div>\r\n          ))}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Create Typebot button */}\r\n        <button className=\"create-typebot\" onClick={() => openModal(\"form\")}>\r\n          <p>\r\n            <span className=\"plus\">+</span> <br />\r\n            Create a typebot\r\n          </p>\r\n        </button>\r\n\r\n        {/* Render folders */}\r\n        \r\n      </div>\r\n\r\n      {/* Conditional rendering of modals */}\r\n      {isModalOpen && modalType === \"folder\" && (\r\n        <CreateFolderModal\r\n          closeModal={closeModal}\r\n          isLightTheme={isLightTheme}\r\n          onCreateFolder={handleCreateFolder}\r\n        />\r\n      )}\r\n      {isModalOpen && modalType === \"form\" && (\r\n        <CreateFormModal closeModal={closeModal} isLightTheme={isLightTheme} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}