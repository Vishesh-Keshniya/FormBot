{"ast":null,"code":"var _jsxFileName = \"D:\\\\Cuvette\\\\Final evaluation\\\\form-builder\\\\src\\\\Components\\\\Dashboard\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Dashboard.css\";\nimport CreateFolderModal from \"./CreateFolderModal\";\nimport CreateFormModal from \"./CreateFormModal\";\nimport DeleteForm from \"./DeleteForm\"; // Import DeleteForm modal\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [modalType, setModalType] = useState(null);\n  const [isLightTheme, setIsLightTheme] = useState(false);\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [folders, setFolders] = useState([]);\n  const [forms, setForms] = useState([]);\n  const [deleteFormIndex, setDeleteFormIndex] = useState(null); // Track which form to delete\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n\n  // Open modal with specified type\n  const openModal = type => {\n    setModalType(type);\n    setIsModalOpen(true);\n  };\n\n  // Close modal\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setModalType(null);\n  };\n\n  // Handle form creation\n  const handleCreateForm = formName => {\n    if (formName.trim()) {\n      setForms([...forms, formName.trim()]);\n    }\n    closeModal();\n  };\n\n  // Toggle theme\n  const toggleTheme = () => {\n    setIsLightTheme(prevState => !prevState);\n  };\n\n  // Toggle dropdown menu\n  const toggleDropdown = () => {\n    setIsDropdownOpen(prevState => !prevState);\n  };\n\n  // Open delete form modal and set the index of the form to be deleted\n  const openDeleteFormModal = index => {\n    setDeleteFormIndex(index);\n    setIsDeleteModalOpen(true);\n  };\n\n  // Close delete modal\n  const closeDeleteFormModal = () => {\n    setDeleteFormIndex(null);\n    setIsDeleteModalOpen(false);\n  };\n\n  // Confirm form deletion\n  const confirmDeleteForm = () => {\n    if (deleteFormIndex !== null) {\n      const updatedForms = forms.filter((_, i) => i !== deleteFormIndex);\n      setForms(updatedForms);\n    }\n    closeDeleteFormModal();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `dashboard-container ${isLightTheme ? \"light\" : \"dark\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Dashboard-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"Create-folder-list\",\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"create-folder\",\n            onClick: () => openModal(\"folder\"),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"folder.png\",\n              className: \"folder\",\n              alt: \"Folder\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this), \"Create a folder\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"Create-form-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"create-typebot\",\n            onClick: () => openModal(\"form\"),\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"plus\",\n                children: \"+\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 17\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 49\n              }, this), \"Create a typebot\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"form-li\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-list\",\n            children: forms.map((form, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: form\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"delete-button-form\",\n                onClick: () => openDeleteFormModal(index) // Open delete modal on click\n                ,\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: \"del.png\",\n                  className: \"del-form\",\n                  alt: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), isModalOpen && modalType === \"form\" && /*#__PURE__*/_jsxDEV(CreateFormModal, {\n      closeModal: closeModal,\n      isLightTheme: isLightTheme,\n      onCreateForm: handleCreateForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this), isDeleteModalOpen && /*#__PURE__*/_jsxDEV(DeleteForm, {\n      closeModal: closeDeleteFormModal,\n      isLightTheme: isLightTheme,\n      onConfirm: confirmDeleteForm // Pass confirmation handler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"7BEOlV4vDeEt54f4q64rUDPT7tM=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","CreateFolderModal","CreateFormModal","DeleteForm","jsxDEV","_jsxDEV","Dashboard","_s","isModalOpen","setIsModalOpen","modalType","setModalType","isLightTheme","setIsLightTheme","isDropdownOpen","setIsDropdownOpen","folders","setFolders","forms","setForms","deleteFormIndex","setDeleteFormIndex","isDeleteModalOpen","setIsDeleteModalOpen","openModal","type","closeModal","handleCreateForm","formName","trim","toggleTheme","prevState","toggleDropdown","openDeleteFormModal","index","closeDeleteFormModal","confirmDeleteForm","updatedForms","filter","_","i","className","children","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","map","form","onCreateForm","onConfirm","_c","$RefreshReg$"],"sources":["D:/Cuvette/Final evaluation/form-builder/src/Components/Dashboard/Dashboard.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Dashboard.css\";\r\nimport CreateFolderModal from \"./CreateFolderModal\";\r\nimport CreateFormModal from \"./CreateFormModal\";\r\nimport DeleteForm from \"./DeleteForm\"; // Import DeleteForm modal\r\n\r\nconst Dashboard = () => {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [modalType, setModalType] = useState(null);\r\n  const [isLightTheme, setIsLightTheme] = useState(false);\r\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\r\n  const [folders, setFolders] = useState([]);\r\n  const [forms, setForms] = useState([]);\r\n  const [deleteFormIndex, setDeleteFormIndex] = useState(null); // Track which form to delete\r\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\r\n\r\n  // Open modal with specified type\r\n  const openModal = (type) => {\r\n    setModalType(type);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  // Close modal\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n    setModalType(null);\r\n  };\r\n\r\n  // Handle form creation\r\n  const handleCreateForm = (formName) => {\r\n    if (formName.trim()) {\r\n      setForms([...forms, formName.trim()]);\r\n    }\r\n    closeModal();\r\n  };\r\n\r\n  // Toggle theme\r\n  const toggleTheme = () => {\r\n    setIsLightTheme((prevState) => !prevState);\r\n  };\r\n\r\n  // Toggle dropdown menu\r\n  const toggleDropdown = () => {\r\n    setIsDropdownOpen((prevState) => !prevState);\r\n  };\r\n\r\n  // Open delete form modal and set the index of the form to be deleted\r\n  const openDeleteFormModal = (index) => {\r\n    setDeleteFormIndex(index);\r\n    setIsDeleteModalOpen(true);\r\n  };\r\n\r\n  // Close delete modal\r\n  const closeDeleteFormModal = () => {\r\n    setDeleteFormIndex(null);\r\n    setIsDeleteModalOpen(false);\r\n  };\r\n\r\n  // Confirm form deletion\r\n  const confirmDeleteForm = () => {\r\n    if (deleteFormIndex !== null) {\r\n      const updatedForms = forms.filter((_, i) => i !== deleteFormIndex);\r\n      setForms(updatedForms);\r\n    }\r\n    closeDeleteFormModal();\r\n  };\r\n\r\n  return (\r\n    <div className={`dashboard-container ${isLightTheme ? \"light\" : \"dark\"}`}>\r\n      {/* Navbar and other content */}\r\n      <div className=\"Dashboard-content\">\r\n        <ul className=\"Create-folder-list\">\r\n          <li>\r\n            <button className=\"create-folder\" onClick={() => openModal(\"folder\")}>\r\n              <img src=\"folder.png\" className=\"folder\" alt=\"Folder\" />\r\n              Create a folder\r\n            </button>\r\n          </li>\r\n        </ul>\r\n\r\n        <ul className=\"Create-form-list\">\r\n          <li>\r\n            <button\r\n              className=\"create-typebot\"\r\n              onClick={() => openModal(\"form\")}\r\n            >\r\n              <p>\r\n                <span className=\"plus\">+</span> <br />\r\n                Create a typebot\r\n              </p>\r\n            </button>\r\n          </li>\r\n\r\n          <li className=\"form-li\">\r\n            <div className=\"form-list\">\r\n              {forms.map((form, index) => (\r\n                <div key={index} className=\"form-item\">\r\n                  <span>{form}</span>\r\n                  <button\r\n                    className=\"delete-button-form\"\r\n                    onClick={() => openDeleteFormModal(index)} // Open delete modal on click\r\n                  >\r\n                    <img src=\"del.png\" className=\"del-form\" alt=\"Delete\" />\r\n                  </button>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n\r\n      {/* Conditional rendering of modals */}\r\n      {isModalOpen && modalType === \"form\" && (\r\n        <CreateFormModal\r\n          closeModal={closeModal}\r\n          isLightTheme={isLightTheme}\r\n          onCreateForm={handleCreateForm}\r\n        />\r\n      )}\r\n      {isDeleteModalOpen && (\r\n        <DeleteForm\r\n          closeModal={closeDeleteFormModal}\r\n          isLightTheme={isLightTheme}\r\n          onConfirm={confirmDeleteForm} // Pass confirmation handler\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}